var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/directives/AngularCollisionDirective.html",[0,0.716,1,0.221]],["body/directives/AngularCollisionDirective.html",[0,0.691,1,0.35,2,1.393,3,0.355,4,0.355,5,0.274,6,0.842,7,0.842,8,0.684,9,0.691,10,1.601,11,0.846,12,1.393,13,1.309,14,1.601,15,0.447,16,0.858,17,1.203,18,2.277,19,1.434,20,1.601,21,1.286,22,1.029,23,2.059,24,1.601,25,1.294,26,1.601,27,1.309,28,1.801,29,1.801,30,0.951,31,1.801,32,1.801,33,2.059,34,1.601,35,2.154,36,1.601,37,1.601,38,1.601,39,2.154,40,1.601,41,2.154,42,2.154,43,1.063,44,1.393,45,1.948,46,2.59,47,2.154,48,1.309,49,0.084,50,1.309,51,1.043,52,0.858,53,1.309,54,1.393,55,1.229,56,1.393,57,1.134,58,2.447,59,2.447,60,1.309,61,1.393,62,2.147,63,1.393,64,1.393,65,1.393,66,1.393,67,1.309,68,1.309,69,1.309,70,2.147,71,1.301,72,1.393,73,1.393,74,1.393,75,0.691,76,0.951,77,1.393,78,0.691,79,1.393,80,1.601,81,0.691,82,1.393,83,1.948,84,1.393,85,1.309,86,1.058,87,1.309,88,1.601,89,1.393,90,1.203,91,0.863,92,1.393,93,1.393,94,1.393,95,1.393,96,0.846,97,1.393,98,0.549,99,0.549,100,1.601,101,1.801,102,0.846,103,0.274,104,0.355,105,0.951,106,1.309,107,1.309,108,0.671,109,0.213,110,0.274,111,1.088,112,0.555,113,0.846,114,0.138,115,1.309,116,0.549,117,0.846,118,0.846,119,0.846,120,1.309,121,0.846,122,1.601,123,1.309,124,1.309,125,0.846,126,0.691,127,0.846,128,0.846,129,0.846,130,0.447,131,0.846,132,0.846,133,0.846,134,0.846,135,0.846,136,1.309,137,0.846,138,0.846,139,0.846,140,0.846,141,0.846,142,0.025,143,0.039,144,0.025]],["title/modules/AngularCollisionModule.html",[145,1.355,146,1.095]],["body/modules/AngularCollisionModule.html",[1,0.443,3,0.706,4,0.706,5,0.546,6,0.689,7,0.689,25,1.72,27,1.685,46,1.685,48,1.685,49,0.084,50,1.685,51,0.706,52,1.104,70,1.685,99,0.978,103,0.546,108,0.706,114,0.274,116,0.978,142,0.05,143,0.064,144,0.05,145,1.685,146,2.143,147,1.685,148,1.362,149,2.117,150,2.93,151,2.117,152,2.673,153,2.93,154,2.117,155,2.117,156,2.117,157,2.673,158,2.117,159,2.117,160,2.773,161,3.502,162,2.773,163,1.335,164,2.773,165,3.838,166,3.838,167,1.395,168,1.362,169,2.773,170,1.362,171,2.773,172,2.773]],["title/injectables/AngularCollisionService.html",[173,0.716,174,0.888]],["body/injectables/AngularCollisionService.html",[1,0.416,3,0.337,4,0.337,5,0.26,6,0.769,7,0.769,9,0.425,11,0.664,15,0.425,16,0.824,17,1.184,19,1.357,21,1.254,22,0.925,27,1.257,30,0.925,43,1.01,46,2.336,48,2.016,49,0.085,50,2.016,51,0.961,52,1.381,55,0.664,57,0.818,58,1.946,59,1.946,70,2.016,71,1.211,75,0.664,76,1.152,78,0.664,81,0.664,90,1.004,91,0.734,96,1.113,98,0.337,99,0.734,103,0.26,104,0.337,105,0.425,108,0.649,109,0.131,110,0.567,111,1.065,114,0.205,116,0.527,126,1.065,130,0.818,142,0.024,143,0.038,144,0.024,163,0.925,167,0.527,168,0.65,170,0.65,173,0.664,174,0.824,175,1.323,176,0.65,177,1.549,178,2.016,179,1.549,180,2.069,181,2.069,182,1.549,183,1.549,184,2.069,185,1.323,186,2.069,187,1.323,188,1.257,189,1.323,190,1.257,191,1.257,192,1.752,193,1.323,194,1.257,195,1.752,196,1.257,197,1.257,198,2.066,199,1.257,200,1.323,201,1.323,202,2.241,203,1.323,204,1.323,205,1.323,206,1.257,207,1.323,208,1.257,209,1.015,210,1.323,211,2.016,212,1.257,213,2.107,214,1.323,215,1.752,216,1.323,217,1.257,218,0.804,219,0.804,220,0.804,221,0.804,222,0.804,223,0.804,224,0.804,225,0.804,226,0.804,227,0.804,228,0.804,229,0.804,230,0.804,231,0.804,232,0.804,233,1.257,234,0.804,235,0.804,236,0.804,237,0.804,238,0.804,239,0.804,240,0.804,241,0.804,242,1.257,243,1.257,244,1.257,245,0.804,246,0.804,247,0.804,248,0.804,249,1.257,250,1.257,251,0.804,252,0.804,253,1.549,254,1.257,255,0.804,256,0.804,257,0.804,258,1.752,259,0.804,260,0.804,261,0.804,262,0.804,263,0.804,264,0.804,265,1.257,266,0.804,267,0.804,268,0.804,269,0.804,270,0.804,271,1.257,272,1.257,273,0.804,274,0.804,275,0.804,276,0.804,277,0.804]],["title/interfaces/NgcCollisionChange.html",[109,0.221,112,0.888]],["body/interfaces/NgcCollisionChange.html",[0,0.893,1,0.38,3,0.501,4,0.501,5,0.387,6,0.387,7,0.387,8,0.966,9,0.631,10,1.69,11,0.893,13,1.194,14,1.69,15,0.631,16,1.108,17,1.036,18,2.494,19,1.401,20,1.194,21,1.268,22,1.234,23,1.69,24,1.194,25,0.966,26,1.194,28,1.194,29,1.194,30,0.631,31,1.194,32,1.194,33,1.69,34,1.194,36,1.194,37,1.194,38,1.194,40,1.194,45,1.69,49,0.085,51,0.822,53,1.194,55,1.268,57,1.234,60,1.194,62,2.249,67,1.194,68,1.194,69,1.194,71,1.268,75,0.631,76,0.893,78,0.631,80,1.69,81,0.631,83,2.335,85,1.194,86,0.966,87,1.194,88,1.69,90,1.188,91,0.894,96,0.893,98,0.501,99,0.708,100,1.961,101,2.132,102,1.194,103,0.387,104,0.501,105,1.126,106,1.69,107,1.69,108,0.822,109,0.275,110,0.387,111,1.234,112,1.108,113,1.194,114,0.194,115,1.69,116,0.708,117,1.194,118,1.194,119,1.194,120,1.69,121,1.194,122,1.961,123,1.69,124,1.69,125,1.194,126,0.893,127,1.194,128,1.194,129,1.194,130,0.631,131,1.194,132,1.194,133,1.194,134,1.194,135,1.194,136,1.69,137,1.194,138,1.194,139,1.194,140,1.194,141,1.194,142,0.036,143,0.051,144,0.036,278,0.966]],["title/classes/NgcConfig.html",[114,0.221,163,0.716]],["body/classes/NgcConfig.html",[1,0.387,3,0.446,4,0.446,5,0.345,6,0.345,7,0.345,9,0.563,11,0.822,17,0.971,19,1.225,21,1.187,22,1.068,30,0.563,49,0.085,52,0.698,55,0.563,57,0.971,71,1.136,75,0.563,76,1.068,78,0.563,81,0.563,90,0.971,91,0.652,96,1.187,98,0.446,99,0.848,103,0.345,104,0.446,105,0.563,108,0.771,109,0.173,110,0.655,111,0.822,114,0.253,116,0.446,126,1.187,130,0.971,142,0.032,143,0.047,144,0.032,163,0.971,167,0.698,168,0.861,170,0.861,173,0.822,174,0.698,176,0.861,177,1.065,178,1.556,179,1.065,182,1.065,183,1.065,188,1.065,190,1.065,191,1.065,192,1.556,194,1.065,195,1.838,196,1.065,197,1.065,198,2.043,199,1.065,202,2.151,206,1.065,208,1.065,209,1.02,211,1.838,212,1.065,213,2.022,215,1.556,217,1.065,218,1.065,219,1.065,220,1.065,221,1.065,222,1.065,223,1.065,224,1.065,225,1.065,226,1.065,227,1.065,228,1.065,229,1.065,230,1.065,231,1.065,232,1.065,233,1.556,234,1.065,235,1.065,236,1.065,237,1.065,238,1.065,239,1.065,240,1.065,241,1.065,242,1.556,243,1.556,244,1.556,245,1.065,246,1.065,247,1.065,248,1.065,249,1.556,250,1.556,251,1.065,252,1.065,253,1.838,254,1.556,255,1.065,256,1.065,257,1.065,258,2.022,259,1.065,260,1.065,261,1.065,262,1.065,263,1.065,264,1.065,265,1.556,266,1.065,267,1.065,268,1.065,269,1.065,270,1.065,271,1.556,272,1.556,273,1.065,274,1.065,275,1.065,276,1.065,277,1.065,279,1.753]],["title/interfaces/NgcElementChange.html",[109,0.221,110,0.439]],["body/interfaces/NgcElementChange.html",[0,0.899,1,0.381,3,0.506,4,0.506,5,0.391,6,0.391,7,0.391,8,0.976,9,0.638,10,1.702,11,0.899,13,1.207,14,1.702,15,0.638,16,1.116,17,1.042,18,2.343,19,1.403,20,1.207,21,1.339,22,1.042,23,1.702,24,1.207,25,0.976,26,1.207,28,1.207,29,1.207,30,0.638,31,1.207,32,1.207,33,1.702,34,1.207,36,1.207,37,1.207,38,1.207,40,1.207,45,1.702,49,0.085,51,0.714,53,1.207,55,1.193,57,1.131,60,1.207,62,2.258,67,1.207,68,1.207,69,1.207,71,1.272,75,0.638,76,0.899,78,0.638,80,1.702,81,0.638,83,1.972,85,1.207,86,0.976,87,1.207,88,1.702,90,1.193,91,0.898,96,0.899,98,0.506,99,0.714,100,1.972,101,2.142,102,1.207,103,0.391,104,0.506,105,1.131,106,1.702,107,1.702,108,0.827,109,0.277,110,0.551,111,1.354,112,0.791,113,1.207,114,0.196,115,1.702,116,0.714,117,1.207,118,1.207,119,1.207,120,1.702,121,1.207,122,1.972,123,1.702,124,1.702,125,1.207,126,0.899,127,1.207,128,1.207,129,1.207,130,0.638,131,1.207,132,1.207,133,1.207,134,1.207,135,1.207,136,1.702,137,1.207,138,1.207,139,1.207,140,1.207,141,1.207,142,0.036,143,0.051,144,0.036,278,0.976]],["title/interfaces/NgcTrackedElement.html",[109,0.221,209,0.888]],["body/interfaces/NgcTrackedElement.html",[1,0.385,3,0.436,4,0.436,5,0.337,6,0.337,7,0.337,9,0.55,11,0.808,15,0.55,16,1.003,17,0.959,19,1.217,21,1.177,22,1.217,30,0.55,49,0.085,51,0.642,52,0.683,55,0.55,57,1.126,71,1.126,75,0.55,76,1.057,78,0.55,81,0.55,90,0.959,91,0.642,96,1.313,98,0.436,99,0.839,103,0.337,104,0.436,105,0.55,108,0.761,109,0.169,110,0.648,111,0.808,114,0.249,116,0.436,126,1.177,130,0.959,142,0.031,143,0.046,144,0.031,163,0.808,167,0.683,168,0.842,170,0.842,173,0.808,174,0.683,176,0.842,177,1.041,178,1.53,179,1.041,182,1.041,183,1.041,188,1.041,190,1.041,191,1.041,192,1.53,194,1.041,195,1.815,196,1.041,197,1.041,198,2.034,199,1.041,202,2.131,206,1.041,208,1.041,209,1.19,211,1.815,212,1.041,213,2,215,1.53,217,1.041,218,1.041,219,1.041,220,1.041,221,1.041,222,1.041,223,1.041,224,1.041,225,1.041,226,1.041,227,1.041,228,1.041,229,1.041,230,1.041,231,1.041,232,1.041,233,1.53,234,1.041,235,1.041,236,1.041,237,1.041,238,1.041,239,1.041,240,1.041,241,1.041,242,1.53,243,1.53,244,1.53,245,1.041,246,1.041,247,1.041,248,1.041,249,1.53,250,1.53,251,1.041,252,1.041,253,1.815,254,1.53,255,1.041,256,1.041,257,1.041,258,2,259,1.041,260,1.041,261,1.041,262,1.041,263,1.041,264,1.041,265,1.53,266,1.041,267,1.041,268,1.041,269,1.041,270,1.041,271,1.53,272,1.53,273,1.041,274,1.041,275,1.041,276,1.041,277,1.041,278,0.842]],["title/coverage.html",[280,2.317]],["body/coverage.html",[0,0.998,1,0.307,5,0.612,6,0.859,7,0.859,8,1.984,49,0.081,51,0.792,91,0.792,98,1.069,109,0.399,110,0.612,112,1.238,114,0.307,142,0.056,143,0.068,144,0.056,163,0.998,173,0.998,174,1.238,176,1.984,209,1.238,280,2.373,281,2.373,282,3.108,283,3.108,284,3.108,285,3.108,286,3.108,287,3.758,288,3.108,289,3.108,290,3.108,291,3.108,292,3.108]],["title/dependencies.html",[148,1.316,293,1.866]],["body/dependencies.html",[49,0.084,103,0.637,104,0.825,142,0.059,143,0.07,144,0.059,148,1.591,294,3.239,295,4.489,296,3.239,297,3.239,298,3.239,299,3.852,300,2.941,301,3.239,302,3.239,303,2.473,304,3.239,305,3.239,306,3.239,307,3.239,308,3.239,309,3.239]],["title/index.html",[15,0.599,310,1.866,311,1.866]],["body/index.html",[49,0.072,86,1.468,142,0.054,143,0.067,144,0.054,167,1.19,198,1.468,281,2.801,303,2.281,312,2.988,313,2.988,314,2.988,315,2.988,316,3.668,317,3.668,318,3.97,319,3.668,320,3.668,321,4.14,322,2.988,323,2.988,324,2.988,325,2.988,326,3.668,327,3.668,328,2.988,329,2.988,330,2.988,331,4.14,332,2.988,333,4.249,334,2.988,335,2.988,336,2.988,337,2.988,338,2.988,339,2.988,340,2.988,341,2.988,342,2.988,343,3.668,344,4.14,345,2.988,346,3.668,347,3.668,348,2.988,349,4.14,350,2.988,351,2.988]],["title/modules.html",[147,1.844]],["body/modules.html",[49,0.074,142,0.064,143,0.074,144,0.064,146,1.737,147,2.149,300,2.7,352,3.536,353,3.536,354,3.536]],["title/overview.html",[355,2.317]],["body/overview.html",[0,1.042,1,0.441,49,0.077,114,0.321,142,0.059,143,0.07,144,0.059,145,2.344,146,2.136,148,1.595,149,2.479,150,2.479,151,2.479,152,2.479,153,2.479,154,2.479,155,2.479,156,2.479,157,2.945,158,2.479,159,2.479,173,1.042,278,1.595,355,2.479,356,4.258,357,3.247]]],"invertedIndex":[["",{"_index":49,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["0",{"_index":98,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{}}}],["0.10.2",{"_index":309,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":288,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":287,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":286,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":356,"title":{},"body":{"overview.html":{}}}],["10",{"_index":313,"title":{},"body":{"index.html":{}}}],["10.1.5",{"_index":295,"title":{},"body":{"dependencies.html":{}}}],["10.2.4",{"_index":304,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":60,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["2.0.0",{"_index":307,"title":{},"body":{"dependencies.html":{}}}],["22",{"_index":284,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":357,"title":{},"body":{"overview.html":{}}}],["5/22",{"_index":285,"title":{},"body":{"coverage.html":{}}}],["6.6.0",{"_index":305,"title":{},"body":{"dependencies.html":{}}}],["66",{"_index":289,"title":{},"body":{"coverage.html":{}}}],["8/12",{"_index":290,"title":{},"body":{"coverage.html":{}}}],["active",{"_index":18,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["add",{"_index":115,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["addtrackedelement",{"_index":180,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["addtrackedelement(element",{"_index":188,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["aftercontentchecked",{"_index":10,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["angular",{"_index":167,"title":{},"body":{"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{},"index.html":{}}}],["angular/animations",{"_index":294,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":303,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["angular/common",{"_index":296,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler",{"_index":297,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":103,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":298,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":299,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":302,"title":{},"body":{"dependencies.html":{}}}],["angularcollisiondirective",{"_index":1,"title":{"directives/AngularCollisionDirective.html":{}},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{},"overview.html":{}}}],["angularcollisiondirective.uid",{"_index":121,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["angularcollisionmodule",{"_index":146,"title":{"modules/AngularCollisionModule.html":{}},"body":{"modules/AngularCollisionModule.html":{},"modules.html":{},"overview.html":{}}}],["angularcollisionservice",{"_index":174,"title":{"injectables/AngularCollisionService.html":{}},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{}}}],["app",{"_index":320,"title":{},"body":{"index.html":{}}}],["array.isarray(elements",{"_index":242,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["artifacts",{"_index":335,"title":{},"body":{"index.html":{}}}],["auto",{"_index":316,"title":{},"body":{"index.html":{}}}],["between",{"_index":196,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["boolean",{"_index":55,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["bootstrap",{"_index":151,"title":{},"body":{"modules/AngularCollisionModule.html":{},"overview.html":{}}}],["browse",{"_index":354,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":300,"title":{},"body":{"dependencies.html":{},"modules.html":{}}}],["build",{"_index":333,"title":{},"body":{"index.html":{}}}],["change",{"_index":264,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["check",{"_index":67,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["checkelementscollision",{"_index":181,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["checkelementscollision(first",{"_index":191,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["checkposition",{"_index":28,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["checks",{"_index":194,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["class",{"_index":114,"title":{"classes/NgcConfig.html":{}},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{},"overview.html":{}}}],["class.collision",{"_index":42,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["classes",{"_index":279,"title":{},"body":{"classes/NgcConfig.html":{}}}],["cluster_angularcollisionmodule",{"_index":154,"title":{},"body":{"modules/AngularCollisionModule.html":{},"overview.html":{}}}],["cluster_angularcollisionmodule_declarations",{"_index":156,"title":{},"body":{"modules/AngularCollisionModule.html":{},"overview.html":{}}}],["cluster_angularcollisionmodule_exports",{"_index":155,"title":{},"body":{"modules/AngularCollisionModule.html":{},"overview.html":{}}}],["collidedelements",{"_index":83,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["collidedids",{"_index":127,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["collision",{"_index":86,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"index.html":{}}}],["collision.directive",{"_index":168,"title":{},"body":{"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["collision.directive.ts",{"_index":8,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"coverage.html":{}}}],["collision.directive.ts:108",{"_index":77,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:117",{"_index":79,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:32",{"_index":56,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:33",{"_index":61,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:34",{"_index":54,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:36",{"_index":64,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:39",{"_index":63,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:43",{"_index":65,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:45",{"_index":95,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:46",{"_index":92,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:47",{"_index":94,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:49",{"_index":97,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:50",{"_index":89,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:51",{"_index":47,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:53",{"_index":93,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:57",{"_index":72,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:63",{"_index":73,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:74",{"_index":84,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:85",{"_index":66,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:95",{"_index":74,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.module.ts",{"_index":160,"title":{},"body":{"modules/AngularCollisionModule.html":{}}}],["collision.module.ts:10",{"_index":164,"title":{},"body":{"modules/AngularCollisionModule.html":{}}}],["collision.service",{"_index":169,"title":{},"body":{"modules/AngularCollisionModule.html":{}}}],["collision.service.ts",{"_index":176,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{}}}],["collision.service.ts:100",{"_index":205,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["collision.service.ts:121",{"_index":193,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["collision.service.ts:137",{"_index":189,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["collision.service.ts:155",{"_index":207,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["collision.service.ts:23",{"_index":210,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["collision.service.ts:28",{"_index":214,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["collision.service.ts:33",{"_index":216,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["collision.service.ts:37",{"_index":186,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["collision.service.ts:69",{"_index":200,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["collision.service.ts:80",{"_index":203,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["collision/src/lib/angular",{"_index":7,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{}}}],["collisionactive",{"_index":118,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["collisionactivechange",{"_index":40,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["collisions",{"_index":195,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["collisions.length",{"_index":239,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["collisions.push(innerelement.element",{"_index":237,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["commit",{"_index":328,"title":{},"body":{"index.html":{}}}],["compodoc",{"_index":332,"title":{},"body":{"index.html":{}}}],["config",{"_index":116,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["const",{"_index":130,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["constructor",{"_index":43,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{}}}],["constructor(@optional",{"_index":223,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["constructor(config",{"_index":185,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["constructor(element",{"_index":44,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["constructor(public",{"_index":119,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["coverage",{"_index":280,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["customevents",{"_index":36,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["declarations",{"_index":150,"title":{},"body":{"modules/AngularCollisionModule.html":{},"overview.html":{}}}],["default",{"_index":58,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{}}}],["defined",{"_index":46,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{}}}],["demo",{"_index":319,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":148,"title":{"dependencies.html":{}},"body":{"modules/AngularCollisionModule.html":{},"dependencies.html":{},"overview.html":{}}}],["destroy",{"_index":20,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["detection",{"_index":315,"title":{},"body":{"index.html":{}}}],["directive",{"_index":0,"title":{"directives/AngularCollisionDirective.html":{}},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"coverage.html":{},"overview.html":{}}}],["directives",{"_index":2,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["directory",{"_index":338,"title":{},"body":{"index.html":{}}}],["disableinterval",{"_index":37,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["dist",{"_index":337,"title":{},"body":{"index.html":{}}}],["docs",{"_index":327,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":281,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["domrect",{"_index":111,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["drag",{"_index":323,"title":{},"body":{"index.html":{}}}],["drop",{"_index":324,"title":{},"body":{"index.html":{}}}],["dynamic",{"_index":301,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":350,"title":{},"body":{"index.html":{}}}],["el.id",{"_index":257,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["element",{"_index":21,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["element.domrect",{"_index":235,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["element.element.updatecollisionstate",{"_index":238,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["element.id",{"_index":258,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["element.rectanglechange",{"_index":260,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["element.starttracking",{"_index":259,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["element.stoptracking",{"_index":267,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["elementref",{"_index":45,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["elements",{"_index":198,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{},"index.html":{}}}],["elements.foreach((element",{"_index":244,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["elementsmap.foreach",{"_index":231,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["elementsmap.foreach((element",{"_index":230,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["emit",{"_index":68,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["end",{"_index":349,"title":{},"body":{"index.html":{}}}],["eventemitter",{"_index":62,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["execute",{"_index":346,"title":{},"body":{"index.html":{}}}],["export",{"_index":108,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["exportas",{"_index":113,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["exports",{"_index":153,"title":{},"body":{"modules/AngularCollisionModule.html":{},"overview.html":{}}}],["false",{"_index":88,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["file",{"_index":5,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{}}}],["files",{"_index":107,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["finish",{"_index":208,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["first",{"_index":199,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["first.bottom",{"_index":251,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["first.left",{"_index":253,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["first.top",{"_index":249,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["flag",{"_index":341,"title":{},"body":{"index.html":{}}}],["forroot",{"_index":161,"title":{},"body":{"modules/AngularCollisionModule.html":{}}}],["forroot(config",{"_index":162,"title":{},"body":{"modules/AngularCollisionModule.html":{}}}],["foundelement",{"_index":269,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["foundelement.subscription.closed",{"_index":274,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["foundelement.subscription.unsubscribe",{"_index":275,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["foundelement?.subscription",{"_index":273,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["generate",{"_index":326,"title":{},"body":{"index.html":{}}}],["generated",{"_index":317,"title":{},"body":{"index.html":{}}}],["getting",{"_index":310,"title":{"index.html":{}},"body":{}}],["hostbinding",{"_index":102,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["hostbinding('class.collision",{"_index":117,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["hostbindings",{"_index":41,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["id",{"_index":22,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["identifier",{"_index":282,"title":{},"body":{"coverage.html":{}}}],["ids",{"_index":212,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["implements",{"_index":9,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["import",{"_index":99,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["index",{"_index":15,"title":{"index.html":{}},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["info",{"_index":3,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["init",{"_index":190,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["injectable",{"_index":173,"title":{"injectables/AngularCollisionService.html":{}},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":175,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["innerelement",{"_index":232,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["innerelement.domrect",{"_index":236,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["innerid",{"_index":233,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["input",{"_index":101,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["inputs",{"_index":35,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["instanceof",{"_index":243,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["interface",{"_index":109,"title":{"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{}}}],["interfaces",{"_index":278,"title":{},"body":{"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"overview.html":{}}}],["intervaltime",{"_index":38,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["karma",{"_index":348,"title":{},"body":{"index.html":{}}}],["legend",{"_index":149,"title":{},"body":{"modules/AngularCollisionModule.html":{},"overview.html":{}}}],["library",{"_index":314,"title":{},"body":{"index.html":{}}}],["made",{"_index":325,"title":{},"body":{"index.html":{}}}],["manually",{"_index":329,"title":{},"body":{"index.html":{}}}],["map",{"_index":213,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["matching",{"_index":143,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["metadata",{"_index":12,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["methods",{"_index":27,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{}}}],["module",{"_index":145,"title":{"modules/AngularCollisionModule.html":{}},"body":{"modules/AngularCollisionModule.html":{},"overview.html":{}}}],["modules",{"_index":147,"title":{"modules.html":{}},"body":{"modules/AngularCollisionModule.html":{},"modules.html":{}}}],["modulewithproviders",{"_index":165,"title":{},"body":{"modules/AngularCollisionModule.html":{}}}],["move",{"_index":106,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["name",{"_index":50,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{}}}],["new",{"_index":91,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{}}}],["ng",{"_index":321,"title":{},"body":{"index.html":{}}}],["ngaftercontentchecked",{"_index":29,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["ngcangularcollision",{"_index":14,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["ngccollisionchange",{"_index":112,"title":{"interfaces/NgcCollisionChange.html":{}},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"coverage.html":{}}}],["ngcconfig",{"_index":163,"title":{"classes/NgcConfig.html":{}},"body":{"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{}}}],["ngcelementchange",{"_index":110,"title":{"interfaces/NgcElementChange.html":{}},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{}}}],["ngcollision",{"_index":312,"title":{},"body":{"index.html":{}}}],["ngctrackedelement",{"_index":209,"title":{"interfaces/NgcTrackedElement.html":{}},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{}}}],["ngmodule",{"_index":166,"title":{},"body":{"modules/AngularCollisionModule.html":{}}}],["ngondestroy",{"_index":30,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["npm",{"_index":330,"title":{},"body":{"index.html":{}}}],["number",{"_index":57,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["observable",{"_index":81,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["ondestroy",{"_index":11,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["optional",{"_index":52,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["out",{"_index":159,"title":{},"body":{"modules/AngularCollisionModule.html":{},"overview.html":{}}}],["output",{"_index":100,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["outputs",{"_index":39,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["overview",{"_index":355,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":293,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":126,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["parameters",{"_index":48,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{}}}],["performance",{"_index":229,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["pipe(takeuntil(element.destroy",{"_index":261,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["pipe(throttletime(100",{"_index":226,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["position",{"_index":69,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["positions",{"_index":215,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["private",{"_index":17,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["prod",{"_index":340,"title":{},"body":{"index.html":{}}}],["production",{"_index":342,"title":{},"body":{"index.html":{}}}],["project",{"_index":334,"title":{},"body":{"index.html":{}}}],["projects/angular",{"_index":6,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{}}}],["properties",{"_index":16,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["protractor",{"_index":351,"title":{},"body":{"index.html":{}}}],["provide",{"_index":171,"title":{},"body":{"modules/AngularCollisionModule.html":{}}}],["providedin",{"_index":221,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["providers",{"_index":152,"title":{},"body":{"modules/AngularCollisionModule.html":{},"overview.html":{}}}],["public",{"_index":19,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["querylist",{"_index":202,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["rectanglechange",{"_index":23,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["register",{"_index":182,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["register(elements",{"_index":201,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["remove",{"_index":183,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["remove(elements",{"_index":204,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["removetrackedelement",{"_index":184,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["removetrackedelement(element",{"_index":206,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["reset",{"_index":158,"title":{},"body":{"modules/AngularCollisionModule.html":{},"overview.html":{}}}],["result",{"_index":142,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["results",{"_index":144,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["return",{"_index":170,"title":{},"body":{"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["returns",{"_index":70,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{}}}],["root",{"_index":222,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["run",{"_index":331,"title":{},"body":{"index.html":{}}}],["running",{"_index":318,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":104,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":220,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["second",{"_index":192,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["second.bottom",{"_index":252,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["second.left",{"_index":254,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["second.right",{"_index":255,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["second.top",{"_index":250,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["selector",{"_index":13,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["serve",{"_index":322,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["start",{"_index":75,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["started",{"_index":311,"title":{"index.html":{}},"body":{}}],["starttracking",{"_index":31,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["statements",{"_index":283,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":25,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["status",{"_index":87,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["stop",{"_index":78,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["stoptracking",{"_index":32,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["stored",{"_index":336,"title":{},"body":{"index.html":{}}}],["string",{"_index":53,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["subject",{"_index":90,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["subscribe((change",{"_index":262,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["subscribe((elementsmap",{"_index":227,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["subscription",{"_index":96,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["support",{"_index":352,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":353,"title":{},"body":{"modules.html":{}}}],["table",{"_index":292,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":291,"title":{},"body":{"coverage.html":{}}}],["takeuntil",{"_index":218,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["test",{"_index":345,"title":{},"body":{"index.html":{}}}],["tests",{"_index":344,"title":{},"body":{"index.html":{}}}],["this.active",{"_index":122,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.addtrackedelement(element",{"_index":245,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["this.addtrackedelement(elements",{"_index":246,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["this.checkelementscollision",{"_index":234,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["this.checkposition",{"_index":123,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.collisionactive",{"_index":128,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.collisionactivechange.emit",{"_index":129,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.destroy$.next(this.id",{"_index":125,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.disableinterval",{"_index":135,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.element.nativeelement.getboundingclientrect",{"_index":131,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.id",{"_index":120,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.intervaltime).subscribe",{"_index":138,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.rectanglechange$.next",{"_index":132,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.rectanglechange.emit",{"_index":133,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.removetrackedelement(element",{"_index":247,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["this.removetrackedelement(elements",{"_index":248,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["this.timersubscription",{"_index":136,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.timersubscription.closed",{"_index":140,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.timersubscription.unsubscribe",{"_index":141,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.trackedelements",{"_index":276,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["this.trackedelements.filter",{"_index":277,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["this.trackedelements.find",{"_index":270,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["this.trackedelements.push",{"_index":266,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["this.trackedelements.some((el",{"_index":256,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["this.trackedelementspositions",{"_index":225,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["this.trackedelementspositions$.next(this.trackedelementspositions",{"_index":265,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["this.trackedelementspositions.delete(element.id",{"_index":268,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["this.trackedelementspositions.set(change.element.id",{"_index":263,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["this.trackedelementspositionsubscription",{"_index":224,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["this.trackedelementspositionsubscription.closed",{"_index":240,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["this.trackedelementspositionsubscription.unsubscribe",{"_index":241,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["this.unsubscribe",{"_index":124,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.updatecollisionstate(false",{"_index":139,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["throttletime",{"_index":219,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["timer",{"_index":80,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["timer(0",{"_index":137,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["timersubscription",{"_index":24,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["todo",{"_index":105,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["tracked",{"_index":211,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["trackedelement",{"_index":271,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["trackedelement.id",{"_index":272,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["trackedelements",{"_index":177,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["trackedelementspositions",{"_index":178,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["trackedelementspositionsubscription",{"_index":179,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["tracking",{"_index":76,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["true",{"_index":134,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["tslib",{"_index":306,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":197,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["type",{"_index":51,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{}}}],["uid",{"_index":26,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["unit",{"_index":343,"title":{},"body":{"index.html":{}}}],["unsubscribe",{"_index":33,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["update",{"_index":85,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["updatecollisionstate",{"_index":34,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["updatecollisionstate(active",{"_index":82,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["use",{"_index":339,"title":{},"body":{"index.html":{}}}],["usevalue",{"_index":172,"title":{},"body":{"modules/AngularCollisionModule.html":{}}}],["value",{"_index":59,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{}}}],["via",{"_index":347,"title":{},"body":{"index.html":{}}}],["void",{"_index":71,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["work",{"_index":228,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["wrapper",{"_index":217,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["yes",{"_index":187,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["zone.js",{"_index":308,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":157,"title":{},"body":{"modules/AngularCollisionModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"directives/AngularCollisionDirective.html":{"url":"directives/AngularCollisionDirective.html","title":"directive - AngularCollisionDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  AngularCollisionDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-collision/src/lib/angular-collision.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            AfterContentChecked\n                            OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [ngcAngularCollision]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                active\n                            \n                            \n                                    Public\n                                destroy$\n                            \n                            \n                                    Public\n                                element\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                rectangleChange$\n                            \n                            \n                                    Private\n                                timerSubscription\n                            \n                            \n                                    Private\n                                    Static\n                                uid\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                checkPosition\n                            \n                            \n                                    Public\n                                ngAfterContentChecked\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                startTracking\n                            \n                            \n                                    Public\n                                stopTracking\n                            \n                            \n                                    Public\n                                unsubscribe\n                            \n                            \n                                    Public\n                                updateCollisionState\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                customEvents\n                            \n                            \n                                disableInterval\n                            \n                            \n                                intervalTime\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                collisionActiveChange\n                            \n                            \n                                rectangleChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class.collision\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(element: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:51\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        customEvents\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disableInterval\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        intervalTime\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 100\n                    \n                \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:33\n                            \n                        \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        collisionActiveChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rectangleChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:36\n                            \n                        \n            \n        \n\n            \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class.collision\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:43\n                            \n                        \n\n\n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            checkPosition\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkPosition()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:85\n                \n            \n\n\n            \n                \n                    Check and emit element position\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngAfterContentChecked\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterContentChecked()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            startTracking\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    startTracking()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:95\n                \n            \n\n\n            \n                \n                    Start tracking element\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            stopTracking\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    stopTracking()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:108\n                \n            \n\n\n            \n                \n                    Stop tracking element\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            unsubscribe\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    unsubscribe()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:117\n                \n            \n\n\n            \n                \n                    Unsubscribe timer observable\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateCollisionState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateCollisionState(active: boolean, collidedElements: AngularCollisionDirective[])\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:74\n                \n            \n\n\n            \n                \n                    Update collision status\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    active\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    collidedElements\n                                    \n                                            AngularCollisionDirective[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            active\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            destroy$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            element\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rectangleChange$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            timerSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            uid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:51\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import {\n  Directive,\n  AfterContentChecked,\n  ElementRef,\n  Output,\n  EventEmitter,\n  OnDestroy,\n  Input,\n  HostBinding,\n} from '@angular/core';\nimport { timer, Subscription, Subject } from 'rxjs';\n\n// TODO: move to files\nexport interface NgcElementChange {\n  domRect: DOMRect;\n  element: AngularCollisionDirective;\n}\n\n// TODO: move to files\nexport interface NgcCollisionChange {\n  id: number;\n  active: boolean;\n  collidedElements: AngularCollisionDirective[];\n}\n\n@Directive({\n  selector: '[ngcAngularCollision]',\n  exportAs: 'ngcAngularCollision',\n})\nexport class AngularCollisionDirective\n  implements AfterContentChecked, OnDestroy {\n  @Input() public disableInterval: boolean; // TODO add to config\n  @Input() public intervalTime: number = 100; // TODO add to config\n  @Input() public customEvents: string[];\n\n  @Output() public rectangleChange: EventEmitter = new EventEmitter();\n  @Output() public collisionActiveChange: EventEmitter = new EventEmitter();\n\n  @HostBinding('class.collision') public collisionActive: boolean;\n\n  public rectangleChange$: Subject = new Subject();\n  public destroy$: Subject = new Subject();\n  public id: number;\n\n  private timerSubscription: Subscription;\n  private active: boolean = false;\n  private static uid: number = 0;\n\n  constructor(public element: ElementRef) {\n    this.id = AngularCollisionDirective.uid++;\n  }\n\n  public ngAfterContentChecked(): void {\n    if (this.active) {\n      this.checkPosition();\n    }\n  }\n\n  public ngOnDestroy(): void {\n    this.unsubscribe();\n    this.destroy$.next(this.id);\n  }\n\n  /**\n   * Update collision status\n   *\n   * @param active\n   * @param collidedIds\n   */\n  public updateCollisionState(\n    active: boolean,\n    collidedElements: AngularCollisionDirective[]\n  ): void {\n    this.collisionActive = active;\n    this.collisionActiveChange.emit({ id: this.id, active, collidedElements });\n  }\n\n  /**\n   * Check and emit element position\n   */\n  public checkPosition(): void {\n    const domRect: DOMRect = this.element.nativeElement.getBoundingClientRect();\n\n    this.rectangleChange$.next({ domRect, element: this });\n    this.rectangleChange.emit({ domRect, element: this });\n  }\n\n  /**\n   * Start tracking element\n   */\n  public startTracking(): void {\n    this.active = true;\n\n    if (!this.disableInterval) {\n      this.timerSubscription = timer(0, this.intervalTime).subscribe(() => {\n        this.checkPosition();\n      });\n    }\n  }\n\n  /**\n   * Stop tracking element\n   */\n  public stopTracking(): void {\n    this.active = false;\n    this.updateCollisionState(false, []);\n    this.unsubscribe();\n  }\n\n  /**\n   * Unsubscribe timer observable\n   */\n  public unsubscribe(): void {\n    if (this.timerSubscription && !this.timerSubscription.closed) {\n      this.timerSubscription.unsubscribe();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AngularCollisionModule.html":{"url":"modules/AngularCollisionModule.html","title":"module - AngularCollisionModule","body":"\n                   \n\n\n\n\n    Modules\n    AngularCollisionModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AngularCollisionModule\n\n\n\ncluster_AngularCollisionModule_exports\n\n\n\ncluster_AngularCollisionModule_declarations\n\n\n\n\nAngularCollisionDirective\n\nAngularCollisionDirective\n\n\n\nAngularCollisionModule\n\nAngularCollisionModule\n\nAngularCollisionModule -->\n\nAngularCollisionDirective->AngularCollisionModule\n\n\n\n\n\nAngularCollisionDirective \n\nAngularCollisionDirective \n\nAngularCollisionDirective  -->\n\nAngularCollisionModule->AngularCollisionDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/angular-collision/src/lib/angular-collision.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AngularCollisionDirective\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AngularCollisionDirective\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(config: NgcConfig)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.module.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                NgcConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { AngularCollisionDirective } from './angular-collision.directive';\nimport { NgcConfig } from './angular-collision.service';\n\n@NgModule({\n  declarations: [AngularCollisionDirective],\n  exports: [AngularCollisionDirective],\n})\nexport class AngularCollisionModule {\n  static forRoot(\n    config: NgcConfig\n  ): ModuleWithProviders {\n    return {\n      ngModule: AngularCollisionModule,\n      providers: [{ provide: NgcConfig, useValue: config }],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AngularCollisionService.html":{"url":"injectables/AngularCollisionService.html","title":"injectable - AngularCollisionService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AngularCollisionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-collision/src/lib/angular-collision.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                trackedElements\n                            \n                            \n                                    Public\n                                trackedElementsPositions\n                            \n                            \n                                    Public\n                                trackedElementsPositions$\n                            \n                            \n                                    Public\n                                trackedElementsPositionSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addTrackedElement\n                            \n                            \n                                    Private\n                                checkElementsCollision\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                register\n                            \n                            \n                                    Public\n                                remove\n                            \n                            \n                                    Private\n                                removeTrackedElement\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config?: NgcConfig)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-collision/src/lib/angular-collision.service.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        NgcConfig\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            addTrackedElement\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addTrackedElement(element: AngularCollisionDirective)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.service.ts:137\n                \n            \n\n\n            \n                \n                    Init tracking of element\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    element\n                                    \n                                            AngularCollisionDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            checkElementsCollision\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkElementsCollision(first: DOMRect, second: DOMRect)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.service.ts:121\n                \n            \n\n\n            \n                \n                    Checks collisions between two elements\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    first\n                                    \n                                            DOMRect\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    second\n                                    \n                                            DOMRect\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            register\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    register(elements: QueryList | AngularCollisionDirective | AngularCollisionDirective[])\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.service.ts:80\n                \n            \n\n\n            \n                \n                    Start tracking element / elements\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    elements\n                                    \n                                            QueryList | AngularCollisionDirective | AngularCollisionDirective[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(elements: QueryList | AngularCollisionDirective | AngularCollisionDirective[])\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.service.ts:100\n                \n            \n\n\n            \n                \n                    Stop tracking element / elements\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    elements\n                                    \n                                            QueryList | AngularCollisionDirective | AngularCollisionDirective[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            removeTrackedElement\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeTrackedElement(element: AngularCollisionDirective)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.service.ts:155\n                \n            \n\n\n            \n                \n                    Finish tracking of element\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    element\n                                    \n                                            AngularCollisionDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            trackedElements\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgcTrackedElement[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.service.ts:23\n                            \n                        \n\n                \n                    \n                        Tracked elements ids\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            trackedElementsPositions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Map\n\n                        \n                    \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.service.ts:28\n                            \n                        \n\n                \n                    \n                        Map of tracked elements positions\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            trackedElementsPositions$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Subject>\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.service.ts:33\n                            \n                        \n\n                \n                    \n                        Observable wrapper of tracked elements positions\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            trackedElementsPositionSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.service.ts:37\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, OnDestroy, Optional, QueryList } from '@angular/core';\nimport { takeUntil, throttleTime } from 'rxjs/operators';\nimport { Subject, Subscription } from 'rxjs';\nimport {\n  AngularCollisionDirective,\n  NgcElementChange,\n} from './angular-collision.directive';\n\nexport class NgcConfig {}\n\nexport interface NgcTrackedElement {\n  id: number;\n  subscription: Subscription;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AngularCollisionService implements OnDestroy {\n  /**\n   *  Tracked elements ids\n   */\n  public trackedElements: NgcTrackedElement[] = [];\n\n  /**\n   *  Map of tracked elements positions\n   */\n  public trackedElementsPositions: Map = new Map();\n\n  /**\n   *  Observable wrapper of tracked elements positions\n   */\n  public trackedElementsPositions$: Subject\n  > = new Subject();\n\n  public trackedElementsPositionSubscription: Subscription;\n\n  constructor(@Optional() config?: NgcConfig) {\n    this.trackedElementsPositionSubscription = this.trackedElementsPositions$\n      .pipe(throttleTime(100))\n      .subscribe((elementsMap: Map) => {\n        // TODO work on performance\n        elementsMap.forEach((element: NgcElementChange, id: number) => {\n          const collisions: AngularCollisionDirective[] = [];\n\n          elementsMap.forEach(\n            (innerElement: NgcElementChange, innerId: number) => {\n              if (\n                id !== innerId &&\n                this.checkElementsCollision(\n                  element.domRect,\n                  innerElement.domRect\n                )\n              ) {\n                collisions.push(innerElement.element);\n              }\n            }\n          );\n\n          element.element.updateCollisionState(\n            collisions.length > 0,\n            collisions\n          );\n        });\n      });\n  }\n\n  public ngOnDestroy(): void {\n    if (!this.trackedElementsPositionSubscription.closed) {\n      this.trackedElementsPositionSubscription.unsubscribe();\n    }\n  }\n\n  /**\n   * Start tracking element / elements\n   *\n   * @param elements\n   */\n  public register(\n    elements:\n      | QueryList\n      | AngularCollisionDirective\n      | AngularCollisionDirective[]\n  ): void {\n    if (Array.isArray(elements) || elements instanceof QueryList) {\n      elements.forEach((element) => {\n        this.addTrackedElement(element);\n      });\n    } else {\n      this.addTrackedElement(elements);\n    }\n  }\n\n  /**\n   * Stop tracking element / elements\n   *\n   * @param elements\n   */\n  public remove(\n    elements:\n      | QueryList\n      | AngularCollisionDirective\n      | AngularCollisionDirective[]\n  ): void {\n    if (Array.isArray(elements) || elements instanceof QueryList) {\n      elements.forEach((element) => {\n        this.removeTrackedElement(element);\n      });\n    } else {\n      this.removeTrackedElement(elements);\n    }\n  }\n\n  /**\n   * Checks collisions between two elements\n   *\n   * @param first\n   * @param second\n   */\n  private checkElementsCollision(first: DOMRect, second: DOMRect): boolean {\n    return (\n      ((first.top = second.top) ||\n        (first.bottom = second.top) ||\n        (first.top = second.bottom)) &&\n      ((first.left >= second.left && first.left = second.left) ||\n        (first.left = second.right))\n    );\n  }\n\n  /**\n   * Init tracking of element\n   *\n   * @param element\n   */\n  private addTrackedElement(element: AngularCollisionDirective): void {\n    if (!this.trackedElements.some((el) => el.id == element.id)) {\n      element.startTracking();\n      const subscription = element.rectangleChange$\n        .pipe(takeUntil(element.destroy$))\n        .subscribe((change: NgcElementChange) => {\n          this.trackedElementsPositions.set(change.element.id, change);\n          this.trackedElementsPositions$.next(this.trackedElementsPositions);\n        });\n      this.trackedElements.push({ id: element.id, subscription });\n    }\n  }\n\n  /**\n   * Finish tracking of element\n   *\n   * @param element\n   */\n  private removeTrackedElement(element: AngularCollisionDirective): void {\n    element.stopTracking();\n\n    this.trackedElementsPositions.delete(element.id);\n    this.trackedElementsPositions$.next(this.trackedElementsPositions);\n\n    const foundElement = this.trackedElements.find(\n      (trackedElement) => trackedElement.id === element.id\n    );\n\n    if (foundElement?.subscription && !foundElement.subscription.closed) {\n      foundElement.subscription.unsubscribe();\n    }\n\n    this.trackedElements = this.trackedElements.filter(\n      (trackedElement) => trackedElement.id !== element.id\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgcCollisionChange.html":{"url":"interfaces/NgcCollisionChange.html","title":"interface - NgcCollisionChange","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgcCollisionChange\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-collision/src/lib/angular-collision.directive.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        active\n                                \n                                \n                                        collidedElements\n                                \n                                \n                                        id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        active\n                                    \n                                \n                                \n                                    \n                                        active:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        collidedElements\n                                    \n                                \n                                \n                                    \n                                        collidedElements:     AngularCollisionDirective[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     AngularCollisionDirective[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Directive,\n  AfterContentChecked,\n  ElementRef,\n  Output,\n  EventEmitter,\n  OnDestroy,\n  Input,\n  HostBinding,\n} from '@angular/core';\nimport { timer, Subscription, Subject } from 'rxjs';\n\n// TODO: move to files\nexport interface NgcElementChange {\n  domRect: DOMRect;\n  element: AngularCollisionDirective;\n}\n\n// TODO: move to files\nexport interface NgcCollisionChange {\n  id: number;\n  active: boolean;\n  collidedElements: AngularCollisionDirective[];\n}\n\n@Directive({\n  selector: '[ngcAngularCollision]',\n  exportAs: 'ngcAngularCollision',\n})\nexport class AngularCollisionDirective\n  implements AfterContentChecked, OnDestroy {\n  @Input() public disableInterval: boolean; // TODO add to config\n  @Input() public intervalTime: number = 100; // TODO add to config\n  @Input() public customEvents: string[];\n\n  @Output() public rectangleChange: EventEmitter = new EventEmitter();\n  @Output() public collisionActiveChange: EventEmitter = new EventEmitter();\n\n  @HostBinding('class.collision') public collisionActive: boolean;\n\n  public rectangleChange$: Subject = new Subject();\n  public destroy$: Subject = new Subject();\n  public id: number;\n\n  private timerSubscription: Subscription;\n  private active: boolean = false;\n  private static uid: number = 0;\n\n  constructor(public element: ElementRef) {\n    this.id = AngularCollisionDirective.uid++;\n  }\n\n  public ngAfterContentChecked(): void {\n    if (this.active) {\n      this.checkPosition();\n    }\n  }\n\n  public ngOnDestroy(): void {\n    this.unsubscribe();\n    this.destroy$.next(this.id);\n  }\n\n  /**\n   * Update collision status\n   *\n   * @param active\n   * @param collidedIds\n   */\n  public updateCollisionState(\n    active: boolean,\n    collidedElements: AngularCollisionDirective[]\n  ): void {\n    this.collisionActive = active;\n    this.collisionActiveChange.emit({ id: this.id, active, collidedElements });\n  }\n\n  /**\n   * Check and emit element position\n   */\n  public checkPosition(): void {\n    const domRect: DOMRect = this.element.nativeElement.getBoundingClientRect();\n\n    this.rectangleChange$.next({ domRect, element: this });\n    this.rectangleChange.emit({ domRect, element: this });\n  }\n\n  /**\n   * Start tracking element\n   */\n  public startTracking(): void {\n    this.active = true;\n\n    if (!this.disableInterval) {\n      this.timerSubscription = timer(0, this.intervalTime).subscribe(() => {\n        this.checkPosition();\n      });\n    }\n  }\n\n  /**\n   * Stop tracking element\n   */\n  public stopTracking(): void {\n    this.active = false;\n    this.updateCollisionState(false, []);\n    this.unsubscribe();\n  }\n\n  /**\n   * Unsubscribe timer observable\n   */\n  public unsubscribe(): void {\n    if (this.timerSubscription && !this.timerSubscription.closed) {\n      this.timerSubscription.unsubscribe();\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NgcConfig.html":{"url":"classes/NgcConfig.html","title":"class - NgcConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NgcConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-collision/src/lib/angular-collision.service.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable, OnDestroy, Optional, QueryList } from '@angular/core';\nimport { takeUntil, throttleTime } from 'rxjs/operators';\nimport { Subject, Subscription } from 'rxjs';\nimport {\n  AngularCollisionDirective,\n  NgcElementChange,\n} from './angular-collision.directive';\n\nexport class NgcConfig {}\n\nexport interface NgcTrackedElement {\n  id: number;\n  subscription: Subscription;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AngularCollisionService implements OnDestroy {\n  /**\n   *  Tracked elements ids\n   */\n  public trackedElements: NgcTrackedElement[] = [];\n\n  /**\n   *  Map of tracked elements positions\n   */\n  public trackedElementsPositions: Map = new Map();\n\n  /**\n   *  Observable wrapper of tracked elements positions\n   */\n  public trackedElementsPositions$: Subject\n  > = new Subject();\n\n  public trackedElementsPositionSubscription: Subscription;\n\n  constructor(@Optional() config?: NgcConfig) {\n    this.trackedElementsPositionSubscription = this.trackedElementsPositions$\n      .pipe(throttleTime(100))\n      .subscribe((elementsMap: Map) => {\n        // TODO work on performance\n        elementsMap.forEach((element: NgcElementChange, id: number) => {\n          const collisions: AngularCollisionDirective[] = [];\n\n          elementsMap.forEach(\n            (innerElement: NgcElementChange, innerId: number) => {\n              if (\n                id !== innerId &&\n                this.checkElementsCollision(\n                  element.domRect,\n                  innerElement.domRect\n                )\n              ) {\n                collisions.push(innerElement.element);\n              }\n            }\n          );\n\n          element.element.updateCollisionState(\n            collisions.length > 0,\n            collisions\n          );\n        });\n      });\n  }\n\n  public ngOnDestroy(): void {\n    if (!this.trackedElementsPositionSubscription.closed) {\n      this.trackedElementsPositionSubscription.unsubscribe();\n    }\n  }\n\n  /**\n   * Start tracking element / elements\n   *\n   * @param elements\n   */\n  public register(\n    elements:\n      | QueryList\n      | AngularCollisionDirective\n      | AngularCollisionDirective[]\n  ): void {\n    if (Array.isArray(elements) || elements instanceof QueryList) {\n      elements.forEach((element) => {\n        this.addTrackedElement(element);\n      });\n    } else {\n      this.addTrackedElement(elements);\n    }\n  }\n\n  /**\n   * Stop tracking element / elements\n   *\n   * @param elements\n   */\n  public remove(\n    elements:\n      | QueryList\n      | AngularCollisionDirective\n      | AngularCollisionDirective[]\n  ): void {\n    if (Array.isArray(elements) || elements instanceof QueryList) {\n      elements.forEach((element) => {\n        this.removeTrackedElement(element);\n      });\n    } else {\n      this.removeTrackedElement(elements);\n    }\n  }\n\n  /**\n   * Checks collisions between two elements\n   *\n   * @param first\n   * @param second\n   */\n  private checkElementsCollision(first: DOMRect, second: DOMRect): boolean {\n    return (\n      ((first.top = second.top) ||\n        (first.bottom = second.top) ||\n        (first.top = second.bottom)) &&\n      ((first.left >= second.left && first.left = second.left) ||\n        (first.left = second.right))\n    );\n  }\n\n  /**\n   * Init tracking of element\n   *\n   * @param element\n   */\n  private addTrackedElement(element: AngularCollisionDirective): void {\n    if (!this.trackedElements.some((el) => el.id == element.id)) {\n      element.startTracking();\n      const subscription = element.rectangleChange$\n        .pipe(takeUntil(element.destroy$))\n        .subscribe((change: NgcElementChange) => {\n          this.trackedElementsPositions.set(change.element.id, change);\n          this.trackedElementsPositions$.next(this.trackedElementsPositions);\n        });\n      this.trackedElements.push({ id: element.id, subscription });\n    }\n  }\n\n  /**\n   * Finish tracking of element\n   *\n   * @param element\n   */\n  private removeTrackedElement(element: AngularCollisionDirective): void {\n    element.stopTracking();\n\n    this.trackedElementsPositions.delete(element.id);\n    this.trackedElementsPositions$.next(this.trackedElementsPositions);\n\n    const foundElement = this.trackedElements.find(\n      (trackedElement) => trackedElement.id === element.id\n    );\n\n    if (foundElement?.subscription && !foundElement.subscription.closed) {\n      foundElement.subscription.unsubscribe();\n    }\n\n    this.trackedElements = this.trackedElements.filter(\n      (trackedElement) => trackedElement.id !== element.id\n    );\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgcElementChange.html":{"url":"interfaces/NgcElementChange.html","title":"interface - NgcElementChange","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgcElementChange\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-collision/src/lib/angular-collision.directive.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        domRect\n                                \n                                \n                                        element\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        domRect\n                                    \n                                \n                                \n                                    \n                                        domRect:     DOMRect\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DOMRect\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        element\n                                    \n                                \n                                \n                                    \n                                        element:     AngularCollisionDirective\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     AngularCollisionDirective\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Directive,\n  AfterContentChecked,\n  ElementRef,\n  Output,\n  EventEmitter,\n  OnDestroy,\n  Input,\n  HostBinding,\n} from '@angular/core';\nimport { timer, Subscription, Subject } from 'rxjs';\n\n// TODO: move to files\nexport interface NgcElementChange {\n  domRect: DOMRect;\n  element: AngularCollisionDirective;\n}\n\n// TODO: move to files\nexport interface NgcCollisionChange {\n  id: number;\n  active: boolean;\n  collidedElements: AngularCollisionDirective[];\n}\n\n@Directive({\n  selector: '[ngcAngularCollision]',\n  exportAs: 'ngcAngularCollision',\n})\nexport class AngularCollisionDirective\n  implements AfterContentChecked, OnDestroy {\n  @Input() public disableInterval: boolean; // TODO add to config\n  @Input() public intervalTime: number = 100; // TODO add to config\n  @Input() public customEvents: string[];\n\n  @Output() public rectangleChange: EventEmitter = new EventEmitter();\n  @Output() public collisionActiveChange: EventEmitter = new EventEmitter();\n\n  @HostBinding('class.collision') public collisionActive: boolean;\n\n  public rectangleChange$: Subject = new Subject();\n  public destroy$: Subject = new Subject();\n  public id: number;\n\n  private timerSubscription: Subscription;\n  private active: boolean = false;\n  private static uid: number = 0;\n\n  constructor(public element: ElementRef) {\n    this.id = AngularCollisionDirective.uid++;\n  }\n\n  public ngAfterContentChecked(): void {\n    if (this.active) {\n      this.checkPosition();\n    }\n  }\n\n  public ngOnDestroy(): void {\n    this.unsubscribe();\n    this.destroy$.next(this.id);\n  }\n\n  /**\n   * Update collision status\n   *\n   * @param active\n   * @param collidedIds\n   */\n  public updateCollisionState(\n    active: boolean,\n    collidedElements: AngularCollisionDirective[]\n  ): void {\n    this.collisionActive = active;\n    this.collisionActiveChange.emit({ id: this.id, active, collidedElements });\n  }\n\n  /**\n   * Check and emit element position\n   */\n  public checkPosition(): void {\n    const domRect: DOMRect = this.element.nativeElement.getBoundingClientRect();\n\n    this.rectangleChange$.next({ domRect, element: this });\n    this.rectangleChange.emit({ domRect, element: this });\n  }\n\n  /**\n   * Start tracking element\n   */\n  public startTracking(): void {\n    this.active = true;\n\n    if (!this.disableInterval) {\n      this.timerSubscription = timer(0, this.intervalTime).subscribe(() => {\n        this.checkPosition();\n      });\n    }\n  }\n\n  /**\n   * Stop tracking element\n   */\n  public stopTracking(): void {\n    this.active = false;\n    this.updateCollisionState(false, []);\n    this.unsubscribe();\n  }\n\n  /**\n   * Unsubscribe timer observable\n   */\n  public unsubscribe(): void {\n    if (this.timerSubscription && !this.timerSubscription.closed) {\n      this.timerSubscription.unsubscribe();\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgcTrackedElement.html":{"url":"interfaces/NgcTrackedElement.html","title":"interface - NgcTrackedElement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgcTrackedElement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-collision/src/lib/angular-collision.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        subscription\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subscription\n                                    \n                                \n                                \n                                    \n                                        subscription:     Subscription\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Subscription\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, OnDestroy, Optional, QueryList } from '@angular/core';\nimport { takeUntil, throttleTime } from 'rxjs/operators';\nimport { Subject, Subscription } from 'rxjs';\nimport {\n  AngularCollisionDirective,\n  NgcElementChange,\n} from './angular-collision.directive';\n\nexport class NgcConfig {}\n\nexport interface NgcTrackedElement {\n  id: number;\n  subscription: Subscription;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AngularCollisionService implements OnDestroy {\n  /**\n   *  Tracked elements ids\n   */\n  public trackedElements: NgcTrackedElement[] = [];\n\n  /**\n   *  Map of tracked elements positions\n   */\n  public trackedElementsPositions: Map = new Map();\n\n  /**\n   *  Observable wrapper of tracked elements positions\n   */\n  public trackedElementsPositions$: Subject\n  > = new Subject();\n\n  public trackedElementsPositionSubscription: Subscription;\n\n  constructor(@Optional() config?: NgcConfig) {\n    this.trackedElementsPositionSubscription = this.trackedElementsPositions$\n      .pipe(throttleTime(100))\n      .subscribe((elementsMap: Map) => {\n        // TODO work on performance\n        elementsMap.forEach((element: NgcElementChange, id: number) => {\n          const collisions: AngularCollisionDirective[] = [];\n\n          elementsMap.forEach(\n            (innerElement: NgcElementChange, innerId: number) => {\n              if (\n                id !== innerId &&\n                this.checkElementsCollision(\n                  element.domRect,\n                  innerElement.domRect\n                )\n              ) {\n                collisions.push(innerElement.element);\n              }\n            }\n          );\n\n          element.element.updateCollisionState(\n            collisions.length > 0,\n            collisions\n          );\n        });\n      });\n  }\n\n  public ngOnDestroy(): void {\n    if (!this.trackedElementsPositionSubscription.closed) {\n      this.trackedElementsPositionSubscription.unsubscribe();\n    }\n  }\n\n  /**\n   * Start tracking element / elements\n   *\n   * @param elements\n   */\n  public register(\n    elements:\n      | QueryList\n      | AngularCollisionDirective\n      | AngularCollisionDirective[]\n  ): void {\n    if (Array.isArray(elements) || elements instanceof QueryList) {\n      elements.forEach((element) => {\n        this.addTrackedElement(element);\n      });\n    } else {\n      this.addTrackedElement(elements);\n    }\n  }\n\n  /**\n   * Stop tracking element / elements\n   *\n   * @param elements\n   */\n  public remove(\n    elements:\n      | QueryList\n      | AngularCollisionDirective\n      | AngularCollisionDirective[]\n  ): void {\n    if (Array.isArray(elements) || elements instanceof QueryList) {\n      elements.forEach((element) => {\n        this.removeTrackedElement(element);\n      });\n    } else {\n      this.removeTrackedElement(elements);\n    }\n  }\n\n  /**\n   * Checks collisions between two elements\n   *\n   * @param first\n   * @param second\n   */\n  private checkElementsCollision(first: DOMRect, second: DOMRect): boolean {\n    return (\n      ((first.top = second.top) ||\n        (first.bottom = second.top) ||\n        (first.top = second.bottom)) &&\n      ((first.left >= second.left && first.left = second.left) ||\n        (first.left = second.right))\n    );\n  }\n\n  /**\n   * Init tracking of element\n   *\n   * @param element\n   */\n  private addTrackedElement(element: AngularCollisionDirective): void {\n    if (!this.trackedElements.some((el) => el.id == element.id)) {\n      element.startTracking();\n      const subscription = element.rectangleChange$\n        .pipe(takeUntil(element.destroy$))\n        .subscribe((change: NgcElementChange) => {\n          this.trackedElementsPositions.set(change.element.id, change);\n          this.trackedElementsPositions$.next(this.trackedElementsPositions);\n        });\n      this.trackedElements.push({ id: element.id, subscription });\n    }\n  }\n\n  /**\n   * Finish tracking of element\n   *\n   * @param element\n   */\n  private removeTrackedElement(element: AngularCollisionDirective): void {\n    element.stopTracking();\n\n    this.trackedElementsPositions.delete(element.id);\n    this.trackedElementsPositions$.next(this.trackedElementsPositions);\n\n    const foundElement = this.trackedElements.find(\n      (trackedElement) => trackedElement.id === element.id\n    );\n\n    if (foundElement?.subscription && !foundElement.subscription.closed) {\n      foundElement.subscription.unsubscribe();\n    }\n\n    this.trackedElements = this.trackedElements.filter(\n      (trackedElement) => trackedElement.id !== element.id\n    );\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/angular-collision/src/lib/angular-collision.directive.ts\n            \n            directive\n            AngularCollisionDirective\n            \n                22 %\n                (5/22)\n            \n        \n        \n            \n                \n                projects/angular-collision/src/lib/angular-collision.directive.ts\n            \n            interface\n            NgcCollisionChange\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/angular-collision/src/lib/angular-collision.directive.ts\n            \n            interface\n            NgcElementChange\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/angular-collision/src/lib/angular-collision.service.ts\n            \n            class\n            NgcConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular-collision/src/lib/angular-collision.service.ts\n            \n            injectable\n            AngularCollisionService\n            \n                66 %\n                (8/12)\n            \n        \n        \n            \n                \n                projects/angular-collision/src/lib/angular-collision.service.ts\n            \n            interface\n            NgcTrackedElement\n            \n                0 %\n                (0/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~10.1.5\n        \n            @angular/common : ~10.1.5\n        \n            @angular/compiler : ~10.1.5\n        \n            @angular/core : ~10.1.5\n        \n            @angular/forms : ~10.1.5\n        \n            @angular/platform-browser : ~10.1.5\n        \n            @angular/platform-browser-dynamic : ~10.1.5\n        \n            @angular/router : ~10.1.5\n        \n            @angular/cdk : ^10.2.4\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNgCollision\nAngular 10 library for elements collision detection\nAuto-generated documentation\nRunning demo app\nng serve demo-app\nDrag & drop made with angular/cdk.\nGenerate docs\nDocumentation is auto-generated every commit.\nYou can also generate docs manually by:\nnpm run compodoc\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AngularCollisionModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AngularCollisionModule\n\n\n\ncluster_AngularCollisionModule_declarations\n\n\n\ncluster_AngularCollisionModule_exports\n\n\n\n\nAngularCollisionDirective\n\nAngularCollisionDirective\n\n\n\nAngularCollisionModule\n\nAngularCollisionModule\n\nAngularCollisionModule -->\n\nAngularCollisionDirective->AngularCollisionModule\n\n\n\n\n\nAngularCollisionDirective \n\nAngularCollisionDirective \n\nAngularCollisionDirective  -->\n\nAngularCollisionModule->AngularCollisionDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
