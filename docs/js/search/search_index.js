var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/directives/AngularCollisionDirective.html",[0,0.716,1,0.439]],["body/directives/AngularCollisionDirective.html",[0,0.849,1,0.642,2,1.135,3,0.467,4,0.289,5,0.223,6,0.817,7,1.332,8,0.558,9,0.9,10,1.4,11,1.132,12,1.135,13,1.114,14,1.4,15,0.289,16,0.588,17,1.77,18,2.19,19,1.75,20,1.81,21,1.764,22,1.578,23,1.301,24,1.886,25,1.4,26,1.132,27,1.4,28,1.114,29,1.607,30,1.607,31,1.299,32,1.607,33,1.607,34,1.886,35,1.4,36,1.833,37,1.132,38,1.132,39,1.833,40,1.4,41,1.833,42,1.833,43,0.69,44,1.135,45,1.764,46,0.74,47,0.52,48,2.027,49,1.833,50,0.9,51,0.084,52,0.9,53,0.771,54,0.849,55,0.69,56,1.496,57,1.135,58,1.114,59,1.607,60,2.065,61,1.607,62,1.048,63,2.216,64,2.216,65,1.114,66,1.135,67,1.114,68,1.984,69,1.135,70,2.065,71,1.886,72,1.135,73,1.135,74,1.135,75,1.114,76,1.114,77,1.984,78,1.901,79,1.135,80,1.135,81,1.135,82,0.9,83,1.299,84,1.135,85,0.9,86,1.135,87,1.4,88,1.525,89,1.135,90,1.764,91,1.135,92,1.114,93,1.114,94,1.4,95,1.135,96,1.135,97,1.4,98,1.724,99,1.236,100,1.135,101,1.114,102,1.607,103,1.135,104,1.135,105,1.114,106,1.135,107,1.114,108,1.764,109,0.918,110,1.135,111,0.9,112,0.74,113,1.4,114,0.69,115,0.364,116,0.364,117,0.452,118,0.452,119,1.114,120,0.69,121,0.69,122,1.604,123,0.69,124,0.587,125,0.361,126,0.364,127,0.558,128,0.452,129,0.69,130,0.165,131,0.69,132,0.69,133,0.558,134,1.114,135,0.69,136,1.4,137,1.114,138,1.114,139,0.69,140,0.9,141,0.69,142,0.69,143,0.69,144,0.69,145,0.558,146,0.69,147,0.69,148,0.69,149,0.69,150,1.114,151,0.69,152,0.69,153,0.69,154,0.69,155,0.69,156,0.021,157,0.033,158,0.021]],["title/modules/AngularCollisionModule.html",[159,1.095,160,1.095]],["body/modules/AngularCollisionModule.html",[1,0.878,3,0.681,4,0.681,5,0.526,6,0.673,7,1.098,26,1.68,28,1.624,46,1.211,47,0.809,48,1.313,50,1.313,51,0.083,52,1.313,53,0.526,54,0.858,77,1.624,112,1.211,115,0.858,117,1.064,118,1.064,124,0.681,130,0.388,156,0.049,157,0.062,158,0.049,159,1.313,160,2.127,161,1.624,162,1.313,163,2.04,164,2.88,165,2.04,166,2.611,167,2.88,168,2.04,169,2.04,170,2.04,171,2.611,172,2.04,173,2.04,174,2.672,175,3.42,176,2.672,177,2.672,178,3.773,179,3.773,180,1.624,181,2.04,182,2.04,183,2.672,184,2.672]],["title/injectables/AngularCollisionService.html",[185,1.095,186,1.355]],["body/injectables/AngularCollisionService.html",[1,0.815,3,0.307,4,0.307,5,0.237,6,0.751,7,1.225,9,0.592,11,0.945,15,0.307,16,0.617,17,1.759,19,1.66,22,1.52,23,0.956,28,1.168,31,1.345,43,0.732,46,0.617,47,0.539,48,1.842,50,1.566,51,0.085,52,1.566,53,0.722,54,1.074,55,0.732,56,0.766,62,0.617,63,1.831,64,1.831,77,1.937,78,1.803,82,0.945,83,1.707,85,0.945,88,0.945,98,1.469,99,1.091,109,1.192,111,0.592,112,1.023,115,0.387,116,0.387,117,0.766,118,0.48,122,1.566,124,0.307,126,0.879,127,1.345,130,0.175,140,1.566,145,1.178,156,0.022,157,0.035,158,0.022,180,0.732,181,0.92,182,0.92,185,0.945,186,1.168,187,1.205,188,0.92,189,2.399,190,3.188,191,2.399,192,1.923,193,1.923,194,2.399,195,2.399,196,1.923,197,1.205,198,1.923,199,1.923,200,1.205,201,1.923,202,1.923,203,2.738,204,1.205,205,1.923,206,1.923,207,1.923,208,3.162,209,1.923,210,1.205,211,1.205,212,3.581,213,1.205,214,1.205,215,1.205,216,1.923,217,1.205,218,1.923,219,1.178,220,1.205,221,2.033,222,3.345,223,1.205,224,2.738,225,1.205,226,1.923,227,1.205,228,1.205,229,1.205,230,1.205,231,1.205,232,1.205,233,1.205,234,1.205,235,1.205,236,1.205,237,1.205,238,1.205,239,1.205,240,1.205,241,1.205,242,1.205,243,1.205,244,1.923,245,1.205,246,1.205,247,1.205,248,1.205,249,1.205,250,1.205,251,1.205,252,1.205,253,1.923,254,1.923,255,1.923,256,1.205,257,1.205,258,1.205,259,1.205,260,1.923,261,1.923,262,1.205,263,1.205,264,2.399,265,1.923,266,1.205,267,1.205,268,1.205,269,2.738,270,1.205,271,1.205,272,1.205,273,1.205,274,1.205,275,1.205,276,1.923,277,1.205,278,1.205,279,1.205,280,1.205,281,1.205,282,1.923,283,1.923,284,1.205,285,1.205,286,1.205,287,1.205,288,1.205]],["title/interfaces/NgcCollisionChange.html",[125,0.439,128,0.888]],["body/interfaces/NgcCollisionChange.html",[0,0.934,1,0.71,3,0.741,4,0.418,5,0.323,6,0.323,7,0.526,8,0.806,9,0.806,10,1.481,11,1.198,13,0.996,14,1.481,15,0.418,16,0.783,17,1.583,18,2.426,19,1.68,20,1.692,21,1.481,22,1.563,23,1.489,24,1.481,25,0.996,26,0.806,27,0.996,29,0.996,30,0.996,31,0.806,32,0.996,33,0.996,34,1.481,35,0.996,37,0.806,38,0.806,40,0.996,45,1.481,46,0.526,47,0.48,51,0.085,53,0.573,54,0.783,56,1.53,58,0.996,59,1.481,60,1.958,61,1.481,62,1.159,65,0.996,67,0.996,68,2.093,70,2.193,71,1.768,75,0.996,76,0.996,78,1.836,82,0.806,83,1.198,85,0.806,87,1.481,88,1.43,90,2.193,92,0.996,93,0.996,94,1.481,97,1.481,98,1.692,99,1.284,101,0.996,102,1.481,105,0.996,107,0.996,108,1.958,109,0.971,111,0.806,112,0.934,113,1.768,114,0.996,115,0.526,116,0.526,117,0.653,118,0.653,119,1.768,120,0.996,121,0.996,122,1.836,123,0.996,124,0.741,125,0.48,126,0.526,127,1.198,128,0.971,129,0.996,130,0.238,131,0.996,132,0.996,133,0.806,134,1.481,135,0.996,136,1.768,137,1.481,138,1.481,139,0.996,140,1.198,141,0.996,142,0.996,143,0.996,144,0.996,145,0.806,146,0.996,147,0.996,148,0.996,149,0.996,150,1.481,151,0.996,152,0.996,153,0.996,154,0.996,155,0.996,156,0.03,157,0.044,158,0.03,289,0.806,290,0.806]],["title/classes/NgcConfig.html",[47,0.439,130,0.324]],["body/classes/NgcConfig.html",[3,0.742,4,0.742,5,0.573,6,0.807,15,0.742,16,1.159,19,1.68,37,2.016,38,2.072,43,1.77,46,0.935,47,0.711,48,1.928,50,1.431,51,0.08,52,1.431,53,0.772,54,1.38,55,2.194,56,1.635,62,1.317,124,0.742,130,0.423,133,1.431,156,0.053,157,0.066,158,0.053,159,1.431,290,1.431,291,2.912,292,2.493,293,2.224,294,2.912,295,2.912,296,3.611]],["title/interfaces/NgcElementChange.html",[125,0.439,126,0.716]],["body/interfaces/NgcElementChange.html",[0,0.937,1,0.712,3,0.624,4,0.42,5,0.324,6,0.324,7,0.529,8,0.81,9,0.81,10,1.488,11,1.203,13,1.002,14,1.488,15,0.42,16,0.786,17,1.588,18,2.275,19,1.682,20,1.696,21,1.488,22,1.653,23,1.287,24,1.488,25,1.002,26,0.81,27,1.002,29,1.002,30,1.002,31,0.81,32,1.002,33,1.002,34,1.488,35,1.002,37,0.81,38,0.81,40,1.002,45,1.488,46,0.529,47,0.482,51,0.085,53,0.482,54,0.786,56,1.441,58,1.002,59,1.488,60,1.964,61,1.488,62,1.037,65,1.002,67,1.002,68,2.098,70,2.198,71,1.774,75,1.002,76,1.002,78,1.84,82,0.81,83,1.203,85,0.81,87,1.488,88,1.435,90,1.774,92,1.002,93,1.002,94,1.488,97,1.488,98,1.696,99,1.287,101,1.002,102,1.488,105,1.002,107,1.002,108,1.964,109,0.975,111,0.81,112,0.937,113,1.774,114,1.002,115,0.529,116,0.529,117,0.657,118,0.657,119,1.774,120,1.488,121,1.488,122,2.039,123,1.488,124,0.744,125,0.482,126,0.786,127,0.81,128,0.657,129,1.002,130,0.24,131,1.002,132,1.002,133,0.81,134,1.488,135,1.002,136,1.774,137,1.488,138,1.488,139,1.002,140,1.203,141,1.002,142,1.002,143,1.002,144,1.002,145,0.81,146,1.002,147,1.002,148,1.002,149,1.002,150,1.488,151,1.002,152,1.002,153,1.002,154,1.002,155,1.002,156,0.03,157,0.044,158,0.03,289,0.81,290,0.81]],["title/interfaces/NgcTrackedElement.html",[125,0.439,219,1.095]],["body/interfaces/NgcTrackedElement.html",[3,0.784,4,0.784,5,0.606,6,0.606,15,0.784,16,1.199,22,1.488,23,1.666,51,0.082,53,0.735,62,1.291,109,1.772,112,0.988,116,0.988,124,0.784,125,0.606,156,0.056,157,0.068,158,0.056,219,1.835,221,2.444,289,1.512,290,1.512,292,1.871,297,2.35,298,2.852,299,3.736]],["title/coverage.html",[300,2.317]],["body/coverage.html",[0,0.972,1,0.596,5,0.596,6,0.854,7,1.335,8,1.962,47,0.596,51,0.081,53,0.596,99,1.207,125,0.786,126,0.972,128,1.207,130,0.44,156,0.055,157,0.067,158,0.055,185,1.488,186,1.841,188,2.313,219,1.488,221,1.841,292,2.248,293,2.313,297,2.313,300,2.313,301,2.313,302,3.029,303,3.029,304,3.029,305,3.029,306,3.7,307,3.7,308,3.7,309,3.7,310,3.029,311,3.029,312,3.029,313,3.029]],["title/dependencies.html",[162,1.316,314,1.866]],["body/dependencies.html",[51,0.083,115,1.021,116,1.021,156,0.058,157,0.069,158,0.058,162,1.563,315,3.182,316,4.475,317,3.182,318,3.182,319,3.182,320,3.812,321,2.91,322,3.182,323,3.182,324,2.43,325,3.182,326,3.182,327,3.182,328,3.182,329,3.182,330,3.182]],["title/index.html",[15,0.475,331,1.866,332,1.866]],["body/index.html",[20,1.42,51,0.071,156,0.052,157,0.065,158,0.052,180,1.756,208,2.207,298,2.744,301,2.744,324,2.207,333,2.89,334,2.89,335,2.89,336,3.594,337,3.594,338,3.911,339,3.594,340,3.594,341,4.092,342,2.89,343,2.89,344,2.89,345,2.89,346,2.89,347,3.594,348,3.594,349,2.89,350,2.89,351,2.89,352,4.092,353,2.89,354,4.209,355,2.89,356,2.89,357,2.89,358,2.89,359,2.89,360,2.89,361,2.89,362,2.89,363,2.89,364,3.594,365,4.092,366,2.89,367,3.594,368,3.594,369,2.89,370,4.092,371,2.89,372,2.89]],["title/modules.html",[161,1.844]],["body/modules.html",[51,0.073,156,0.064,157,0.073,158,0.064,160,1.728,161,2.138,321,2.686,373,3.518,374,3.518,375,3.518]],["title/overview.html",[376,2.317]],["body/overview.html",[0,1.024,1,0.874,51,0.077,130,0.464,156,0.058,157,0.069,158,0.058,159,1.876,160,2.126,162,1.568,163,2.436,164,2.436,165,2.436,166,2.436,167,2.436,168,2.436,169,2.436,170,2.436,171,2.915,172,2.436,173,2.436,185,1.568,289,1.568,376,2.436,377,4.234,378,3.191]]],"invertedIndex":[["",{"_index":51,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["0",{"_index":111,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["0.10.2",{"_index":330,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":377,"title":{},"body":{"overview.html":{}}}],["1/3",{"_index":309,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":307,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":334,"title":{},"body":{"index.html":{}}}],["10.1.5",{"_index":316,"title":{},"body":{"dependencies.html":{}}}],["10.2.4",{"_index":325,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":65,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["13/22",{"_index":305,"title":{},"body":{"coverage.html":{}}}],["2.0.0",{"_index":328,"title":{},"body":{"dependencies.html":{}}}],["25",{"_index":306,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":378,"title":{},"body":{"overview.html":{}}}],["33",{"_index":308,"title":{},"body":{"coverage.html":{}}}],["59",{"_index":304,"title":{},"body":{"coverage.html":{}}}],["6.6.0",{"_index":326,"title":{},"body":{"dependencies.html":{}}}],["66",{"_index":310,"title":{},"body":{"coverage.html":{}}}],["8/12",{"_index":311,"title":{},"body":{"coverage.html":{}}}],["active",{"_index":18,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["addtrackedelement",{"_index":192,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["addtrackedelement(element",{"_index":199,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["aftercontentchecked",{"_index":10,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["angular",{"_index":180,"title":{},"body":{"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"index.html":{}}}],["angular/animations",{"_index":315,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":324,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["angular/common",{"_index":317,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler",{"_index":318,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":115,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":319,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":320,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":323,"title":{},"body":{"dependencies.html":{}}}],["angularcollisiondirective",{"_index":1,"title":{"directives/AngularCollisionDirective.html":{}},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"coverage.html":{},"overview.html":{}}}],["angularcollisiondirective.uid",{"_index":135,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["angularcollisionmodule",{"_index":160,"title":{"modules/AngularCollisionModule.html":{}},"body":{"modules/AngularCollisionModule.html":{},"modules.html":{},"overview.html":{}}}],["angularcollisionservice",{"_index":186,"title":{"injectables/AngularCollisionService.html":{}},"body":{"injectables/AngularCollisionService.html":{},"coverage.html":{}}}],["app",{"_index":340,"title":{},"body":{"index.html":{}}}],["array.isarray(elements",{"_index":253,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["artifacts",{"_index":356,"title":{},"body":{"index.html":{}}}],["auto",{"_index":336,"title":{},"body":{"index.html":{}}}],["between",{"_index":206,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["boolean",{"_index":56,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{}}}],["bootstrap",{"_index":165,"title":{},"body":{"modules/AngularCollisionModule.html":{},"overview.html":{}}}],["browse",{"_index":375,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":321,"title":{},"body":{"dependencies.html":{},"modules.html":{}}}],["build",{"_index":354,"title":{},"body":{"index.html":{}}}],["change",{"_index":275,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["changed",{"_index":121,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["changes",{"_index":71,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["check",{"_index":75,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["checkelementscollision",{"_index":193,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["checkelementscollision(first",{"_index":202,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["checking",{"_index":61,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["checkposition",{"_index":29,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["checks",{"_index":205,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["class",{"_index":130,"title":{"classes/NgcConfig.html":{}},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"coverage.html":{},"overview.html":{}}}],["class.collision",{"_index":42,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["classes",{"_index":291,"title":{},"body":{"classes/NgcConfig.html":{}}}],["cluster_angularcollisionmodule",{"_index":168,"title":{},"body":{"modules/AngularCollisionModule.html":{},"overview.html":{}}}],["cluster_angularcollisionmodule_declarations",{"_index":169,"title":{},"body":{"modules/AngularCollisionModule.html":{},"overview.html":{}}}],["cluster_angularcollisionmodule_exports",{"_index":170,"title":{},"body":{"modules/AngularCollisionModule.html":{},"overview.html":{}}}],["collidedelements",{"_index":90,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["collidedids",{"_index":141,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["collision",{"_index":20,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"index.html":{}}}],["collision.directive",{"_index":181,"title":{},"body":{"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{}}}],["collision.directive.ts",{"_index":8,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"coverage.html":{}}}],["collision.directive.ts:109",{"_index":91,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:121",{"_index":74,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:131",{"_index":81,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:144",{"_index":84,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:153",{"_index":86,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:41",{"_index":57,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:46",{"_index":66,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:51",{"_index":72,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:58",{"_index":69,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:62",{"_index":73,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:67",{"_index":106,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:72",{"_index":100,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:77",{"_index":104,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:82",{"_index":96,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:84",{"_index":110,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:85",{"_index":95,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:86",{"_index":49,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:88",{"_index":103,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:92",{"_index":79,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:98",{"_index":80,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.module.ts",{"_index":174,"title":{},"body":{"modules/AngularCollisionModule.html":{}}}],["collision.module.ts:10",{"_index":177,"title":{},"body":{"modules/AngularCollisionModule.html":{}}}],["collision.service.ts",{"_index":188,"title":{},"body":{"injectables/AngularCollisionService.html":{},"coverage.html":{}}}],["collision.service.ts:116",{"_index":204,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["collision.service.ts:132",{"_index":200,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["collision.service.ts:150",{"_index":217,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["collision.service.ts:18",{"_index":220,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["collision.service.ts:23",{"_index":223,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["collision.service.ts:28",{"_index":225,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["collision.service.ts:32",{"_index":198,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["collision.service.ts:64",{"_index":210,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["collision.service.ts:75",{"_index":213,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["collision.service.ts:95",{"_index":215,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["collision/src/lib/angular",{"_index":7,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"coverage.html":{}}}],["collision/src/lib/models/ngc",{"_index":292,"title":{},"body":{"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{}}}],["collisionactive",{"_index":132,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["collisionactivechange",{"_index":40,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["collisions",{"_index":127,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["collisions.length",{"_index":250,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["collisions.push(innerelement.element",{"_index":248,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["commit",{"_index":349,"title":{},"body":{"index.html":{}}}],["compodoc",{"_index":353,"title":{},"body":{"index.html":{}}}],["config",{"_index":46,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{}}}],["config.model",{"_index":118,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["config.model.ts",{"_index":293,"title":{},"body":{"classes/NgcConfig.html":{},"coverage.html":{}}}],["config.model.ts:4",{"_index":295,"title":{},"body":{"classes/NgcConfig.html":{}}}],["config.model.ts:5",{"_index":296,"title":{},"body":{"classes/NgcConfig.html":{}}}],["const",{"_index":145,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["constructor",{"_index":43,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{}}}],["constructor(@optional",{"_index":233,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["constructor(config",{"_index":197,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["constructor(disableinterval",{"_index":294,"title":{},"body":{"classes/NgcConfig.html":{}}}],["constructor(element",{"_index":44,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["constructor(public",{"_index":133,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{}}}],["containing",{"_index":120,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["coverage",{"_index":300,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["declarations",{"_index":164,"title":{},"body":{"modules/AngularCollisionModule.html":{},"overview.html":{}}}],["default",{"_index":63,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{}}}],["defined",{"_index":48,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{}}}],["demo",{"_index":339,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":162,"title":{"dependencies.html":{}},"body":{"modules/AngularCollisionModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":290,"title":{},"body":{"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["destroy",{"_index":21,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["detection",{"_index":335,"title":{},"body":{"index.html":{}}}],["directive",{"_index":0,"title":{"directives/AngularCollisionDirective.html":{}},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"coverage.html":{},"overview.html":{}}}],["directives",{"_index":2,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["directory",{"_index":359,"title":{},"body":{"index.html":{}}}],["disable",{"_index":58,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["disableinterval",{"_index":37,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{}}}],["dist",{"_index":358,"title":{},"body":{"index.html":{}}}],["docs",{"_index":348,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":301,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["domrect",{"_index":122,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["drag",{"_index":343,"title":{},"body":{"index.html":{}}}],["drop",{"_index":344,"title":{},"body":{"index.html":{}}}],["dynamic",{"_index":322,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":371,"title":{},"body":{"index.html":{}}}],["el.id",{"_index":268,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["element",{"_index":22,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["element's",{"_index":70,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["element.domrect",{"_index":246,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["element.element.updatecollisionstate",{"_index":249,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["element.id",{"_index":269,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["element.interface",{"_index":230,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["element.interface.ts",{"_index":297,"title":{},"body":{"interfaces/NgcTrackedElement.html":{},"coverage.html":{}}}],["element.rectanglechange",{"_index":271,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["element.starttracking",{"_index":270,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["element.stoptracking",{"_index":278,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["elementref",{"_index":45,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["elements",{"_index":208,"title":{},"body":{"injectables/AngularCollisionService.html":{},"index.html":{}}}],["elements.foreach((element",{"_index":255,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["elementsmap.foreach",{"_index":242,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["elementsmap.foreach((element",{"_index":241,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["emit",{"_index":76,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["emits",{"_index":101,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["end",{"_index":370,"title":{},"body":{"index.html":{}}}],["eventemitter",{"_index":68,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["execute",{"_index":367,"title":{},"body":{"index.html":{}}}],["export",{"_index":124,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["exportas",{"_index":129,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["exports",{"_index":167,"title":{},"body":{"modules/AngularCollisionModule.html":{},"overview.html":{}}}],["false",{"_index":94,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["file",{"_index":5,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{}}}],["finish",{"_index":218,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["first",{"_index":209,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["first.bottom",{"_index":262,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["first.left",{"_index":264,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["first.top",{"_index":260,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["flag",{"_index":362,"title":{},"body":{"index.html":{}}}],["forroot",{"_index":175,"title":{},"body":{"modules/AngularCollisionModule.html":{}}}],["forroot(config",{"_index":176,"title":{},"body":{"modules/AngularCollisionModule.html":{}}}],["foundelement",{"_index":280,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["foundelement.subscription.closed",{"_index":285,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["foundelement.subscription.unsubscribe",{"_index":286,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["foundelement?.subscription",{"_index":284,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["generate",{"_index":347,"title":{},"body":{"index.html":{}}}],["generated",{"_index":337,"title":{},"body":{"index.html":{}}}],["getting",{"_index":331,"title":{"index.html":{}},"body":{}}],["hostbinding",{"_index":114,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["hostbinding('class.collision",{"_index":131,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["hostbindings",{"_index":41,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["id",{"_index":23,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["identifier",{"_index":302,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":9,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["import",{"_index":112,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["index",{"_index":15,"title":{"index.html":{}},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["info",{"_index":3,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["init",{"_index":201,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["injectable",{"_index":185,"title":{"injectables/AngularCollisionService.html":{}},"body":{"injectables/AngularCollisionService.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":187,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["innerelement",{"_index":243,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["innerelement.domrect",{"_index":247,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["innerid",{"_index":244,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["input",{"_index":113,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["inputs",{"_index":36,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["instance",{"_index":102,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["instanceof",{"_index":254,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["interface",{"_index":125,"title":{"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{}}}],["interfaces",{"_index":289,"title":{},"body":{"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"overview.html":{}}}],["interval",{"_index":59,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["intervaltime",{"_index":38,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{}}}],["itself",{"_index":123,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["karma",{"_index":369,"title":{},"body":{"index.html":{}}}],["legend",{"_index":163,"title":{},"body":{"modules/AngularCollisionModule.html":{},"overview.html":{}}}],["library",{"_index":298,"title":{},"body":{"interfaces/NgcTrackedElement.html":{},"index.html":{}}}],["made",{"_index":345,"title":{},"body":{"index.html":{}}}],["manually",{"_index":350,"title":{},"body":{"index.html":{}}}],["map",{"_index":222,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["matching",{"_index":157,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["metadata",{"_index":12,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["methods",{"_index":28,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{}}}],["models/ngc",{"_index":117,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["module",{"_index":159,"title":{"modules/AngularCollisionModule.html":{}},"body":{"modules/AngularCollisionModule.html":{},"classes/NgcConfig.html":{},"overview.html":{}}}],["modules",{"_index":161,"title":{"modules.html":{}},"body":{"modules/AngularCollisionModule.html":{},"modules.html":{}}}],["modulewithproviders",{"_index":178,"title":{},"body":{"modules/AngularCollisionModule.html":{}}}],["name",{"_index":52,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{}}}],["new",{"_index":99,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"coverage.html":{}}}],["ng",{"_index":341,"title":{},"body":{"index.html":{}}}],["ngaftercontentchecked",{"_index":30,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["ngcangularcollision",{"_index":14,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["ngccollisionchange",{"_index":128,"title":{"interfaces/NgcCollisionChange.html":{}},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"coverage.html":{}}}],["ngcconfig",{"_index":47,"title":{"classes/NgcConfig.html":{}},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"coverage.html":{}}}],["ngcelementchange",{"_index":126,"title":{"interfaces/NgcElementChange.html":{}},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"coverage.html":{}}}],["ngcollision",{"_index":333,"title":{},"body":{"index.html":{}}}],["ngctrackedelement",{"_index":219,"title":{"interfaces/NgcTrackedElement.html":{}},"body":{"injectables/AngularCollisionService.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{}}}],["ngmodule",{"_index":179,"title":{},"body":{"modules/AngularCollisionModule.html":{}}}],["ngondestroy",{"_index":31,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["npm",{"_index":351,"title":{},"body":{"index.html":{}}}],["number",{"_index":62,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["object",{"_index":119,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["observable",{"_index":88,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["ondestroy",{"_index":11,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["optional",{"_index":54,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{}}}],["out",{"_index":173,"title":{},"body":{"modules/AngularCollisionModule.html":{},"overview.html":{}}}],["output",{"_index":108,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["outputs",{"_index":39,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["overview",{"_index":376,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":314,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":140,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["parameters",{"_index":50,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{}}}],["part",{"_index":346,"title":{},"body":{"index.html":{}}}],["performance",{"_index":240,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["pipe(takeuntil(element.destroy",{"_index":272,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["pipe(throttletime(100",{"_index":236,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["position",{"_index":60,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["positions",{"_index":224,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["private",{"_index":17,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["prod",{"_index":361,"title":{},"body":{"index.html":{}}}],["production",{"_index":363,"title":{},"body":{"index.html":{}}}],["project",{"_index":355,"title":{},"body":{"index.html":{}}}],["projects/angular",{"_index":6,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{}}}],["properties",{"_index":16,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["protractor",{"_index":372,"title":{},"body":{"index.html":{}}}],["provide",{"_index":183,"title":{},"body":{"modules/AngularCollisionModule.html":{}}}],["providedin",{"_index":231,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["providers",{"_index":166,"title":{},"body":{"modules/AngularCollisionModule.html":{},"overview.html":{}}}],["public",{"_index":19,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{}}}],["querylist",{"_index":212,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["rectanglechange",{"_index":24,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["register",{"_index":194,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["register(elements",{"_index":211,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["remove",{"_index":195,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["remove(elements",{"_index":214,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["removetrackedelement",{"_index":196,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["removetrackedelement(element",{"_index":216,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["reset",{"_index":172,"title":{},"body":{"modules/AngularCollisionModule.html":{},"overview.html":{}}}],["result",{"_index":156,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["results",{"_index":158,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["return",{"_index":182,"title":{},"body":{"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{}}}],["returns",{"_index":77,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{}}}],["root",{"_index":232,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["run",{"_index":352,"title":{},"body":{"index.html":{}}}],["running",{"_index":338,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":116,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":229,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["same",{"_index":107,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["second",{"_index":203,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["second.bottom",{"_index":263,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["second.left",{"_index":265,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["second.right",{"_index":266,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["second.top",{"_index":261,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["selector",{"_index":13,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["serve",{"_index":342,"title":{},"body":{"index.html":{}}}],["service",{"_index":299,"title":{},"body":{"interfaces/NgcTrackedElement.html":{}}}],["source",{"_index":4,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["start",{"_index":82,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["started",{"_index":332,"title":{"index.html":{}},"body":{}}],["starttracking",{"_index":32,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["statements",{"_index":303,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":26,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["status",{"_index":93,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["stop",{"_index":85,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["stoptracking",{"_index":33,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["stored",{"_index":357,"title":{},"body":{"index.html":{}}}],["subject",{"_index":98,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["subscribe((change",{"_index":273,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["subscribe((elementsmap",{"_index":237,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["subscription",{"_index":109,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["support",{"_index":373,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":374,"title":{},"body":{"modules.html":{}}}],["table",{"_index":313,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":312,"title":{},"body":{"coverage.html":{}}}],["takeuntil",{"_index":227,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["test",{"_index":366,"title":{},"body":{"index.html":{}}}],["tests",{"_index":365,"title":{},"body":{"index.html":{}}}],["this.active",{"_index":136,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.addtrackedelement(element",{"_index":256,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["this.addtrackedelement(elements",{"_index":257,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["this.checkelementscollision",{"_index":245,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["this.checkposition",{"_index":137,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.collision",{"_index":143,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.collisionactive",{"_index":142,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.collisionactivechange.emit",{"_index":144,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.destroy$.next(this.id",{"_index":139,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.disableinterval",{"_index":149,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.element.nativeelement.getboundingclientrect",{"_index":146,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.id",{"_index":134,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.intervaltime).subscribe",{"_index":152,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.rectanglechange$.next",{"_index":147,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.rectanglechange.emit",{"_index":148,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.removetrackedelement(element",{"_index":258,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["this.removetrackedelement(elements",{"_index":259,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["this.timersubscription",{"_index":150,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.timersubscription.closed",{"_index":154,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.timersubscription.unsubscribe",{"_index":155,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.trackedelements",{"_index":287,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["this.trackedelements.filter",{"_index":288,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["this.trackedelements.find",{"_index":281,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["this.trackedelements.push",{"_index":277,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["this.trackedelements.some((el",{"_index":267,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["this.trackedelementspositions",{"_index":235,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["this.trackedelementspositions$.next(this.trackedelementspositions",{"_index":276,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["this.trackedelementspositions.delete(element.id",{"_index":279,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["this.trackedelementspositions.set(change.element.id",{"_index":274,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["this.trackedelementspositionsubscription",{"_index":234,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["this.trackedelementspositionsubscription.closed",{"_index":251,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["this.trackedelementspositionsubscription.unsubscribe",{"_index":252,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["this.unsubscribe",{"_index":138,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.updatecollisionstate(false",{"_index":153,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["throttletime",{"_index":228,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["time",{"_index":67,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["timer",{"_index":87,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["timer(0",{"_index":151,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["timersubscription",{"_index":25,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["todo",{"_index":238,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["tracked",{"_index":221,"title":{},"body":{"injectables/AngularCollisionService.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{}}}],["trackedelement",{"_index":282,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["trackedelement.id",{"_index":283,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["trackedelements",{"_index":189,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["trackedelementspositions",{"_index":190,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["trackedelementspositionsubscription",{"_index":191,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["tracking",{"_index":83,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["true",{"_index":97,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["tslib",{"_index":327,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":207,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["type",{"_index":53,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{}}}],["uid",{"_index":27,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["unique",{"_index":105,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["unit",{"_index":364,"title":{},"body":{"index.html":{}}}],["unsubscribe",{"_index":34,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["update",{"_index":92,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["updatecollisionstate",{"_index":35,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["updatecollisionstate(active",{"_index":89,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["use",{"_index":360,"title":{},"body":{"index.html":{}}}],["usevalue",{"_index":184,"title":{},"body":{"modules/AngularCollisionModule.html":{}}}],["value",{"_index":64,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{}}}],["via",{"_index":368,"title":{},"body":{"index.html":{}}}],["void",{"_index":78,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["work",{"_index":239,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["wrapper",{"_index":226,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["yes",{"_index":55,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{}}}],["zone.js",{"_index":329,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":171,"title":{},"body":{"modules/AngularCollisionModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"directives/AngularCollisionDirective.html":{"url":"directives/AngularCollisionDirective.html","title":"directive - AngularCollisionDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  AngularCollisionDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-collision/src/lib/angular-collision.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            AfterContentChecked\n                            OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [ngcAngularCollision]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                active\n                            \n                            \n                                    Public\n                                collision\n                            \n                            \n                                    Public\n                                destroy$\n                            \n                            \n                                    Public\n                                element\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                rectangleChange$\n                            \n                            \n                                    Private\n                                timerSubscription\n                            \n                            \n                                    Private\n                                    Static\n                                uid\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                checkPosition\n                            \n                            \n                                    Public\n                                ngAfterContentChecked\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                startTracking\n                            \n                            \n                                    Public\n                                stopTracking\n                            \n                            \n                                    Public\n                                unsubscribe\n                            \n                            \n                                    Public\n                                updateCollisionState\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disableInterval\n                            \n                            \n                                intervalTime\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                collisionActiveChange\n                            \n                            \n                                rectangleChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class.collision\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(element: ElementRef, config?: NgcConfig)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:86\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        NgcConfig\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        disableInterval\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:41\n                            \n                        \n                \n                    \n                        Disable interval position checking\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        intervalTime\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 100\n                    \n                \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:46\n                            \n                        \n                \n                    \n                        Interval time for position checking\n\n                    \n                \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        collisionActiveChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:58\n                            \n                        \n                \n                    \n                        Element's collision changes\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        rectangleChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:51\n                            \n                        \n                \n                    \n                        Element's position changes\n\n                    \n                \n            \n        \n\n            \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class.collision\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:62\n                            \n                        \n\n\n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            checkPosition\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkPosition()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:121\n                \n            \n\n\n            \n                \n                    Check and emit element position\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngAfterContentChecked\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterContentChecked()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            startTracking\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    startTracking()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:131\n                \n            \n\n\n            \n                \n                    Start tracking element\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            stopTracking\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    stopTracking()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:144\n                \n            \n\n\n            \n                \n                    Stop tracking element\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            unsubscribe\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    unsubscribe()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:153\n                \n            \n\n\n            \n                \n                    Unsubscribe timer observable\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateCollisionState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateCollisionState(active: boolean, collidedElements: AngularCollisionDirective[])\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:109\n                \n            \n\n\n            \n                \n                    Update collision status\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    active\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    collidedElements\n                                    \n                                            AngularCollisionDirective[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            active\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:85\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            collision\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:82\n                            \n                        \n\n                \n                    \n                        True if element has any collision\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            destroy$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:72\n                            \n                        \n\n                \n                    \n                        Observable that emits on instance destroy\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            element\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:88\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:77\n                            \n                        \n\n                \n                    \n                        Unique id for directive instance\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rectangleChange$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:67\n                            \n                        \n\n                \n                    \n                        Element's collision changes as observable, same as output\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            timerSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:84\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            uid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:86\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import {\n  Directive,\n  AfterContentChecked,\n  ElementRef,\n  Output,\n  EventEmitter,\n  OnDestroy,\n  Input,\n  HostBinding,\n  Optional,\n} from '@angular/core';\nimport { timer, Subscription, Subject } from 'rxjs';\nimport { NgcConfig } from './models/ngc-config.model';\n\n/**\n * Object containing changed element's domRect and element itself\n */\nexport interface NgcElementChange {\n  domRect: DOMRect;\n  element: AngularCollisionDirective;\n}\n\n/**\n * Object with info about element's collisions\n */\nexport interface NgcCollisionChange {\n  id: number;\n  active: boolean;\n  collidedElements: AngularCollisionDirective[];\n}\n\n@Directive({\n  selector: '[ngcAngularCollision]',\n  exportAs: 'ngcAngularCollision',\n})\nexport class AngularCollisionDirective\n  implements AfterContentChecked, OnDestroy {\n  /**\n   * Disable interval position checking\n   */\n  @Input() public disableInterval: boolean;\n\n  /**\n   * Interval time for position checking\n   */\n  @Input() public intervalTime: number = 100;\n\n  /**\n   * Element's position changes\n   */\n  @Output() public rectangleChange: EventEmitter = new EventEmitter();\n\n  /**\n   * Element's collision changes\n   */\n  @Output() public collisionActiveChange: EventEmitter = new EventEmitter();\n\n  @HostBinding('class.collision') private collisionActive: boolean;\n\n  /**\n   * Element's collision changes as observable, same as output\n   */\n  public rectangleChange$: Subject = new Subject();\n\n  /**\n   * Observable that emits on instance destroy\n   */\n  public destroy$: Subject = new Subject();\n\n  /**\n   * Unique id for directive instance\n   */\n  public id: number;\n\n  /**\n   * True if element has any collision\n   */\n  public collision: boolean;\n\n  private timerSubscription: Subscription;\n  private active: boolean = false;\n  private static uid: number = 0;\n\n  constructor(public element: ElementRef, @Optional() config?: NgcConfig) {\n    this.id = AngularCollisionDirective.uid++;\n  }\n\n  public ngAfterContentChecked(): void {\n    if (this.active) {\n      this.checkPosition();\n    }\n  }\n\n  public ngOnDestroy(): void {\n    this.unsubscribe();\n    this.destroy$.next(this.id);\n  }\n\n  /**\n   * Update collision status\n   *\n   * @param active\n   * @param collidedIds\n   */\n  public updateCollisionState(\n    active: boolean,\n    collidedElements: AngularCollisionDirective[]\n  ): void {\n    this.collisionActive = active;\n    this.collision = active;\n    this.collisionActiveChange.emit({ id: this.id, active, collidedElements });\n  }\n\n  /**\n   * Check and emit element position\n   */\n  public checkPosition(): void {\n    const domRect: DOMRect = this.element.nativeElement.getBoundingClientRect();\n\n    this.rectangleChange$.next({ domRect, element: this });\n    this.rectangleChange.emit({ domRect, element: this });\n  }\n\n  /**\n   * Start tracking element\n   */\n  public startTracking(): void {\n    this.active = true;\n\n    if (!this.disableInterval) {\n      this.timerSubscription = timer(0, this.intervalTime).subscribe(() => {\n        this.checkPosition();\n      });\n    }\n  }\n\n  /**\n   * Stop tracking element\n   */\n  public stopTracking(): void {\n    this.active = false;\n    this.updateCollisionState(false, []);\n    this.unsubscribe();\n  }\n\n  /**\n   * Unsubscribe timer observable\n   */\n  public unsubscribe(): void {\n    if (this.timerSubscription && !this.timerSubscription.closed) {\n      this.timerSubscription.unsubscribe();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AngularCollisionModule.html":{"url":"modules/AngularCollisionModule.html","title":"module - AngularCollisionModule","body":"\n                   \n\n\n\n\n    Modules\n    AngularCollisionModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AngularCollisionModule\n\n\n\ncluster_AngularCollisionModule_declarations\n\n\n\ncluster_AngularCollisionModule_exports\n\n\n\n\nAngularCollisionDirective\n\nAngularCollisionDirective\n\n\n\nAngularCollisionModule\n\nAngularCollisionModule\n\nAngularCollisionModule -->\n\nAngularCollisionDirective->AngularCollisionModule\n\n\n\n\n\nAngularCollisionDirective \n\nAngularCollisionDirective \n\nAngularCollisionDirective  -->\n\nAngularCollisionModule->AngularCollisionDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/angular-collision/src/lib/angular-collision.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AngularCollisionDirective\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AngularCollisionDirective\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(config: NgcConfig)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.module.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                NgcConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { AngularCollisionDirective } from './angular-collision.directive';\nimport { NgcConfig } from './models/ngc-config.model';\n\n@NgModule({\n  declarations: [AngularCollisionDirective],\n  exports: [AngularCollisionDirective],\n})\nexport class AngularCollisionModule {\n  static forRoot(\n    config: NgcConfig\n  ): ModuleWithProviders {\n    return {\n      ngModule: AngularCollisionModule,\n      providers: [{ provide: NgcConfig, useValue: config }],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AngularCollisionService.html":{"url":"injectables/AngularCollisionService.html","title":"injectable - AngularCollisionService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AngularCollisionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-collision/src/lib/angular-collision.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                trackedElements\n                            \n                            \n                                    Public\n                                trackedElementsPositions\n                            \n                            \n                                    Public\n                                trackedElementsPositions$\n                            \n                            \n                                    Public\n                                trackedElementsPositionSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addTrackedElement\n                            \n                            \n                                    Private\n                                checkElementsCollision\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                register\n                            \n                            \n                                    Public\n                                remove\n                            \n                            \n                                    Private\n                                removeTrackedElement\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config?: NgcConfig)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-collision/src/lib/angular-collision.service.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        NgcConfig\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            addTrackedElement\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addTrackedElement(element: AngularCollisionDirective)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.service.ts:132\n                \n            \n\n\n            \n                \n                    Init tracking of element\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    element\n                                    \n                                            AngularCollisionDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            checkElementsCollision\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkElementsCollision(first: DOMRect, second: DOMRect)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.service.ts:116\n                \n            \n\n\n            \n                \n                    Checks collisions between two elements\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    first\n                                    \n                                            DOMRect\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    second\n                                    \n                                            DOMRect\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            register\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    register(elements: QueryList | AngularCollisionDirective | AngularCollisionDirective[])\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.service.ts:75\n                \n            \n\n\n            \n                \n                    Start tracking element / elements\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    elements\n                                    \n                                            QueryList | AngularCollisionDirective | AngularCollisionDirective[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(elements: QueryList | AngularCollisionDirective | AngularCollisionDirective[])\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.service.ts:95\n                \n            \n\n\n            \n                \n                    Stop tracking element / elements\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    elements\n                                    \n                                            QueryList | AngularCollisionDirective | AngularCollisionDirective[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            removeTrackedElement\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeTrackedElement(element: AngularCollisionDirective)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.service.ts:150\n                \n            \n\n\n            \n                \n                    Finish tracking of element\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    element\n                                    \n                                            AngularCollisionDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            trackedElements\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgcTrackedElement[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.service.ts:18\n                            \n                        \n\n                \n                    \n                        Tracked elements\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            trackedElementsPositions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Map\n\n                        \n                    \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.service.ts:23\n                            \n                        \n\n                \n                    \n                        Map of tracked elements positions\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            trackedElementsPositions$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Subject>\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.service.ts:28\n                            \n                        \n\n                \n                    \n                        Observable wrapper of tracked elements positions\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            trackedElementsPositionSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.service.ts:32\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, OnDestroy, Optional, QueryList } from '@angular/core';\nimport { takeUntil, throttleTime } from 'rxjs/operators';\nimport { Subject, Subscription } from 'rxjs';\nimport {\n  AngularCollisionDirective,\n  NgcElementChange,\n} from './angular-collision.directive';\nimport { NgcTrackedElement } from './models/ngc-tracked-element.interface';\nimport { NgcConfig } from './models/ngc-config.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AngularCollisionService implements OnDestroy {\n  /**\n   *  Tracked elements\n   */\n  public trackedElements: NgcTrackedElement[] = [];\n\n  /**\n   *  Map of tracked elements positions\n   */\n  public trackedElementsPositions: Map = new Map();\n\n  /**\n   *  Observable wrapper of tracked elements positions\n   */\n  public trackedElementsPositions$: Subject\n  > = new Subject();\n\n  public trackedElementsPositionSubscription: Subscription;\n\n  constructor(@Optional() config?: NgcConfig) {\n    this.trackedElementsPositionSubscription = this.trackedElementsPositions$\n      .pipe(throttleTime(100))\n      .subscribe((elementsMap: Map) => {\n        // TODO work on performance\n        elementsMap.forEach((element: NgcElementChange, id: number) => {\n          const collisions: AngularCollisionDirective[] = [];\n\n          elementsMap.forEach(\n            (innerElement: NgcElementChange, innerId: number) => {\n              if (\n                id !== innerId &&\n                this.checkElementsCollision(\n                  element.domRect,\n                  innerElement.domRect\n                )\n              ) {\n                collisions.push(innerElement.element);\n              }\n            }\n          );\n\n          element.element.updateCollisionState(\n            collisions.length > 0,\n            collisions\n          );\n        });\n      });\n  }\n\n  public ngOnDestroy(): void {\n    if (!this.trackedElementsPositionSubscription.closed) {\n      this.trackedElementsPositionSubscription.unsubscribe();\n    }\n  }\n\n  /**\n   * Start tracking element / elements\n   *\n   * @param elements\n   */\n  public register(\n    elements:\n      | QueryList\n      | AngularCollisionDirective\n      | AngularCollisionDirective[]\n  ): void {\n    if (Array.isArray(elements) || elements instanceof QueryList) {\n      elements.forEach((element) => {\n        this.addTrackedElement(element);\n      });\n    } else {\n      this.addTrackedElement(elements);\n    }\n  }\n\n  /**\n   * Stop tracking element / elements\n   *\n   * @param elements\n   */\n  public remove(\n    elements:\n      | QueryList\n      | AngularCollisionDirective\n      | AngularCollisionDirective[]\n  ): void {\n    if (Array.isArray(elements) || elements instanceof QueryList) {\n      elements.forEach((element) => {\n        this.removeTrackedElement(element);\n      });\n    } else {\n      this.removeTrackedElement(elements);\n    }\n  }\n\n  /**\n   * Checks collisions between two elements\n   *\n   * @param first\n   * @param second\n   */\n  private checkElementsCollision(first: DOMRect, second: DOMRect): boolean {\n    return (\n      ((first.top = second.top) ||\n        (first.bottom = second.top) ||\n        (first.top = second.bottom)) &&\n      ((first.left >= second.left && first.left = second.left) ||\n        (first.left = second.right))\n    );\n  }\n\n  /**\n   * Init tracking of element\n   *\n   * @param element\n   */\n  private addTrackedElement(element: AngularCollisionDirective): void {\n    if (!this.trackedElements.some((el) => el.id == element.id)) {\n      element.startTracking();\n      const subscription = element.rectangleChange$\n        .pipe(takeUntil(element.destroy$))\n        .subscribe((change: NgcElementChange) => {\n          this.trackedElementsPositions.set(change.element.id, change);\n          this.trackedElementsPositions$.next(this.trackedElementsPositions);\n        });\n      this.trackedElements.push({ id: element.id, subscription });\n    }\n  }\n\n  /**\n   * Finish tracking of element\n   *\n   * @param element\n   */\n  private removeTrackedElement(element: AngularCollisionDirective): void {\n    element.stopTracking();\n\n    this.trackedElementsPositions.delete(element.id);\n    this.trackedElementsPositions$.next(this.trackedElementsPositions);\n\n    const foundElement = this.trackedElements.find(\n      (trackedElement) => trackedElement.id === element.id\n    );\n\n    if (foundElement?.subscription && !foundElement.subscription.closed) {\n      foundElement.subscription.unsubscribe();\n    }\n\n    this.trackedElements = this.trackedElements.filter(\n      (trackedElement) => trackedElement.id !== element.id\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgcCollisionChange.html":{"url":"interfaces/NgcCollisionChange.html","title":"interface - NgcCollisionChange","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgcCollisionChange\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-collision/src/lib/angular-collision.directive.ts\n        \n\n            \n                Description\n            \n            \n                Object with info about element's collisions\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        active\n                                \n                                \n                                        collidedElements\n                                \n                                \n                                        id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        active\n                                    \n                                \n                                \n                                    \n                                        active:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        collidedElements\n                                    \n                                \n                                \n                                    \n                                        collidedElements:     AngularCollisionDirective[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     AngularCollisionDirective[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Directive,\n  AfterContentChecked,\n  ElementRef,\n  Output,\n  EventEmitter,\n  OnDestroy,\n  Input,\n  HostBinding,\n  Optional,\n} from '@angular/core';\nimport { timer, Subscription, Subject } from 'rxjs';\nimport { NgcConfig } from './models/ngc-config.model';\n\n/**\n * Object containing changed element's domRect and element itself\n */\nexport interface NgcElementChange {\n  domRect: DOMRect;\n  element: AngularCollisionDirective;\n}\n\n/**\n * Object with info about element's collisions\n */\nexport interface NgcCollisionChange {\n  id: number;\n  active: boolean;\n  collidedElements: AngularCollisionDirective[];\n}\n\n@Directive({\n  selector: '[ngcAngularCollision]',\n  exportAs: 'ngcAngularCollision',\n})\nexport class AngularCollisionDirective\n  implements AfterContentChecked, OnDestroy {\n  /**\n   * Disable interval position checking\n   */\n  @Input() public disableInterval: boolean;\n\n  /**\n   * Interval time for position checking\n   */\n  @Input() public intervalTime: number = 100;\n\n  /**\n   * Element's position changes\n   */\n  @Output() public rectangleChange: EventEmitter = new EventEmitter();\n\n  /**\n   * Element's collision changes\n   */\n  @Output() public collisionActiveChange: EventEmitter = new EventEmitter();\n\n  @HostBinding('class.collision') private collisionActive: boolean;\n\n  /**\n   * Element's collision changes as observable, same as output\n   */\n  public rectangleChange$: Subject = new Subject();\n\n  /**\n   * Observable that emits on instance destroy\n   */\n  public destroy$: Subject = new Subject();\n\n  /**\n   * Unique id for directive instance\n   */\n  public id: number;\n\n  /**\n   * True if element has any collision\n   */\n  public collision: boolean;\n\n  private timerSubscription: Subscription;\n  private active: boolean = false;\n  private static uid: number = 0;\n\n  constructor(public element: ElementRef, @Optional() config?: NgcConfig) {\n    this.id = AngularCollisionDirective.uid++;\n  }\n\n  public ngAfterContentChecked(): void {\n    if (this.active) {\n      this.checkPosition();\n    }\n  }\n\n  public ngOnDestroy(): void {\n    this.unsubscribe();\n    this.destroy$.next(this.id);\n  }\n\n  /**\n   * Update collision status\n   *\n   * @param active\n   * @param collidedIds\n   */\n  public updateCollisionState(\n    active: boolean,\n    collidedElements: AngularCollisionDirective[]\n  ): void {\n    this.collisionActive = active;\n    this.collision = active;\n    this.collisionActiveChange.emit({ id: this.id, active, collidedElements });\n  }\n\n  /**\n   * Check and emit element position\n   */\n  public checkPosition(): void {\n    const domRect: DOMRect = this.element.nativeElement.getBoundingClientRect();\n\n    this.rectangleChange$.next({ domRect, element: this });\n    this.rectangleChange.emit({ domRect, element: this });\n  }\n\n  /**\n   * Start tracking element\n   */\n  public startTracking(): void {\n    this.active = true;\n\n    if (!this.disableInterval) {\n      this.timerSubscription = timer(0, this.intervalTime).subscribe(() => {\n        this.checkPosition();\n      });\n    }\n  }\n\n  /**\n   * Stop tracking element\n   */\n  public stopTracking(): void {\n    this.active = false;\n    this.updateCollisionState(false, []);\n    this.unsubscribe();\n  }\n\n  /**\n   * Unsubscribe timer observable\n   */\n  public unsubscribe(): void {\n    if (this.timerSubscription && !this.timerSubscription.closed) {\n      this.timerSubscription.unsubscribe();\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NgcConfig.html":{"url":"classes/NgcConfig.html","title":"class - NgcConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NgcConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-collision/src/lib/models/ngc-config.model.ts\n        \n\n            \n                Description\n            \n            \n                Optional module config\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                disableInterval\n                            \n                            \n                                    Public\n                                    Optional\n                                intervalTime\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(disableInterval?: boolean, intervalTime?: number)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-collision/src/lib/models/ngc-config.model.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        disableInterval\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        intervalTime\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            disableInterval\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/models/ngc-config.model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            intervalTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/models/ngc-config.model.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class NgcConfig {\n  constructor(public disableInterval?: boolean, public intervalTime?: number) {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgcElementChange.html":{"url":"interfaces/NgcElementChange.html","title":"interface - NgcElementChange","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgcElementChange\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-collision/src/lib/angular-collision.directive.ts\n        \n\n            \n                Description\n            \n            \n                Object containing changed element's domRect and element itself\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        domRect\n                                \n                                \n                                        element\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        domRect\n                                    \n                                \n                                \n                                    \n                                        domRect:     DOMRect\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DOMRect\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        element\n                                    \n                                \n                                \n                                    \n                                        element:     AngularCollisionDirective\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     AngularCollisionDirective\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Directive,\n  AfterContentChecked,\n  ElementRef,\n  Output,\n  EventEmitter,\n  OnDestroy,\n  Input,\n  HostBinding,\n  Optional,\n} from '@angular/core';\nimport { timer, Subscription, Subject } from 'rxjs';\nimport { NgcConfig } from './models/ngc-config.model';\n\n/**\n * Object containing changed element's domRect and element itself\n */\nexport interface NgcElementChange {\n  domRect: DOMRect;\n  element: AngularCollisionDirective;\n}\n\n/**\n * Object with info about element's collisions\n */\nexport interface NgcCollisionChange {\n  id: number;\n  active: boolean;\n  collidedElements: AngularCollisionDirective[];\n}\n\n@Directive({\n  selector: '[ngcAngularCollision]',\n  exportAs: 'ngcAngularCollision',\n})\nexport class AngularCollisionDirective\n  implements AfterContentChecked, OnDestroy {\n  /**\n   * Disable interval position checking\n   */\n  @Input() public disableInterval: boolean;\n\n  /**\n   * Interval time for position checking\n   */\n  @Input() public intervalTime: number = 100;\n\n  /**\n   * Element's position changes\n   */\n  @Output() public rectangleChange: EventEmitter = new EventEmitter();\n\n  /**\n   * Element's collision changes\n   */\n  @Output() public collisionActiveChange: EventEmitter = new EventEmitter();\n\n  @HostBinding('class.collision') private collisionActive: boolean;\n\n  /**\n   * Element's collision changes as observable, same as output\n   */\n  public rectangleChange$: Subject = new Subject();\n\n  /**\n   * Observable that emits on instance destroy\n   */\n  public destroy$: Subject = new Subject();\n\n  /**\n   * Unique id for directive instance\n   */\n  public id: number;\n\n  /**\n   * True if element has any collision\n   */\n  public collision: boolean;\n\n  private timerSubscription: Subscription;\n  private active: boolean = false;\n  private static uid: number = 0;\n\n  constructor(public element: ElementRef, @Optional() config?: NgcConfig) {\n    this.id = AngularCollisionDirective.uid++;\n  }\n\n  public ngAfterContentChecked(): void {\n    if (this.active) {\n      this.checkPosition();\n    }\n  }\n\n  public ngOnDestroy(): void {\n    this.unsubscribe();\n    this.destroy$.next(this.id);\n  }\n\n  /**\n   * Update collision status\n   *\n   * @param active\n   * @param collidedIds\n   */\n  public updateCollisionState(\n    active: boolean,\n    collidedElements: AngularCollisionDirective[]\n  ): void {\n    this.collisionActive = active;\n    this.collision = active;\n    this.collisionActiveChange.emit({ id: this.id, active, collidedElements });\n  }\n\n  /**\n   * Check and emit element position\n   */\n  public checkPosition(): void {\n    const domRect: DOMRect = this.element.nativeElement.getBoundingClientRect();\n\n    this.rectangleChange$.next({ domRect, element: this });\n    this.rectangleChange.emit({ domRect, element: this });\n  }\n\n  /**\n   * Start tracking element\n   */\n  public startTracking(): void {\n    this.active = true;\n\n    if (!this.disableInterval) {\n      this.timerSubscription = timer(0, this.intervalTime).subscribe(() => {\n        this.checkPosition();\n      });\n    }\n  }\n\n  /**\n   * Stop tracking element\n   */\n  public stopTracking(): void {\n    this.active = false;\n    this.updateCollisionState(false, []);\n    this.unsubscribe();\n  }\n\n  /**\n   * Unsubscribe timer observable\n   */\n  public unsubscribe(): void {\n    if (this.timerSubscription && !this.timerSubscription.closed) {\n      this.timerSubscription.unsubscribe();\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgcTrackedElement.html":{"url":"interfaces/NgcTrackedElement.html","title":"interface - NgcTrackedElement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgcTrackedElement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-collision/src/lib/models/ngc-tracked-element.interface.ts\n        \n\n            \n                Description\n            \n            \n                Tracked element in library service\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        subscription\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subscription\n                                    \n                                \n                                \n                                    \n                                        subscription:     Subscription\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Subscription\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Subscription } from 'rxjs';\n\n/**\n * Tracked element in library service\n */\nexport interface NgcTrackedElement {\n  id: number;\n  subscription: Subscription;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/angular-collision/src/lib/angular-collision.directive.ts\n            \n            directive\n            AngularCollisionDirective\n            \n                59 %\n                (13/22)\n            \n        \n        \n            \n                \n                projects/angular-collision/src/lib/angular-collision.directive.ts\n            \n            interface\n            NgcCollisionChange\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                projects/angular-collision/src/lib/angular-collision.directive.ts\n            \n            interface\n            NgcElementChange\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                projects/angular-collision/src/lib/angular-collision.service.ts\n            \n            injectable\n            AngularCollisionService\n            \n                66 %\n                (8/12)\n            \n        \n        \n            \n                \n                projects/angular-collision/src/lib/models/ngc-config.model.ts\n            \n            class\n            NgcConfig\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                projects/angular-collision/src/lib/models/ngc-tracked-element.interface.ts\n            \n            interface\n            NgcTrackedElement\n            \n                33 %\n                (1/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~10.1.5\n        \n            @angular/common : ~10.1.5\n        \n            @angular/compiler : ~10.1.5\n        \n            @angular/core : ~10.1.5\n        \n            @angular/forms : ~10.1.5\n        \n            @angular/platform-browser : ~10.1.5\n        \n            @angular/platform-browser-dynamic : ~10.1.5\n        \n            @angular/router : ~10.1.5\n        \n            @angular/cdk : ^10.2.4\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNgCollision\nAngular 10 library for elements collision detection\nAuto-generated documentation\nRunning demo app\nng serve demo-app\nDrag & drop made with angular/cdk. Not a part of library.\nGenerate docs\nDocumentation is auto-generated every commit.\nYou can also generate docs manually by:\nnpm run compodoc\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AngularCollisionModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AngularCollisionModule\n\n\n\ncluster_AngularCollisionModule_declarations\n\n\n\ncluster_AngularCollisionModule_exports\n\n\n\n\nAngularCollisionDirective\n\nAngularCollisionDirective\n\n\n\nAngularCollisionModule\n\nAngularCollisionModule\n\nAngularCollisionModule -->\n\nAngularCollisionDirective->AngularCollisionModule\n\n\n\n\n\nAngularCollisionDirective \n\nAngularCollisionDirective \n\nAngularCollisionDirective  -->\n\nAngularCollisionModule->AngularCollisionDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
