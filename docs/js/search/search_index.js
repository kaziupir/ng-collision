var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/directives/AngularCollisionDirective.html",[0,0.568,1,0.324]],["body/directives/AngularCollisionDirective.html",[0,0.678,1,0.476,2,1.148,3,0.471,4,0.292,5,0.226,6,0.837,7,1.366,8,0.564,9,0.736,10,1.411,11,1.411,12,1.14,13,1.148,14,0.908,15,1.14,16,0.292,17,0.593,18,2.003,19,1.411,20,1.411,21,1.411,22,1.411,23,1.411,24,1.14,25,1.411,26,1.425,27,1.582,28,1.773,29,1.275,30,1.306,31,1.895,32,1.123,33,1.617,34,1.617,35,1.849,36,1.308,37,1.617,38,1.617,39,1.895,40,1.411,41,1.849,42,1.14,43,1.14,44,1.849,45,1.411,46,1.849,47,1.849,48,0.697,49,1.148,50,1.773,51,0.854,52,0.524,53,2.082,54,1.849,55,1.14,56,0.085,57,0.925,58,0.808,59,0.743,60,1.148,61,1.546,62,1.148,63,0.736,64,1.06,65,1.359,66,1.06,67,0.897,68,1.895,69,1.359,70,0.736,71,1.148,72,0.908,73,1.993,74,1.148,75,2.073,76,1.306,77,1.148,78,1.148,79,1.148,80,1.123,81,1.123,82,2.073,83,1.582,84,1.148,85,1.123,86,1.617,87,1.148,88,1.148,89,1.148,90,0.908,91,1.06,92,1.148,93,0.908,94,1.148,95,1.411,96,1.472,97,1.148,98,1.773,99,1.148,100,1.123,101,1.123,102,1.993,103,1.14,104,1.148,105,1.88,106,1.095,107,1.148,108,1.148,109,1.148,110,0.925,111,1.148,112,0.736,113,1.148,114,1.411,115,1.148,116,1.148,117,1.123,118,1.617,119,1.148,120,1.148,121,1.123,122,1.148,123,1.123,124,1.773,125,0.591,126,1.411,127,0.697,128,0.368,129,0.368,130,0.457,131,0.564,132,1.123,133,0.697,134,0.697,135,1.611,136,0.697,137,0.457,138,0.364,139,0.292,140,0.457,141,0.368,142,0.697,143,0.114,144,0.697,145,0.697,146,0.564,147,1.123,148,0.697,149,1.123,150,0.697,151,1.123,152,0.697,153,1.411,154,0.697,155,0.697,156,0.697,157,0.697,158,0.697,159,1.411,160,1.123,161,1.123,162,0.697,163,0.908,164,0.697,165,0.697,166,0.697,167,0.697,168,0.697,169,0.697,170,0.697,171,0.564,172,0.697,173,0.697,174,0.697,175,1.123,176,0.697,177,0.697,178,0.697,179,0.697,180,0.697,181,0.021,182,0.034,183,0.021]],["title/modules/AngularCollisionModule.html",[184,0.888,185,0.888]],["body/modules/AngularCollisionModule.html",[1,0.652,3,0.715,4,0.715,5,0.552,6,0.694,7,1.133,24,1.733,32,1.705,51,1.239,52,0.821,53,1.379,55,1.379,56,0.084,57,1.118,58,0.552,59,0.715,82,1.705,125,0.983,128,0.901,130,1.118,131,1.379,137,0.552,143,0.278,181,0.051,182,0.064,183,0.051,184,1.118,185,1.742,186,1.705,187,1.379,188,2.143,189,2.345,190,1.705,191,2.694,192,2.947,193,2.143,194,2.143,195,2.143,196,2.694,197,2.143,198,2.143,199,2.806,200,2.694,201,2.806,202,2.806,203,3.86,204,2.947,205,1.379,206,2.143,207,2.143,208,2.806,209,2.806]],["title/injectables/AngularCollisionService.html",[210,1.095,211,1.095]],["body/injectables/AngularCollisionService.html",[1,0.616,3,0.355,4,0.355,5,0.274,6,0.778,7,1.27,9,0.555,12,1.059,16,0.355,17,0.692,18,1.841,26,1.368,29,1.27,30,1.05,32,1.31,36,1.457,48,1.601,53,1.915,55,1.575,56,0.085,57,1.277,58,0.737,59,0.817,61,0.858,67,0.549,68,1.601,69,1.05,82,2.06,83,1.525,90,1.059,91,1.454,93,1.059,96,0.858,105,1.575,106,0.952,110,1.277,112,0.555,125,0.817,128,0.447,129,0.447,130,0.555,135,1.665,137,0.274,139,0.755,140,1.181,143,0.138,163,1.665,171,1.294,181,0.025,182,0.039,183,0.025,205,0.685,206,1.064,207,1.064,210,1.059,211,1.059,212,1.394,213,1.064,214,2.635,215,3.39,216,2.635,217,2.155,218,2.155,219,2.012,220,2.012,221,2.155,222,2.155,223,2.155,224,1.394,225,2.155,226,2.155,227,2.965,228,1.394,229,2.155,230,2.155,231,1.645,232,3.237,233,1.645,234,1.394,235,1.394,236,2.861,237,1.394,238,1.394,239,1.394,240,2.155,241,1.394,242,2.155,243,1.294,244,1.394,245,2.148,246,2.698,247,1.394,248,2.965,249,1.394,250,2.155,251,1.394,252,1.394,253,1.394,254,1.394,255,1.394,256,1.064,257,1.394,258,1.394,259,1.394,260,1.394,261,1.394,262,1.394,263,1.394,264,1.394,265,1.394,266,1.394,267,2.155,268,1.394,269,1.394,270,1.394,271,1.394,272,1.394,273,1.394,274,1.394,275,1.394,276,2.155,277,2.155,278,2.155,279,1.394,280,1.394,281,1.394,282,1.394,283,2.155,284,2.155,285,1.394,286,1.394,287,2.635,288,2.155,289,1.394,290,1.394,291,1.394,292,2.965,293,1.394,294,1.394,295,1.394,296,1.394,297,1.394,298,1.064,299,2.155,300,1.394,301,1.394,302,1.394,303,1.394,304,1.394,305,2.155,306,2.155,307,1.394,308,1.394,309,1.394,310,1.394,311,1.394]],["title/interfaces/NgcCollisionChange.html",[138,0.439,141,0.716]],["body/interfaces/NgcCollisionChange.html",[0,0.752,1,0.529,3,0.752,4,0.428,5,0.33,6,0.33,7,0.539,8,0.825,9,0.669,10,1.507,11,1.507,12,1.219,14,0.825,15,1.219,16,0.428,17,0.796,18,1.85,19,1.02,20,1.02,21,1.02,22,1.02,23,1.02,24,0.825,25,1.02,26,1.377,27,1.5,28,1.507,29,1.267,30,1.5,31,1.507,33,1.02,34,1.02,36,0.825,37,1.02,38,1.02,39,1.507,40,1.02,42,0.825,43,0.825,45,1.02,50,1.507,51,0.796,52,0.488,56,0.085,58,0.581,59,0.632,61,1.573,63,0.669,64,0.988,65,1.298,66,0.988,67,0.959,69,0.669,70,0.669,72,0.825,73,2.113,75,2.212,76,1.175,80,1.02,81,1.02,83,1.54,85,1.02,86,1.507,90,0.825,91,0.988,93,0.825,95,1.507,96,1.45,98,2.212,100,1.02,101,1.02,102,2.399,103,1.219,105,1.85,106,1.116,110,0.988,112,0.669,114,1.507,117,1.02,118,1.507,121,1.02,123,1.02,124,1.981,125,0.752,126,1.793,127,1.02,128,0.539,129,0.539,130,0.669,131,0.825,132,1.793,133,1.02,134,1.02,135,1.85,136,1.02,137,0.581,138,0.488,139,0.428,140,0.988,141,0.796,142,1.02,143,0.166,144,1.02,145,1.02,146,0.825,147,1.507,148,1.02,149,1.507,150,1.02,151,1.507,152,1.02,153,1.793,154,1.02,155,1.02,156,1.02,157,1.02,158,1.02,159,1.793,160,1.507,161,1.507,162,1.02,163,1.219,164,1.02,165,1.02,166,1.02,167,1.02,168,1.02,169,1.02,170,1.02,171,0.825,172,1.02,173,1.02,174,1.02,175,1.507,176,1.02,177,1.02,178,1.02,179,1.02,180,1.02,181,0.03,182,0.045,183,0.03,312,0.825,313,0.825]],["title/classes/NgcConfig.html",[52,0.439,143,0.221]],["body/classes/NgcConfig.html",[3,0.722,4,0.722,5,0.558,6,0.8,16,0.722,17,1.14,26,1.371,42,1.997,43,2.056,48,2.158,51,0.91,52,0.699,53,1.905,55,1.393,56,0.083,57,1.129,58,0.763,59,0.905,61,1.619,63,1.415,64,1.619,65,1.619,66,1.619,67,1.035,68,2.158,69,1.415,70,1.415,72,1.745,103,1.745,137,0.558,143,0.28,181,0.051,182,0.064,183,0.051,184,1.129,313,1.393,314,2.835,315,2.47,316,2.165,317,2.835,318,2.835,319,2.835,320,2.835]],["title/interfaces/NgcElementChange.html",[138,0.439,139,0.568]],["body/interfaces/NgcElementChange.html",[0,0.754,1,0.53,3,0.634,4,0.43,5,0.332,6,0.332,7,0.541,8,0.829,9,0.672,10,1.513,11,1.513,12,1.223,14,0.829,15,1.223,16,0.43,17,0.799,18,1.853,19,1.025,20,1.025,21,1.025,22,1.025,23,1.025,24,0.829,25,1.025,26,1.378,27,1.503,28,1.513,29,1.338,30,1.301,31,1.513,33,1.025,34,1.025,36,0.829,37,1.025,38,1.025,39,1.513,40,1.025,42,0.829,43,0.829,45,1.025,50,1.513,51,0.799,52,0.49,56,0.085,58,0.49,59,0.634,61,1.503,63,0.672,64,0.992,65,1.301,66,0.992,67,0.888,69,0.672,70,0.672,72,0.829,73,2.118,75,2.216,76,1.179,80,1.025,81,1.025,83,1.542,85,1.025,86,1.513,90,0.829,91,0.992,93,0.829,95,1.513,96,1.453,98,1.798,100,1.025,101,1.025,102,2.216,103,1.223,105,1.853,106,1.119,110,0.992,112,0.672,114,1.513,117,1.025,118,1.513,121,1.025,123,1.025,124,1.985,125,0.754,126,1.798,127,1.025,128,0.541,129,0.541,130,0.672,131,0.829,132,1.798,133,1.513,134,1.513,135,2.048,136,1.513,137,0.582,138,0.49,139,0.634,140,0.672,141,0.541,142,1.025,143,0.167,144,1.025,145,1.025,146,0.829,147,1.513,148,1.025,149,1.513,150,1.025,151,1.513,152,1.025,153,1.798,154,1.025,155,1.025,156,1.025,157,1.025,158,1.025,159,1.798,160,1.513,161,1.513,162,1.025,163,1.223,164,1.025,165,1.025,166,1.025,167,1.025,168,1.025,169,1.025,170,1.025,171,0.829,172,1.025,173,1.025,174,1.025,175,1.513,176,1.025,177,1.025,178,1.025,179,1.025,180,1.025,181,0.031,182,0.045,183,0.031,312,0.829,313,0.829]],["title/interfaces/NgcTrackedElement.html",[138,0.439,243,1.095]],["body/interfaces/NgcTrackedElement.html",[3,0.775,4,0.775,5,0.598,6,0.598,16,0.775,17,1.19,29,1.394,30,1.73,56,0.084,58,0.73,67,1.019,76,1.477,96,1.477,110,1.792,125,0.775,129,0.976,137,0.598,138,0.598,181,0.055,182,0.067,183,0.055,243,1.822,245,2.431,312,1.494,313,1.494,315,1.848,321,2.322,322,2.832,323,2.832]],["title/coverage.html",[324,2.317]],["body/coverage.html",[0,0.796,1,0.454,5,0.615,6,0.86,7,1.349,8,1.989,52,0.615,56,0.081,58,0.615,70,1.245,106,1.003,138,0.797,139,0.796,141,1.003,143,0.309,181,0.057,182,0.068,183,0.057,210,1.535,211,1.535,213,2.385,243,1.535,245,1.899,315,2.291,316,2.385,321,2.385,324,2.385,325,2.385,326,3.124,327,3.124,328,3.124,329,3.124,330,3.124,331,3.124,332,3.124,333,3.124,334,3.124,335,3.124,336,3.124,337,3.124,338,3.124,339,3.124,340,3.124]],["title/dependencies.html",[187,1.316,341,1.866]],["body/dependencies.html",[27,1.285,56,0.084,128,1.036,129,1.036,181,0.059,182,0.07,183,0.059,187,1.585,205,1.585,342,3.227,343,4.486,344,2.464,345,3.227,346,3.227,347,3.227,348,3.227,349,3.843,350,2.934,351,3.227,352,3.227,353,3.227,354,3.227,355,3.227,356,3.227,357,3.227,358,3.227]],["title/index.html",[16,0.475,359,1.866,360,1.866]],["body/index.html",[0,0.694,1,0.278,9,0.761,14,0.939,15,0.939,26,1.222,27,1.624,29,1.112,51,0.614,52,0.376,56,0.084,57,1.266,59,0.487,63,0.761,64,0.761,65,1.561,66,1.086,67,0.882,76,0.761,83,1.38,91,0.761,106,0.614,112,1.38,125,0.694,137,0.536,139,0.694,140,1.086,141,0.875,143,0.314,146,0.939,181,0.035,182,0.05,183,0.035,184,0.761,185,1.086,189,1.161,190,1.161,200,1.459,204,1.459,205,1.702,211,1.561,219,2.081,220,1.459,231,1.459,232,2.645,233,1.459,236,1.459,246,2.081,256,1.459,298,1.459,322,2.081,323,1.459,325,2.081,344,1.459,361,1.911,362,1.911,363,2.726,364,2.726,365,2.726,366,2.726,367,1.911,368,2.726,369,2.726,370,2.726,371,1.911,372,1.911,373,3.178,374,1.911,375,1.911,376,1.911,377,1.911,378,1.911,379,1.911,380,1.911,381,1.911,382,1.911,383,1.911,384,3.464,385,3.464,386,1.911,387,1.911,388,1.911,389,1.911,390,1.911,391,1.911,392,1.911,393,1.911,394,1.911,395,2.726,396,1.911,397,1.911,398,1.911,399,1.911,400,3.178,401,1.911,402,1.911,403,1.911,404,1.911,405,1.911,406,1.911,407,3.178,408,2.726,409,3.178,410,1.911,411,1.911,412,1.911,413,1.911,414,1.911,415,2.726,416,3.178,417,1.911,418,1.911,419,1.911,420,1.911,421,1.911,422,1.911,423,1.911,424,1.911,425,1.911,426,3.178,427,1.911,428,1.911,429,1.911,430,1.911,431,1.911,432,1.911,433,1.911,434,1.911,435,1.911,436,2.726,437,1.911,438,2.726,439,1.911,440,1.911,441,1.911,442,1.911,443,1.911,444,1.911,445,3.178,446,2.726,447,3.464,448,1.911,449,1.911,450,1.911,451,1.911,452,1.911,453,2.726,454,2.726,455,1.911,456,1.911,457,3.464,458,1.911,459,3.663,460,1.911,461,1.911,462,1.911,463,1.911,464,1.911,465,1.911,466,1.911,467,1.911,468,1.911,469,2.726,470,3.464,471,1.911,472,2.726,473,2.726,474,1.911,475,3.464,476,1.911,477,1.911]],["title/modules.html",[186,1.844]],["body/modules.html",[56,0.074,181,0.064,182,0.074,183,0.064,185,1.411,186,2.152,350,2.704,478,3.542,479,3.542,480,3.542]],["title/overview.html",[481,2.317]],["body/overview.html",[0,0.832,1,0.648,56,0.077,143,0.323,181,0.059,182,0.07,183,0.059,184,1.542,185,1.735,187,1.604,188,2.493,189,1.984,190,1.984,191,2.493,192,2.493,193,2.493,194,2.493,195,2.493,196,2.955,197,2.493,198,2.493,210,1.604,312,1.604,481,2.493,482,4.266,483,3.265]]],"invertedIndex":[["",{"_index":56,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["0",{"_index":112,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"index.html":{}}}],["0.10.2",{"_index":358,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":482,"title":{},"body":{"overview.html":{}}}],["1.0",{"_index":384,"title":{},"body":{"index.html":{}}}],["1.0.1",{"_index":353,"title":{},"body":{"dependencies.html":{}}}],["1/3",{"_index":333,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":331,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":362,"title":{},"body":{"index.html":{}}}],["10.1.5",{"_index":343,"title":{},"body":{"dependencies.html":{}}}],["10.2.4",{"_index":345,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":70,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"coverage.html":{}}}],["10000",{"_index":432,"title":{},"body":{"index.html":{}}}],["100px",{"_index":408,"title":{},"body":{"index.html":{}}}],["14/27",{"_index":329,"title":{},"body":{"coverage.html":{}}}],["150px",{"_index":400,"title":{},"body":{"index.html":{}}}],["2.0.0",{"_index":356,"title":{},"body":{"dependencies.html":{}}}],["25",{"_index":330,"title":{},"body":{"coverage.html":{}}}],["250px",{"_index":413,"title":{},"body":{"index.html":{}}}],["2px",{"_index":402,"title":{},"body":{"index.html":{}}}],["3",{"_index":483,"title":{},"body":{"overview.html":{}}}],["3/3",{"_index":338,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":337,"title":{},"body":{"coverage.html":{}}}],["300px",{"_index":414,"title":{},"body":{"index.html":{}}}],["33",{"_index":332,"title":{},"body":{"coverage.html":{}}}],["50px",{"_index":411,"title":{},"body":{"index.html":{}}}],["51",{"_index":328,"title":{},"body":{"coverage.html":{}}}],["6.6.0",{"_index":354,"title":{},"body":{"dependencies.html":{}}}],["66",{"_index":334,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":336,"title":{},"body":{"coverage.html":{}}}],["8/12",{"_index":335,"title":{},"body":{"coverage.html":{}}}],["__one",{"_index":406,"title":{},"body":{"index.html":{}}}],["__three",{"_index":412,"title":{},"body":{"index.html":{}}}],["__two",{"_index":410,"title":{},"body":{"index.html":{}}}],["_active",{"_index":19,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["_collision",{"_index":20,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["_disableinterval",{"_index":21,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["_intervaltime",{"_index":22,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["_timersubscription",{"_index":23,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["_uid",{"_index":25,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["active",{"_index":102,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["add",{"_index":369,"title":{},"body":{"index.html":{}}}],["addtrackedelement",{"_index":217,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["addtrackedelement(element",{"_index":223,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["aftercontentchecked",{"_index":11,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["afterviewinit",{"_index":421,"title":{},"body":{"index.html":{}}}],["angular",{"_index":205,"title":{},"body":{"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":342,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":344,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["angular/common",{"_index":346,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler",{"_index":347,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":128,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":348,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":349,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":352,"title":{},"body":{"dependencies.html":{}}}],["angularcollisiondirective",{"_index":1,"title":{"directives/AngularCollisionDirective.html":{}},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["angularcollisiondirective._uid",{"_index":148,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["angularcollisionmodule",{"_index":185,"title":{"modules/AngularCollisionModule.html":{}},"body":{"modules/AngularCollisionModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["angularcollisionmodule.forroot(new",{"_index":375,"title":{},"body":{"index.html":{}}}],["angularcollisionservice",{"_index":211,"title":{"injectables/AngularCollisionService.html":{}},"body":{"injectables/AngularCollisionService.html":{},"coverage.html":{},"index.html":{}}}],["app",{"_index":416,"title":{},"body":{"index.html":{}}}],["app.component.html",{"_index":418,"title":{},"body":{"index.html":{}}}],["app.component.scss",{"_index":420,"title":{},"body":{"index.html":{}}}],["appcomponent",{"_index":373,"title":{},"body":{"index.html":{}}}],["applied",{"_index":393,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":378,"title":{},"body":{"index.html":{}}}],["array",{"_index":424,"title":{},"body":{"index.html":{}}}],["array.isarray(elements",{"_index":276,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["artifacts",{"_index":461,"title":{},"body":{"index.html":{}}}],["async",{"_index":381,"title":{},"body":{"index.html":{}}}],["auto",{"_index":364,"title":{},"body":{"index.html":{}}}],["between",{"_index":230,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["boolean",{"_index":61,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{}}}],["bootstrap",{"_index":190,"title":{},"body":{"modules/AngularCollisionModule.html":{},"index.html":{},"overview.html":{}}}],["border",{"_index":395,"title":{},"body":{"index.html":{}}}],["browse",{"_index":480,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":350,"title":{},"body":{"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":374,"title":{},"body":{"index.html":{}}}],["build",{"_index":459,"title":{},"body":{"index.html":{}}}],["case",{"_index":372,"title":{},"body":{"index.html":{}}}],["change",{"_index":298,"title":{},"body":{"injectables/AngularCollisionService.html":{},"index.html":{}}}],["changed",{"_index":134,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["changes",{"_index":76,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"index.html":{}}}],["changes.disableinterval",{"_index":157,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["changes.disableinterval.currentvalue",{"_index":158,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["changes.intervaltime",{"_index":155,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["changes.intervaltime.currentvalue",{"_index":156,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["check",{"_index":80,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["checkelementscollision",{"_index":218,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["checkelementscollision(first",{"_index":226,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["checking",{"_index":66,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"index.html":{}}}],["checkposition",{"_index":33,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["checks",{"_index":229,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["class",{"_index":143,"title":{"classes/NgcConfig.html":{}},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["class.collision",{"_index":47,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["classes",{"_index":314,"title":{},"body":{"classes/NgcConfig.html":{}}}],["cluster_angularcollisionmodule",{"_index":193,"title":{},"body":{"modules/AngularCollisionModule.html":{},"overview.html":{}}}],["cluster_angularcollisionmodule_declarations",{"_index":195,"title":{},"body":{"modules/AngularCollisionModule.html":{},"overview.html":{}}}],["cluster_angularcollisionmodule_exports",{"_index":194,"title":{},"body":{"modules/AngularCollisionModule.html":{},"overview.html":{}}}],["collidedelements",{"_index":98,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["collidedids",{"_index":164,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["collision",{"_index":27,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"dependencies.html":{},"index.html":{}}}],["collision.directive",{"_index":206,"title":{},"body":{"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{}}}],["collision.directive.ts",{"_index":8,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"coverage.html":{}}}],["collision.directive.ts:108",{"_index":87,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:118",{"_index":84,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:124",{"_index":88,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:135",{"_index":99,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:155",{"_index":79,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:165",{"_index":89,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:178",{"_index":92,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:187",{"_index":94,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:43",{"_index":62,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:48",{"_index":71,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:53",{"_index":77,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:60",{"_index":74,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:64",{"_index":78,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:69",{"_index":122,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:74",{"_index":116,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:79",{"_index":120,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:84",{"_index":113,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:89",{"_index":115,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:91",{"_index":107,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:92",{"_index":111,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:93",{"_index":104,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:94",{"_index":109,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:95",{"_index":108,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:96",{"_index":54,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:98",{"_index":119,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.module.ts",{"_index":199,"title":{},"body":{"modules/AngularCollisionModule.html":{}}}],["collision.module.ts:10",{"_index":202,"title":{},"body":{"modules/AngularCollisionModule.html":{}}}],["collision.service.ts",{"_index":213,"title":{},"body":{"injectables/AngularCollisionService.html":{},"coverage.html":{}}}],["collision.service.ts:115",{"_index":228,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["collision.service.ts:131",{"_index":224,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["collision.service.ts:149",{"_index":241,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["collision.service.ts:17",{"_index":244,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["collision.service.ts:22",{"_index":247,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["collision.service.ts:27",{"_index":249,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["collision.service.ts:31",{"_index":222,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["collision.service.ts:63",{"_index":234,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["collision.service.ts:74",{"_index":237,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["collision.service.ts:94",{"_index":239,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["collision/src/lib/angular",{"_index":7,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"coverage.html":{}}}],["collision/src/lib/models/ngc",{"_index":315,"title":{},"body":{"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{}}}],["collisionactive",{"_index":145,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["collisionactivechange",{"_index":45,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["collisions",{"_index":140,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"index.html":{}}}],["collisions.length",{"_index":273,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["collisions.push(innerelement.element",{"_index":271,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["color",{"_index":396,"title":{},"body":{"index.html":{}}}],["commit",{"_index":455,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":377,"title":{},"body":{"index.html":{}}}],["compodoc",{"_index":458,"title":{},"body":{"index.html":{}}}],["component",{"_index":415,"title":{},"body":{"index.html":{}}}],["config",{"_index":51,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"index.html":{}}}],["config.disableinterval",{"_index":154,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["config.intervaltime",{"_index":152,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["config.model",{"_index":131,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["config.model.ts",{"_index":316,"title":{},"body":{"classes/NgcConfig.html":{},"coverage.html":{}}}],["config.model.ts:13",{"_index":320,"title":{},"body":{"classes/NgcConfig.html":{}}}],["config.model.ts:4",{"_index":318,"title":{},"body":{"classes/NgcConfig.html":{}}}],["config.model.ts:9",{"_index":319,"title":{},"body":{"classes/NgcConfig.html":{}}}],["const",{"_index":171,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["constructor",{"_index":48,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{}}}],["constructor(disableinterval",{"_index":317,"title":{},"body":{"classes/NgcConfig.html":{}}}],["constructor(element",{"_index":49,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["constructor(public",{"_index":146,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"index.html":{}}}],["containing",{"_index":133,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["coverage",{"_index":324,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["declarations",{"_index":189,"title":{},"body":{"modules/AngularCollisionModule.html":{},"index.html":{},"overview.html":{}}}],["default",{"_index":68,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{}}}],["defined",{"_index":53,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{}}}],["demo",{"_index":446,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":187,"title":{"dependencies.html":{}},"body":{"modules/AngularCollisionModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":313,"title":{},"body":{"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["destroy",{"_index":28,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["detection",{"_index":363,"title":{},"body":{"index.html":{}}}],["directive",{"_index":0,"title":{"directives/AngularCollisionDirective.html":{}},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["directiveref.collision",{"_index":380,"title":{},"body":{"index.html":{}}}],["directives",{"_index":2,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["directory",{"_index":464,"title":{},"body":{"index.html":{}}}],["disable",{"_index":63,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"index.html":{}}}],["disableinterval",{"_index":42,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{}}}],["dist",{"_index":463,"title":{},"body":{"index.html":{}}}],["docs",{"_index":454,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":325,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["domrect",{"_index":135,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["drag",{"_index":449,"title":{},"body":{"index.html":{}}}],["drop",{"_index":450,"title":{},"body":{"index.html":{}}}],["dynamic",{"_index":351,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":476,"title":{},"body":{"index.html":{}}}],["el.id",{"_index":291,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["element",{"_index":29,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"index.html":{}}}],["element's",{"_index":75,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["element.domrect",{"_index":269,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["element.element.updatecollisionstate",{"_index":272,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["element.id",{"_index":292,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["element.interface",{"_index":254,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["element.interface.ts",{"_index":321,"title":{},"body":{"interfaces/NgcTrackedElement.html":{},"coverage.html":{}}}],["element.rectanglechange",{"_index":294,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["element.starttracking",{"_index":293,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["element.stoptracking",{"_index":301,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["elementref",{"_index":50,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["elements",{"_index":232,"title":{},"body":{"injectables/AngularCollisionService.html":{},"index.html":{}}}],["elements.foreach((element",{"_index":278,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["elementsmap.foreach",{"_index":265,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["elementsmap.foreach((element",{"_index":264,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["emit",{"_index":81,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["emits",{"_index":117,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["end",{"_index":475,"title":{},"body":{"index.html":{}}}],["eventemitter",{"_index":73,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["example",{"_index":366,"title":{},"body":{"index.html":{}}}],["execute",{"_index":472,"title":{},"body":{"index.html":{}}}],["export",{"_index":137,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"index.html":{}}}],["exportas",{"_index":142,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["exports",{"_index":192,"title":{},"body":{"modules/AngularCollisionModule.html":{},"overview.html":{}}}],["expressionchangedafterithasbeencheckederror",{"_index":166,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["false",{"_index":103,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{}}}],["file",{"_index":5,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{}}}],["finish",{"_index":242,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["first",{"_index":233,"title":{},"body":{"injectables/AngularCollisionService.html":{},"index.html":{}}}],["first.bottom",{"_index":285,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["first.left",{"_index":287,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["first.top",{"_index":283,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["fix",{"_index":165,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["flag",{"_index":467,"title":{},"body":{"index.html":{}}}],["forroot",{"_index":200,"title":{},"body":{"modules/AngularCollisionModule.html":{},"index.html":{}}}],["forroot(config",{"_index":201,"title":{},"body":{"modules/AngularCollisionModule.html":{}}}],["foundelement",{"_index":303,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["foundelement.subscription.closed",{"_index":308,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["foundelement.subscription.unsubscribe",{"_index":309,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["foundelement?.subscription",{"_index":307,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["generate",{"_index":453,"title":{},"body":{"index.html":{}}}],["generated",{"_index":365,"title":{},"body":{"index.html":{}}}],["getting",{"_index":359,"title":{"index.html":{}},"body":{}}],["h",{"_index":390,"title":{},"body":{"index.html":{}}}],["handle",{"_index":438,"title":{},"body":{"index.html":{}}}],["handlecollisionactivechange(change",{"_index":443,"title":{},"body":{"index.html":{}}}],["handlerectchange",{"_index":435,"title":{},"body":{"index.html":{}}}],["height",{"_index":401,"title":{},"body":{"index.html":{}}}],["host",{"_index":394,"title":{},"body":{"index.html":{}}}],["hostbinding",{"_index":127,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["hostbinding('class.collision",{"_index":144,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["hostbindings",{"_index":46,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["id",{"_index":30,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["identifier",{"_index":326,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":9,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"index.html":{}}}],["import",{"_index":125,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"index.html":{}}}],["imports",{"_index":370,"title":{},"body":{"index.html":{}}}],["index",{"_index":16,"title":{"index.html":{}},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["info",{"_index":3,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["init",{"_index":225,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["injectable",{"_index":210,"title":{"injectables/AngularCollisionService.html":{}},"body":{"injectables/AngularCollisionService.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":212,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["innerelement",{"_index":266,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["innerelement.domrect",{"_index":270,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["innerid",{"_index":267,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["input",{"_index":126,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["inputs",{"_index":41,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["install",{"_index":367,"title":{},"body":{"index.html":{}}}],["instance",{"_index":118,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["instanceof",{"_index":277,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["interface",{"_index":138,"title":{"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{}}}],["interfaces",{"_index":312,"title":{},"body":{"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"overview.html":{}}}],["interval",{"_index":64,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"index.html":{}}}],["intervaltime",{"_index":43,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{}}}],["itself",{"_index":136,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["karma",{"_index":474,"title":{},"body":{"index.html":{}}}],["left",{"_index":409,"title":{},"body":{"index.html":{}}}],["legend",{"_index":188,"title":{},"body":{"modules/AngularCollisionModule.html":{},"overview.html":{}}}],["library",{"_index":322,"title":{},"body":{"interfaces/NgcTrackedElement.html":{},"index.html":{}}}],["made",{"_index":451,"title":{},"body":{"index.html":{}}}],["manually",{"_index":456,"title":{},"body":{"index.html":{}}}],["map",{"_index":246,"title":{},"body":{"injectables/AngularCollisionService.html":{},"index.html":{}}}],["matching",{"_index":182,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["metadata",{"_index":13,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["methods",{"_index":32,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{}}}],["models/ngc",{"_index":130,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["module",{"_index":184,"title":{"modules/AngularCollisionModule.html":{}},"body":{"modules/AngularCollisionModule.html":{},"classes/NgcConfig.html":{},"index.html":{},"overview.html":{}}}],["modules",{"_index":186,"title":{"modules.html":{}},"body":{"modules/AngularCollisionModule.html":{},"modules.html":{}}}],["modulewithproviders",{"_index":203,"title":{},"body":{"modules/AngularCollisionModule.html":{}}}],["name",{"_index":57,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"index.html":{}}}],["new",{"_index":106,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"coverage.html":{},"index.html":{}}}],["ng",{"_index":447,"title":{},"body":{"index.html":{}}}],["ngaftercontentchecked",{"_index":34,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["ngafterviewinit",{"_index":428,"title":{},"body":{"index.html":{}}}],["ngcangularcollision",{"_index":15,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"index.html":{}}}],["ngccollisionchange",{"_index":141,"title":{"interfaces/NgcCollisionChange.html":{}},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"coverage.html":{},"index.html":{}}}],["ngcconfig",{"_index":52,"title":{"classes/NgcConfig.html":{}},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"coverage.html":{},"index.html":{}}}],["ngcconfig(true",{"_index":376,"title":{},"body":{"index.html":{}}}],["ngcelementchange",{"_index":139,"title":{"interfaces/NgcElementChange.html":{}},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"coverage.html":{},"index.html":{}}}],["ngcollision",{"_index":361,"title":{},"body":{"index.html":{}}}],["ngctrackedelement",{"_index":243,"title":{"interfaces/NgcTrackedElement.html":{}},"body":{"injectables/AngularCollisionService.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{}}}],["ngmodule",{"_index":204,"title":{},"body":{"modules/AngularCollisionModule.html":{},"index.html":{}}}],["ngonchanges",{"_index":35,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["ngonchanges(changes",{"_index":85,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["ngondestroy",{"_index":36,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["npm",{"_index":368,"title":{},"body":{"index.html":{}}}],["null",{"_index":426,"title":{},"body":{"index.html":{}}}],["number",{"_index":67,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"index.html":{}}}],["object",{"_index":132,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["observable",{"_index":96,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["onchanges",{"_index":10,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["ondestroy",{"_index":12,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["one",{"_index":425,"title":{},"body":{"index.html":{}}}],["optional",{"_index":59,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"index.html":{}}}],["out",{"_index":198,"title":{},"body":{"modules/AngularCollisionModule.html":{},"overview.html":{}}}],["output",{"_index":124,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["outputs",{"_index":44,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["overview",{"_index":481,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":341,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":163,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["parameters",{"_index":55,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{}}}],["part",{"_index":452,"title":{},"body":{"index.html":{}}}],["pass",{"_index":371,"title":{},"body":{"index.html":{}}}],["performance",{"_index":263,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["pipe(takeuntil(element.destroy",{"_index":295,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["pipe(throttletime(100",{"_index":259,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["position",{"_index":65,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"index.html":{}}}],["position.domrect",{"_index":442,"title":{},"body":{"index.html":{}}}],["position.height",{"_index":391,"title":{},"body":{"index.html":{}}}],["position.width",{"_index":389,"title":{},"body":{"index.html":{}}}],["position.x",{"_index":383,"title":{},"body":{"index.html":{}}}],["position.y",{"_index":387,"title":{},"body":{"index.html":{}}}],["positions",{"_index":248,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["private",{"_index":18,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["prod",{"_index":466,"title":{},"body":{"index.html":{}}}],["production",{"_index":468,"title":{},"body":{"index.html":{}}}],["project",{"_index":460,"title":{},"body":{"index.html":{}}}],["projects/angular",{"_index":6,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{}}}],["promise.resolve().then",{"_index":167,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["properties",{"_index":17,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["protractor",{"_index":477,"title":{},"body":{"index.html":{}}}],["provide",{"_index":208,"title":{},"body":{"modules/AngularCollisionModule.html":{}}}],["providedin",{"_index":255,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["providers",{"_index":191,"title":{},"body":{"modules/AngularCollisionModule.html":{},"overview.html":{}}}],["public",{"_index":26,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"index.html":{}}}],["px",{"_index":385,"title":{},"body":{"index.html":{}}}],["querylist",{"_index":236,"title":{},"body":{"injectables/AngularCollisionService.html":{},"index.html":{}}}],["rect",{"_index":398,"title":{},"body":{"index.html":{}}}],["rectangle",{"_index":440,"title":{},"body":{"index.html":{}}}],["rectangle.name",{"_index":441,"title":{},"body":{"index.html":{}}}],["rectanglechange",{"_index":31,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["rectanglename",{"_index":436,"title":{},"body":{"index.html":{}}}],["rectangles",{"_index":423,"title":{},"body":{"index.html":{}}}],["rectanglesenum",{"_index":437,"title":{},"body":{"index.html":{}}}],["red",{"_index":397,"title":{},"body":{"index.html":{}}}],["register",{"_index":219,"title":{},"body":{"injectables/AngularCollisionService.html":{},"index.html":{}}}],["register(elements",{"_index":235,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["relative",{"_index":405,"title":{},"body":{"index.html":{}}}],["remove",{"_index":220,"title":{},"body":{"injectables/AngularCollisionService.html":{},"index.html":{}}}],["remove(elements",{"_index":238,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["removetrackedelement",{"_index":221,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["removetrackedelement(element",{"_index":240,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["reset",{"_index":197,"title":{},"body":{"modules/AngularCollisionModule.html":{},"overview.html":{}}}],["result",{"_index":181,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["results",{"_index":183,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["return",{"_index":207,"title":{},"body":{"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{}}}],["returns",{"_index":82,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{}}}],["root",{"_index":256,"title":{},"body":{"injectables/AngularCollisionService.html":{},"index.html":{}}}],["run",{"_index":457,"title":{},"body":{"index.html":{}}}],["running",{"_index":445,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":129,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":253,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["same",{"_index":123,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["scss",{"_index":392,"title":{},"body":{"index.html":{}}}],["second",{"_index":227,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["second.bottom",{"_index":286,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["second.left",{"_index":288,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["second.right",{"_index":289,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["second.top",{"_index":284,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["selector",{"_index":14,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"index.html":{}}}],["serve",{"_index":448,"title":{},"body":{"index.html":{}}}],["service",{"_index":323,"title":{},"body":{"interfaces/NgcTrackedElement.html":{},"index.html":{}}}],["settimeout",{"_index":430,"title":{},"body":{"index.html":{}}}],["simplechanges",{"_index":86,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["solid",{"_index":403,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["start",{"_index":90,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["started",{"_index":360,"title":{"index.html":{}},"body":{}}],["starttracking",{"_index":37,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["statements",{"_index":327,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":24,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["status",{"_index":101,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["stop",{"_index":93,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["stoptracking",{"_index":38,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["stoptrackingfirstelement",{"_index":433,"title":{},"body":{"index.html":{}}}],["stored",{"_index":462,"title":{},"body":{"index.html":{}}}],["styleurls",{"_index":419,"title":{},"body":{"index.html":{}}}],["subject",{"_index":105,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["subscribe((change",{"_index":296,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["subscribe((elementsmap",{"_index":260,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["subscription",{"_index":110,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["support",{"_index":478,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":479,"title":{},"body":{"modules.html":{}}}],["table",{"_index":340,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":339,"title":{},"body":{"coverage.html":{}}}],["takeuntil",{"_index":251,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["template",{"_index":379,"title":{},"body":{"index.html":{}}}],["templateurl",{"_index":417,"title":{},"body":{"index.html":{}}}],["test",{"_index":471,"title":{},"body":{"index.html":{}}}],["tests",{"_index":470,"title":{},"body":{"index.html":{}}}],["this._active",{"_index":159,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this._collision$.asobservable",{"_index":150,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this._collision$.next(active",{"_index":169,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this._disableinterval",{"_index":153,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this._intervaltime",{"_index":151,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this._intervaltime).subscribe",{"_index":177,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this._timersubscription",{"_index":175,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this._timersubscription.closed",{"_index":179,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this._timersubscription.unsubscribe",{"_index":180,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.addtrackedelement(element",{"_index":279,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["this.addtrackedelement(elements",{"_index":280,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["this.checkelementscollision",{"_index":268,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["this.checkposition",{"_index":160,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.collision",{"_index":149,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.collisionactive",{"_index":168,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.collisionactivechange.emit",{"_index":170,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.collisions.set(change.id",{"_index":444,"title":{},"body":{"index.html":{}}}],["this.destroy$.next(this.id",{"_index":162,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.element.nativeelement.getboundingclientrect",{"_index":172,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.id",{"_index":147,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.rectanglechange$.next",{"_index":173,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.rectanglechange.emit",{"_index":174,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.rectangles.find",{"_index":439,"title":{},"body":{"index.html":{}}}],["this.removetrackedelement(element",{"_index":281,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["this.removetrackedelement(elements",{"_index":282,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["this.service.register(this.elements",{"_index":429,"title":{},"body":{"index.html":{}}}],["this.service.remove(this.elements.first",{"_index":434,"title":{},"body":{"index.html":{}}}],["this.stoptrackingfirstelement",{"_index":431,"title":{},"body":{"index.html":{}}}],["this.trackedelements",{"_index":310,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["this.trackedelements.filter",{"_index":311,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["this.trackedelements.find",{"_index":304,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["this.trackedelements.push",{"_index":300,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["this.trackedelements.some((el",{"_index":290,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["this.trackedelementspositions",{"_index":258,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["this.trackedelementspositions$.next(this.trackedelementspositions",{"_index":299,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["this.trackedelementspositions.delete(element.id",{"_index":302,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["this.trackedelementspositions.set(change.element.id",{"_index":297,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["this.trackedelementspositionsubscription",{"_index":257,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["this.trackedelementspositionsubscription.closed",{"_index":274,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["this.trackedelementspositionsubscription.unsubscribe",{"_index":275,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["this.unsubscribe",{"_index":161,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.updatecollisionstate(false",{"_index":178,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["three",{"_index":427,"title":{},"body":{"index.html":{}}}],["throttletime",{"_index":252,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["time",{"_index":72,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{}}}],["timer",{"_index":95,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["timer(0",{"_index":176,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["todo",{"_index":261,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["top",{"_index":407,"title":{},"body":{"index.html":{}}}],["tracked",{"_index":245,"title":{},"body":{"injectables/AngularCollisionService.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{}}}],["trackedelement",{"_index":305,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["trackedelement.id",{"_index":306,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["trackedelements",{"_index":214,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["trackedelementspositions",{"_index":215,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["trackedelementspositionsubscription",{"_index":216,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["tracking",{"_index":91,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"index.html":{}}}],["transparent",{"_index":404,"title":{},"body":{"index.html":{}}}],["true",{"_index":114,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["tslib",{"_index":355,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":231,"title":{},"body":{"injectables/AngularCollisionService.html":{},"index.html":{}}}],["type",{"_index":58,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{}}}],["unique",{"_index":121,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["unit",{"_index":469,"title":{},"body":{"index.html":{}}}],["unsubscribe",{"_index":39,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["update",{"_index":100,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["updatecollisionstate",{"_index":40,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["updatecollisionstate(active",{"_index":97,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["use",{"_index":465,"title":{},"body":{"index.html":{}}}],["usevalue",{"_index":209,"title":{},"body":{"modules/AngularCollisionModule.html":{}}}],["value",{"_index":69,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{}}}],["via",{"_index":473,"title":{},"body":{"index.html":{}}}],["viewchildren(angularcollisiondirective",{"_index":422,"title":{},"body":{"index.html":{}}}],["void",{"_index":83,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"index.html":{}}}],["w",{"_index":388,"title":{},"body":{"index.html":{}}}],["width",{"_index":399,"title":{},"body":{"index.html":{}}}],["work",{"_index":262,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["wrapper",{"_index":250,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["x",{"_index":382,"title":{},"body":{"index.html":{}}}],["y",{"_index":386,"title":{},"body":{"index.html":{}}}],["yes",{"_index":60,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["zone.js",{"_index":357,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":196,"title":{},"body":{"modules/AngularCollisionModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"directives/AngularCollisionDirective.html":{"url":"directives/AngularCollisionDirective.html","title":"directive - AngularCollisionDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  AngularCollisionDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-collision/src/lib/angular-collision.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            OnChanges\n                            AfterContentChecked\n                            OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [ngcAngularCollision]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _active\n                            \n                            \n                                    Private\n                                _collision$\n                            \n                            \n                                    Private\n                                _disableInterval\n                            \n                            \n                                    Private\n                                _intervalTime\n                            \n                            \n                                    Private\n                                _timerSubscription\n                            \n                            \n                                    Private\n                                    Static\n                                _uid\n                            \n                            \n                                    Public\n                                collision\n                            \n                            \n                                    Public\n                                collision$\n                            \n                            \n                                    Public\n                                destroy$\n                            \n                            \n                                    Public\n                                element\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                rectangleChange$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                checkPosition\n                            \n                            \n                                    Public\n                                ngAfterContentChecked\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                startTracking\n                            \n                            \n                                    Public\n                                stopTracking\n                            \n                            \n                                    Public\n                                unsubscribe\n                            \n                            \n                                    Public\n                                updateCollisionState\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disableInterval\n                            \n                            \n                                intervalTime\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                collisionActiveChange\n                            \n                            \n                                rectangleChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class.collision\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(element: ElementRef, config?: NgcConfig)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:96\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        NgcConfig\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        disableInterval\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:43\n                            \n                        \n                \n                    \n                        Disable interval position checking\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        intervalTime\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 100\n                    \n                \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:48\n                            \n                        \n                \n                    \n                        Interval time for position checking\n\n                    \n                \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        collisionActiveChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:60\n                            \n                        \n                \n                    \n                        Element's collision changes\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        rectangleChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:53\n                            \n                        \n                \n                    \n                        Element's position changes\n\n                    \n                \n            \n        \n\n            \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class.collision\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:64\n                            \n                        \n\n\n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            checkPosition\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkPosition()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:155\n                \n            \n\n\n            \n                \n                    Check and emit element position\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngAfterContentChecked\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterContentChecked()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            startTracking\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    startTracking()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:165\n                \n            \n\n\n            \n                \n                    Start tracking element\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            stopTracking\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    stopTracking()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:178\n                \n            \n\n\n            \n                \n                    Stop tracking element\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            unsubscribe\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    unsubscribe()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:187\n                \n            \n\n\n            \n                \n                    Unsubscribe timer observable\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateCollisionState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateCollisionState(active: boolean, collidedElements: AngularCollisionDirective[])\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:135\n                \n            \n\n\n            \n                \n                    Update collision status\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    active\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    collidedElements\n                                    \n                                            AngularCollisionDirective[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _active\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:93\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _collision$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:91\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _disableInterval\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:95\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _intervalTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:94\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _timerSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:92\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            _uid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:96\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            collision\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:84\n                            \n                        \n\n                \n                    \n                        True if element has any collision\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            collision$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:89\n                            \n                        \n\n                \n                    \n                        Observable of collision value\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            destroy$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:74\n                            \n                        \n\n                \n                    \n                        Observable that emits on instance destroy\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            element\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:98\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:79\n                            \n                        \n\n                \n                    \n                        Unique id for directive instance\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rectangleChange$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:69\n                            \n                        \n\n                \n                    \n                        Element's collision changes as observable, same as output\n\n                    \n                \n\n            \n        \n\n\n\n    \n\n\n    \n        import {\n  Directive,\n  AfterContentChecked,\n  ElementRef,\n  Output,\n  EventEmitter,\n  OnDestroy,\n  Input,\n  HostBinding,\n  Optional,\n  OnChanges,\n  SimpleChanges,\n} from '@angular/core';\nimport { timer, Subscription, Subject, Observable } from 'rxjs';\nimport { NgcConfig } from './models/ngc-config.model';\n\n/**\n * Object containing changed element's domRect and element itself\n */\nexport interface NgcElementChange {\n  domRect: DOMRect;\n  element: AngularCollisionDirective;\n}\n\n/**\n * Object with info about element's collisions\n */\nexport interface NgcCollisionChange {\n  id: number;\n  active: boolean;\n  collidedElements: AngularCollisionDirective[];\n}\n\n@Directive({\n  selector: '[ngcAngularCollision]',\n  exportAs: 'ngcAngularCollision',\n})\nexport class AngularCollisionDirective\n  implements OnChanges, AfterContentChecked, OnDestroy {\n  /**\n   * Disable interval position checking\n   */\n  @Input() public disableInterval: boolean;\n\n  /**\n   * Interval time for position checking\n   */\n  @Input() public intervalTime: number = 100;\n\n  /**\n   * Element's position changes\n   */\n  @Output() public rectangleChange: EventEmitter = new EventEmitter();\n\n  /**\n   * Element's collision changes\n   */\n  @Output() public collisionActiveChange: EventEmitter = new EventEmitter();\n\n  @HostBinding('class.collision') private collisionActive: boolean;\n\n  /**\n   * Element's collision changes as observable, same as output\n   */\n  public rectangleChange$: Subject = new Subject();\n\n  /**\n   * Observable that emits on instance destroy\n   */\n  public destroy$: Subject = new Subject();\n\n  /**\n   * Unique id for directive instance\n   */\n  public id: number;\n\n  /**\n   * True if element has any collision\n   */\n  public collision: boolean;\n\n  /**\n   * Observable of collision value\n   */\n  public collision$: Observable;\n\n  private _collision$: Subject = new Subject();\n  private _timerSubscription: Subscription;\n  private _active: boolean = false;\n  private _intervalTime: number;\n  private _disableInterval: boolean;\n  private static _uid: number = 0;\n\n  constructor(public element: ElementRef, @Optional() config?: NgcConfig) {\n    this.id = AngularCollisionDirective._uid++;\n    this.collision$ = this._collision$.asObservable();\n\n    if (config) {\n      this._intervalTime = config.intervalTime;\n      this._disableInterval = config.disableInterval;\n    }\n  }\n\n  public ngOnChanges(changes: SimpleChanges): void {\n    if (changes.intervalTime) {\n      this._intervalTime = changes.intervalTime.currentValue;\n    }\n\n    if (changes.disableInterval) {\n      this._disableInterval = changes.disableInterval.currentValue;\n    }\n  }\n\n  public ngAfterContentChecked(): void {\n    if (this._active) {\n      this.checkPosition();\n    }\n  }\n\n  public ngOnDestroy(): void {\n    this.unsubscribe();\n    this.destroy$.next(this.id);\n  }\n\n  /**\n   * Update collision status\n   *\n   * @param active\n   * @param collidedIds\n   */\n  public updateCollisionState(\n    active: boolean,\n    collidedElements: AngularCollisionDirective[]\n  ): void {\n    // Fix for ExpressionChangedAfterItHasBeenCheckedError\n    Promise.resolve().then(() => {\n      this.collisionActive = active;\n      this.collision = active;\n      this._collision$.next(active);\n      this.collisionActiveChange.emit({\n        id: this.id,\n        active,\n        collidedElements,\n      });\n    });\n  }\n\n  /**\n   * Check and emit element position\n   */\n  public checkPosition(): void {\n    const domRect: DOMRect = this.element.nativeElement.getBoundingClientRect();\n\n    this.rectangleChange$.next({ domRect, element: this });\n    this.rectangleChange.emit({ domRect, element: this });\n  }\n\n  /**\n   * Start tracking element\n   */\n  public startTracking(): void {\n    this._active = true;\n\n    if (!this._disableInterval) {\n      this._timerSubscription = timer(0, this._intervalTime).subscribe(() => {\n        this.checkPosition();\n      });\n    }\n  }\n\n  /**\n   * Stop tracking element\n   */\n  public stopTracking(): void {\n    this._active = false;\n    this.updateCollisionState(false, []);\n    this.unsubscribe();\n  }\n\n  /**\n   * Unsubscribe timer observable\n   */\n  public unsubscribe(): void {\n    if (this._timerSubscription && !this._timerSubscription.closed) {\n      this._timerSubscription.unsubscribe();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AngularCollisionModule.html":{"url":"modules/AngularCollisionModule.html","title":"module - AngularCollisionModule","body":"\n                   \n\n\n\n\n    Modules\n    AngularCollisionModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AngularCollisionModule\n\n\n\ncluster_AngularCollisionModule_exports\n\n\n\ncluster_AngularCollisionModule_declarations\n\n\n\n\nAngularCollisionDirective\n\nAngularCollisionDirective\n\n\n\nAngularCollisionModule\n\nAngularCollisionModule\n\nAngularCollisionModule -->\n\nAngularCollisionDirective->AngularCollisionModule\n\n\n\n\n\nAngularCollisionDirective \n\nAngularCollisionDirective \n\nAngularCollisionDirective  -->\n\nAngularCollisionModule->AngularCollisionDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/angular-collision/src/lib/angular-collision.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AngularCollisionDirective\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AngularCollisionDirective\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(config: NgcConfig)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.module.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                NgcConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { AngularCollisionDirective } from './angular-collision.directive';\nimport { NgcConfig } from './models/ngc-config.model';\n\n@NgModule({\n  declarations: [AngularCollisionDirective],\n  exports: [AngularCollisionDirective],\n})\nexport class AngularCollisionModule {\n  static forRoot(\n    config: NgcConfig\n  ): ModuleWithProviders {\n    return {\n      ngModule: AngularCollisionModule,\n      providers: [{ provide: NgcConfig, useValue: config }],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AngularCollisionService.html":{"url":"injectables/AngularCollisionService.html","title":"injectable - AngularCollisionService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AngularCollisionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-collision/src/lib/angular-collision.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                trackedElements\n                            \n                            \n                                    Public\n                                trackedElementsPositions\n                            \n                            \n                                    Public\n                                trackedElementsPositions$\n                            \n                            \n                                    Public\n                                trackedElementsPositionSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addTrackedElement\n                            \n                            \n                                    Private\n                                checkElementsCollision\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                register\n                            \n                            \n                                    Public\n                                remove\n                            \n                            \n                                    Private\n                                removeTrackedElement\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/angular-collision/src/lib/angular-collision.service.ts:31\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            addTrackedElement\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addTrackedElement(element: AngularCollisionDirective)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.service.ts:131\n                \n            \n\n\n            \n                \n                    Init tracking of element\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    element\n                                    \n                                            AngularCollisionDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            checkElementsCollision\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkElementsCollision(first: DOMRect, second: DOMRect)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.service.ts:115\n                \n            \n\n\n            \n                \n                    Checks collisions between two elements\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    first\n                                    \n                                            DOMRect\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    second\n                                    \n                                            DOMRect\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            register\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    register(elements: QueryList | AngularCollisionDirective | AngularCollisionDirective[])\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.service.ts:74\n                \n            \n\n\n            \n                \n                    Start tracking element / elements\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    elements\n                                    \n                                            QueryList | AngularCollisionDirective | AngularCollisionDirective[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(elements: QueryList | AngularCollisionDirective | AngularCollisionDirective[])\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.service.ts:94\n                \n            \n\n\n            \n                \n                    Stop tracking element / elements\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    elements\n                                    \n                                            QueryList | AngularCollisionDirective | AngularCollisionDirective[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            removeTrackedElement\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeTrackedElement(element: AngularCollisionDirective)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.service.ts:149\n                \n            \n\n\n            \n                \n                    Finish tracking of element\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    element\n                                    \n                                            AngularCollisionDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            trackedElements\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgcTrackedElement[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.service.ts:17\n                            \n                        \n\n                \n                    \n                        Tracked elements\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            trackedElementsPositions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Map\n\n                        \n                    \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.service.ts:22\n                            \n                        \n\n                \n                    \n                        Map of tracked elements positions\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            trackedElementsPositions$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Subject>\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.service.ts:27\n                            \n                        \n\n                \n                    \n                        Observable wrapper of tracked elements positions\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            trackedElementsPositionSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.service.ts:31\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, OnDestroy, QueryList } from '@angular/core';\nimport { takeUntil, throttleTime } from 'rxjs/operators';\nimport { Subject, Subscription } from 'rxjs';\nimport {\n  AngularCollisionDirective,\n  NgcElementChange,\n} from './angular-collision.directive';\nimport { NgcTrackedElement } from './models/ngc-tracked-element.interface';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AngularCollisionService implements OnDestroy {\n  /**\n   *  Tracked elements\n   */\n  public trackedElements: NgcTrackedElement[] = [];\n\n  /**\n   *  Map of tracked elements positions\n   */\n  public trackedElementsPositions: Map = new Map();\n\n  /**\n   *  Observable wrapper of tracked elements positions\n   */\n  public trackedElementsPositions$: Subject\n  > = new Subject();\n\n  public trackedElementsPositionSubscription: Subscription;\n\n  constructor() {\n    this.trackedElementsPositionSubscription = this.trackedElementsPositions$\n      .pipe(throttleTime(100))\n      .subscribe((elementsMap: Map) => {\n        // TODO work on performance\n        elementsMap.forEach((element: NgcElementChange, id: number) => {\n          const collisions: AngularCollisionDirective[] = [];\n\n          elementsMap.forEach(\n            (innerElement: NgcElementChange, innerId: number) => {\n              if (\n                id !== innerId &&\n                this.checkElementsCollision(\n                  element.domRect,\n                  innerElement.domRect\n                )\n              ) {\n                collisions.push(innerElement.element);\n              }\n            }\n          );\n\n          element.element.updateCollisionState(\n            collisions.length > 0,\n            collisions\n          );\n        });\n      });\n  }\n\n  public ngOnDestroy(): void {\n    if (!this.trackedElementsPositionSubscription.closed) {\n      this.trackedElementsPositionSubscription.unsubscribe();\n    }\n  }\n\n  /**\n   * Start tracking element / elements\n   *\n   * @param elements\n   */\n  public register(\n    elements:\n      | QueryList\n      | AngularCollisionDirective\n      | AngularCollisionDirective[]\n  ): void {\n    if (Array.isArray(elements) || elements instanceof QueryList) {\n      elements.forEach((element) => {\n        this.addTrackedElement(element);\n      });\n    } else {\n      this.addTrackedElement(elements);\n    }\n  }\n\n  /**\n   * Stop tracking element / elements\n   *\n   * @param elements\n   */\n  public remove(\n    elements:\n      | QueryList\n      | AngularCollisionDirective\n      | AngularCollisionDirective[]\n  ): void {\n    if (Array.isArray(elements) || elements instanceof QueryList) {\n      elements.forEach((element) => {\n        this.removeTrackedElement(element);\n      });\n    } else {\n      this.removeTrackedElement(elements);\n    }\n  }\n\n  /**\n   * Checks collisions between two elements\n   *\n   * @param first\n   * @param second\n   */\n  private checkElementsCollision(first: DOMRect, second: DOMRect): boolean {\n    return (\n      ((first.top = second.top) ||\n        (first.bottom = second.top) ||\n        (first.top = second.bottom)) &&\n      ((first.left >= second.left && first.left = second.left) ||\n        (first.left = second.right))\n    );\n  }\n\n  /**\n   * Init tracking of element\n   *\n   * @param element\n   */\n  private addTrackedElement(element: AngularCollisionDirective): void {\n    if (!this.trackedElements.some((el) => el.id == element.id)) {\n      element.startTracking();\n      const subscription = element.rectangleChange$\n        .pipe(takeUntil(element.destroy$))\n        .subscribe((change: NgcElementChange) => {\n          this.trackedElementsPositions.set(change.element.id, change);\n          this.trackedElementsPositions$.next(this.trackedElementsPositions);\n        });\n      this.trackedElements.push({ id: element.id, subscription });\n    }\n  }\n\n  /**\n   * Finish tracking of element\n   *\n   * @param element\n   */\n  private removeTrackedElement(element: AngularCollisionDirective): void {\n    element.stopTracking();\n\n    this.trackedElementsPositions.delete(element.id);\n    this.trackedElementsPositions$.next(this.trackedElementsPositions);\n\n    const foundElement = this.trackedElements.find(\n      (trackedElement) => trackedElement.id === element.id\n    );\n\n    if (foundElement?.subscription && !foundElement.subscription.closed) {\n      foundElement.subscription.unsubscribe();\n    }\n\n    this.trackedElements = this.trackedElements.filter(\n      (trackedElement) => trackedElement.id !== element.id\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgcCollisionChange.html":{"url":"interfaces/NgcCollisionChange.html","title":"interface - NgcCollisionChange","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgcCollisionChange\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-collision/src/lib/angular-collision.directive.ts\n        \n\n            \n                Description\n            \n            \n                Object with info about element's collisions\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        active\n                                \n                                \n                                        collidedElements\n                                \n                                \n                                        id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        active\n                                    \n                                \n                                \n                                    \n                                        active:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        collidedElements\n                                    \n                                \n                                \n                                    \n                                        collidedElements:     AngularCollisionDirective[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     AngularCollisionDirective[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Directive,\n  AfterContentChecked,\n  ElementRef,\n  Output,\n  EventEmitter,\n  OnDestroy,\n  Input,\n  HostBinding,\n  Optional,\n  OnChanges,\n  SimpleChanges,\n} from '@angular/core';\nimport { timer, Subscription, Subject, Observable } from 'rxjs';\nimport { NgcConfig } from './models/ngc-config.model';\n\n/**\n * Object containing changed element's domRect and element itself\n */\nexport interface NgcElementChange {\n  domRect: DOMRect;\n  element: AngularCollisionDirective;\n}\n\n/**\n * Object with info about element's collisions\n */\nexport interface NgcCollisionChange {\n  id: number;\n  active: boolean;\n  collidedElements: AngularCollisionDirective[];\n}\n\n@Directive({\n  selector: '[ngcAngularCollision]',\n  exportAs: 'ngcAngularCollision',\n})\nexport class AngularCollisionDirective\n  implements OnChanges, AfterContentChecked, OnDestroy {\n  /**\n   * Disable interval position checking\n   */\n  @Input() public disableInterval: boolean;\n\n  /**\n   * Interval time for position checking\n   */\n  @Input() public intervalTime: number = 100;\n\n  /**\n   * Element's position changes\n   */\n  @Output() public rectangleChange: EventEmitter = new EventEmitter();\n\n  /**\n   * Element's collision changes\n   */\n  @Output() public collisionActiveChange: EventEmitter = new EventEmitter();\n\n  @HostBinding('class.collision') private collisionActive: boolean;\n\n  /**\n   * Element's collision changes as observable, same as output\n   */\n  public rectangleChange$: Subject = new Subject();\n\n  /**\n   * Observable that emits on instance destroy\n   */\n  public destroy$: Subject = new Subject();\n\n  /**\n   * Unique id for directive instance\n   */\n  public id: number;\n\n  /**\n   * True if element has any collision\n   */\n  public collision: boolean;\n\n  /**\n   * Observable of collision value\n   */\n  public collision$: Observable;\n\n  private _collision$: Subject = new Subject();\n  private _timerSubscription: Subscription;\n  private _active: boolean = false;\n  private _intervalTime: number;\n  private _disableInterval: boolean;\n  private static _uid: number = 0;\n\n  constructor(public element: ElementRef, @Optional() config?: NgcConfig) {\n    this.id = AngularCollisionDirective._uid++;\n    this.collision$ = this._collision$.asObservable();\n\n    if (config) {\n      this._intervalTime = config.intervalTime;\n      this._disableInterval = config.disableInterval;\n    }\n  }\n\n  public ngOnChanges(changes: SimpleChanges): void {\n    if (changes.intervalTime) {\n      this._intervalTime = changes.intervalTime.currentValue;\n    }\n\n    if (changes.disableInterval) {\n      this._disableInterval = changes.disableInterval.currentValue;\n    }\n  }\n\n  public ngAfterContentChecked(): void {\n    if (this._active) {\n      this.checkPosition();\n    }\n  }\n\n  public ngOnDestroy(): void {\n    this.unsubscribe();\n    this.destroy$.next(this.id);\n  }\n\n  /**\n   * Update collision status\n   *\n   * @param active\n   * @param collidedIds\n   */\n  public updateCollisionState(\n    active: boolean,\n    collidedElements: AngularCollisionDirective[]\n  ): void {\n    // Fix for ExpressionChangedAfterItHasBeenCheckedError\n    Promise.resolve().then(() => {\n      this.collisionActive = active;\n      this.collision = active;\n      this._collision$.next(active);\n      this.collisionActiveChange.emit({\n        id: this.id,\n        active,\n        collidedElements,\n      });\n    });\n  }\n\n  /**\n   * Check and emit element position\n   */\n  public checkPosition(): void {\n    const domRect: DOMRect = this.element.nativeElement.getBoundingClientRect();\n\n    this.rectangleChange$.next({ domRect, element: this });\n    this.rectangleChange.emit({ domRect, element: this });\n  }\n\n  /**\n   * Start tracking element\n   */\n  public startTracking(): void {\n    this._active = true;\n\n    if (!this._disableInterval) {\n      this._timerSubscription = timer(0, this._intervalTime).subscribe(() => {\n        this.checkPosition();\n      });\n    }\n  }\n\n  /**\n   * Stop tracking element\n   */\n  public stopTracking(): void {\n    this._active = false;\n    this.updateCollisionState(false, []);\n    this.unsubscribe();\n  }\n\n  /**\n   * Unsubscribe timer observable\n   */\n  public unsubscribe(): void {\n    if (this._timerSubscription && !this._timerSubscription.closed) {\n      this._timerSubscription.unsubscribe();\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NgcConfig.html":{"url":"classes/NgcConfig.html","title":"class - NgcConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NgcConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-collision/src/lib/models/ngc-config.model.ts\n        \n\n            \n                Description\n            \n            \n                Optional module config\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                disableInterval\n                            \n                            \n                                    Public\n                                intervalTime\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(disableInterval: boolean, intervalTime: number)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-collision/src/lib/models/ngc-config.model.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        disableInterval\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        intervalTime\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            disableInterval\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/models/ngc-config.model.ts:9\n                            \n                        \n\n                \n                    \n                        Disable interval position checking\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            intervalTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 100\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/models/ngc-config.model.ts:13\n                            \n                        \n\n                \n                    \n                        Interval time for position checking\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class NgcConfig {\n  constructor(\n    /**\n     * Disable interval position checking\n     */\n    public disableInterval: boolean = false,\n    /**\n     * Interval time for position checking\n     */\n    public intervalTime: number = 100\n  ) {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgcElementChange.html":{"url":"interfaces/NgcElementChange.html","title":"interface - NgcElementChange","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgcElementChange\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-collision/src/lib/angular-collision.directive.ts\n        \n\n            \n                Description\n            \n            \n                Object containing changed element's domRect and element itself\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        domRect\n                                \n                                \n                                        element\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        domRect\n                                    \n                                \n                                \n                                    \n                                        domRect:     DOMRect\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DOMRect\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        element\n                                    \n                                \n                                \n                                    \n                                        element:     AngularCollisionDirective\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     AngularCollisionDirective\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Directive,\n  AfterContentChecked,\n  ElementRef,\n  Output,\n  EventEmitter,\n  OnDestroy,\n  Input,\n  HostBinding,\n  Optional,\n  OnChanges,\n  SimpleChanges,\n} from '@angular/core';\nimport { timer, Subscription, Subject, Observable } from 'rxjs';\nimport { NgcConfig } from './models/ngc-config.model';\n\n/**\n * Object containing changed element's domRect and element itself\n */\nexport interface NgcElementChange {\n  domRect: DOMRect;\n  element: AngularCollisionDirective;\n}\n\n/**\n * Object with info about element's collisions\n */\nexport interface NgcCollisionChange {\n  id: number;\n  active: boolean;\n  collidedElements: AngularCollisionDirective[];\n}\n\n@Directive({\n  selector: '[ngcAngularCollision]',\n  exportAs: 'ngcAngularCollision',\n})\nexport class AngularCollisionDirective\n  implements OnChanges, AfterContentChecked, OnDestroy {\n  /**\n   * Disable interval position checking\n   */\n  @Input() public disableInterval: boolean;\n\n  /**\n   * Interval time for position checking\n   */\n  @Input() public intervalTime: number = 100;\n\n  /**\n   * Element's position changes\n   */\n  @Output() public rectangleChange: EventEmitter = new EventEmitter();\n\n  /**\n   * Element's collision changes\n   */\n  @Output() public collisionActiveChange: EventEmitter = new EventEmitter();\n\n  @HostBinding('class.collision') private collisionActive: boolean;\n\n  /**\n   * Element's collision changes as observable, same as output\n   */\n  public rectangleChange$: Subject = new Subject();\n\n  /**\n   * Observable that emits on instance destroy\n   */\n  public destroy$: Subject = new Subject();\n\n  /**\n   * Unique id for directive instance\n   */\n  public id: number;\n\n  /**\n   * True if element has any collision\n   */\n  public collision: boolean;\n\n  /**\n   * Observable of collision value\n   */\n  public collision$: Observable;\n\n  private _collision$: Subject = new Subject();\n  private _timerSubscription: Subscription;\n  private _active: boolean = false;\n  private _intervalTime: number;\n  private _disableInterval: boolean;\n  private static _uid: number = 0;\n\n  constructor(public element: ElementRef, @Optional() config?: NgcConfig) {\n    this.id = AngularCollisionDirective._uid++;\n    this.collision$ = this._collision$.asObservable();\n\n    if (config) {\n      this._intervalTime = config.intervalTime;\n      this._disableInterval = config.disableInterval;\n    }\n  }\n\n  public ngOnChanges(changes: SimpleChanges): void {\n    if (changes.intervalTime) {\n      this._intervalTime = changes.intervalTime.currentValue;\n    }\n\n    if (changes.disableInterval) {\n      this._disableInterval = changes.disableInterval.currentValue;\n    }\n  }\n\n  public ngAfterContentChecked(): void {\n    if (this._active) {\n      this.checkPosition();\n    }\n  }\n\n  public ngOnDestroy(): void {\n    this.unsubscribe();\n    this.destroy$.next(this.id);\n  }\n\n  /**\n   * Update collision status\n   *\n   * @param active\n   * @param collidedIds\n   */\n  public updateCollisionState(\n    active: boolean,\n    collidedElements: AngularCollisionDirective[]\n  ): void {\n    // Fix for ExpressionChangedAfterItHasBeenCheckedError\n    Promise.resolve().then(() => {\n      this.collisionActive = active;\n      this.collision = active;\n      this._collision$.next(active);\n      this.collisionActiveChange.emit({\n        id: this.id,\n        active,\n        collidedElements,\n      });\n    });\n  }\n\n  /**\n   * Check and emit element position\n   */\n  public checkPosition(): void {\n    const domRect: DOMRect = this.element.nativeElement.getBoundingClientRect();\n\n    this.rectangleChange$.next({ domRect, element: this });\n    this.rectangleChange.emit({ domRect, element: this });\n  }\n\n  /**\n   * Start tracking element\n   */\n  public startTracking(): void {\n    this._active = true;\n\n    if (!this._disableInterval) {\n      this._timerSubscription = timer(0, this._intervalTime).subscribe(() => {\n        this.checkPosition();\n      });\n    }\n  }\n\n  /**\n   * Stop tracking element\n   */\n  public stopTracking(): void {\n    this._active = false;\n    this.updateCollisionState(false, []);\n    this.unsubscribe();\n  }\n\n  /**\n   * Unsubscribe timer observable\n   */\n  public unsubscribe(): void {\n    if (this._timerSubscription && !this._timerSubscription.closed) {\n      this._timerSubscription.unsubscribe();\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgcTrackedElement.html":{"url":"interfaces/NgcTrackedElement.html","title":"interface - NgcTrackedElement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgcTrackedElement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-collision/src/lib/models/ngc-tracked-element.interface.ts\n        \n\n            \n                Description\n            \n            \n                Tracked element in library service\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        subscription\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Element id\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subscription\n                                    \n                                \n                                \n                                    \n                                        subscription:     Subscription\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Subscription\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Element changes observable subscription\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Subscription } from 'rxjs';\n\n/**\n * Tracked element in library service\n */\nexport interface NgcTrackedElement {\n  /**\n   * Element id\n   */\n  id: number;\n\n  /**\n   * Element changes observable subscription\n   */\n  subscription: Subscription;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/angular-collision/src/lib/angular-collision.directive.ts\n            \n            directive\n            AngularCollisionDirective\n            \n                51 %\n                (14/27)\n            \n        \n        \n            \n                \n                projects/angular-collision/src/lib/angular-collision.directive.ts\n            \n            interface\n            NgcCollisionChange\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                projects/angular-collision/src/lib/angular-collision.directive.ts\n            \n            interface\n            NgcElementChange\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                projects/angular-collision/src/lib/angular-collision.service.ts\n            \n            injectable\n            AngularCollisionService\n            \n                66 %\n                (8/12)\n            \n        \n        \n            \n                \n                projects/angular-collision/src/lib/models/ngc-config.model.ts\n            \n            class\n            NgcConfig\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                projects/angular-collision/src/lib/models/ngc-tracked-element.interface.ts\n            \n            interface\n            NgcTrackedElement\n            \n                100 %\n                (3/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~10.1.5\n        \n            @angular/cdk : ^10.2.4\n        \n            @angular/common : ~10.1.5\n        \n            @angular/compiler : ~10.1.5\n        \n            @angular/core : ~10.1.5\n        \n            @angular/forms : ~10.1.5\n        \n            @angular/platform-browser : ~10.1.5\n        \n            @angular/platform-browser-dynamic : ~10.1.5\n        \n            @angular/router : ~10.1.5\n        \n            angular-collision : ^1.0.1\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNgCollision\nAngular 10 library for elements collision detection\nAuto-generated documentation\nExample\n\nInstall\n\nnpm i angular-collision\nModule (add AngularCollisionModule to imports, forRoot is optional to pass config - in this case disable interval collision checking)\n\nimport { AngularCollisionModule, NgcConfig } from 'angular-collision';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    AngularCollisionModule.forRoot(new NgcConfig(true)),\n    CommonModule,\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\nTemplate (add ngcAngularCollision directive to any element)\n\n  \n    Example element ({{ directiveRef.collision$ | async }})\n      \n        X: {{ position.x | number: '1.0-0' }}px\n        Y: {{ position.y | number: '1.0-0' }}px\n        W: {{ position.width | number: '1.0-0' }}px\n        H: {{ position.height | number: '1.0-0' }}px\n      \n  \nSCSS (class collision is applied by directive to host element)\n\n.collision {\n  border-color: red;\n}\n\n.rect {\n  width: 150px;\n  height: 150px;\n  border: 2px solid transparent;\n  position: relative;\n\n\n  &__one {\n    top: 100px;\n    left: 100px;\n  }\n\n  &__two {\n    top: 50px;\n    left: 150px;\n  }\n\n   &__three {\n    top: 250px;\n    left: 300px;\n   }\n}\nComponent (register elements to collision checking with AngularCollisionService)\n\nimport {\n  AngularCollisionService,\n  AngularCollisionDirective,\n  NgcCollisionChange,\n  NgcElementChange,\n} from 'angular-collision';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements AfterViewInit {\n  @ViewChildren(AngularCollisionDirective) elements: QueryList;\n\n  public collisions: Map = new Map();\n\n  public rectangles: Array = [\n    {\n      name: 'one,\n      position: null,\n    },\n    {\n      name: 'two',\n      position: null,\n    },\n    {\n      name: 'three',\n      position: null,\n    },\n  ];\n\n  constructor(public service: AngularCollisionService) {}\n\n  public ngAfterViewInit(): void {\n    // Register elements for collision detection\n    this.service.register(this.elements);\n\n    setTimeout(() => {\n      this.stopTrackingFirstElement();\n    }, 10000);\n  }\n\n  public stopTrackingFirstElement(): void {\n    // Remove first element from tracking\n    this.service.remove(this.elements.first);\n  }\n\n  public handleRectChange(\n    position: NgcElementChange,\n    rectangleName: RectanglesEnum\n  ): void {\n    // Handle position changes\n    this.rectangles.find(\n      (rectangle) => rectangle.name === rectangleName\n    ).position = position.domRect;\n  }\n\n  public handleCollisionActiveChange(change: NgcCollisionChange): void {\n    // Handle collisions\n    this.collisions.set(change.id, change);\n  }\n}Running demo app\nng serve demo-app\nDrag & drop made with angular/cdk. Not a part of library.\nGenerate docs\nDocumentation is auto-generated every commit.\nYou can also generate docs manually by:\nnpm run compodoc\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AngularCollisionModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AngularCollisionModule\n\n\n\ncluster_AngularCollisionModule_declarations\n\n\n\ncluster_AngularCollisionModule_exports\n\n\n\n\nAngularCollisionDirective\n\nAngularCollisionDirective\n\n\n\nAngularCollisionModule\n\nAngularCollisionModule\n\nAngularCollisionModule -->\n\nAngularCollisionDirective->AngularCollisionModule\n\n\n\n\n\nAngularCollisionDirective \n\nAngularCollisionDirective \n\nAngularCollisionDirective  -->\n\nAngularCollisionModule->AngularCollisionDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
