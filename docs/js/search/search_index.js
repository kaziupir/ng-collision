var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/directives/AngularCollisionDirective.html",[0,0.716,1,0.221]],["body/directives/AngularCollisionDirective.html",[0,0.694,1,0.35,2,1.4,3,0.357,4,0.275,5,0.275,6,0.843,7,0.843,8,0.688,9,0.694,10,1.606,11,0.848,12,1.4,13,1.314,14,1.606,15,0.449,16,0.861,17,1.205,18,2.28,19,1.435,20,1.606,21,1.288,22,1.031,23,2.064,24,1.606,25,1.298,26,1.606,27,1.314,28,1.806,29,1.806,30,0.954,31,1.806,32,1.806,33,2.064,34,1.606,35,2.163,36,1.606,37,1.606,38,1.606,39,2.163,40,1.606,41,2.163,42,2.163,43,1.069,44,1.4,45,1.952,46,2.591,47,2.163,48,1.314,49,0.084,50,1.062,51,1.044,52,0.861,53,1.314,54,1.4,55,1.23,56,1.4,57,1.136,58,2.453,59,2.453,60,1.314,61,1.4,62,2.151,63,1.4,64,1.4,65,1.4,66,1.4,67,1.062,68,1.314,69,1.314,70,2.151,71,1.302,72,1.4,73,1.4,74,1.4,75,0.694,76,0.954,77,1.4,78,0.694,79,1.4,80,1.606,81,0.694,82,1.4,83,1.952,84,1.4,85,1.314,86,1.062,87,1.314,88,1.606,89,1.4,90,1.205,91,0.668,92,1.4,93,1.4,94,1.4,95,1.4,96,0.848,97,1.4,98,0.551,99,0.551,100,1.606,101,1.806,102,0.851,103,0.275,104,0.357,105,0.954,106,1.314,107,1.062,108,0.673,109,0.214,110,0.275,111,1.09,112,0.558,113,0.851,114,0.138,115,1.314,116,0.551,117,0.851,118,0.851,119,0.851,120,1.314,121,0.851,122,1.606,123,1.314,124,1.314,125,0.851,126,0.694,127,0.851,128,0.851,129,0.851,130,0.449,131,0.851,132,0.851,133,0.851,134,0.851,135,0.851,136,1.314,137,0.851,138,0.851,139,0.851,140,0.851,141,0.851,142,0.025,143,0.039,144,0.025]],["title/modules/AngularCollisionModule.html",[145,1.355,146,1.095]],["body/modules/AngularCollisionModule.html",[1,0.444,3,0.708,4,0.547,5,0.547,6,0.69,7,0.69,25,1.722,27,1.688,46,1.688,48,1.688,49,0.084,50,1.365,51,0.708,52,1.107,70,1.688,99,0.978,103,0.547,108,0.708,114,0.275,116,0.978,142,0.05,143,0.064,144,0.05,145,1.688,146,2.144,147,1.688,148,1.365,149,2.121,150,2.933,151,2.121,152,2.677,153,2.933,154,2.121,155,2.121,156,2.121,157,2.677,158,2.121,159,1.688,160,2.778,161,3.506,162,2.778,163,1.335,164,2.778,165,3.842,166,3.842,167,1.397,168,1.365,169,2.778,170,1.365,171,2.778,172,2.778]],["title/injectables/AngularCollisionService.html",[173,0.716,174,0.888]],["body/injectables/AngularCollisionService.html",[1,0.416,3,0.339,4,0.262,5,0.262,6,0.77,7,0.77,9,0.427,11,0.667,15,0.427,16,0.828,17,1.186,19,1.358,21,1.256,22,0.928,27,1.262,30,0.928,43,1.015,46,2.339,48,2.02,49,0.085,50,1.633,51,0.962,52,1.384,55,0.667,57,0.821,58,1.952,59,1.952,70,2.02,71,1.213,75,0.667,76,1.154,78,0.667,81,0.667,90,1.007,91,0.569,96,1.115,98,0.339,99,0.736,103,0.262,104,0.339,105,0.427,108,0.651,109,0.131,110,0.569,111,1.067,114,0.205,116,0.529,126,1.067,130,0.821,142,0.024,143,0.038,144,0.024,163,0.928,167,0.53,168,0.653,170,0.653,173,0.667,174,0.828,175,1.329,176,0.653,177,1.554,178,2.02,179,1.554,180,2.077,181,2.077,182,1.554,183,1.554,184,2.077,185,1.329,186,2.077,187,1.329,188,1.262,189,1.329,190,1.262,191,1.262,192,1.757,193,1.329,194,1.262,195,1.757,196,1.262,197,1.262,198,2.068,199,1.262,200,1.329,201,1.329,202,2.245,203,1.329,204,1.329,205,1.329,206,1.262,207,1.329,208,1.262,209,1.019,210,1.329,211,2.02,212,1.262,213,2.111,214,1.329,215,1.757,216,1.329,217,1.262,218,0.808,219,0.808,220,0.808,221,0.808,222,0.808,223,0.808,224,0.808,225,0.808,226,0.808,227,0.808,228,0.808,229,0.808,230,0.808,231,0.808,232,0.808,233,1.262,234,0.808,235,0.808,236,0.808,237,0.808,238,0.808,239,0.808,240,0.808,241,0.808,242,1.262,243,1.262,244,1.262,245,0.808,246,0.808,247,0.808,248,0.808,249,1.262,250,1.262,251,0.808,252,0.808,253,1.554,254,1.262,255,0.808,256,0.808,257,0.808,258,1.757,259,0.808,260,0.808,261,0.808,262,0.808,263,0.808,264,0.653,265,1.262,266,0.808,267,0.808,268,0.808,269,0.808,270,0.808,271,1.262,272,1.262,273,0.808,274,0.808,275,0.808,276,0.808,277,0.808]],["title/interfaces/NgcCollisionChange.html",[109,0.221,112,0.888]],["body/interfaces/NgcCollisionChange.html",[0,0.895,1,0.381,3,0.503,4,0.388,5,0.388,6,0.388,7,0.388,8,0.969,9,0.633,10,1.694,11,0.895,13,1.199,14,1.694,15,0.633,16,1.111,17,1.038,18,2.496,19,1.402,20,1.199,21,1.27,22,1.235,23,1.694,24,1.199,25,0.969,26,1.199,28,1.199,29,1.199,30,0.633,31,1.199,32,1.199,33,1.694,34,1.199,36,1.199,37,1.199,38,1.199,40,1.199,45,1.694,49,0.085,51,0.824,53,1.199,55,1.27,57,1.235,60,1.199,62,2.252,67,0.969,68,1.199,69,1.199,71,1.27,75,0.633,76,0.895,78,0.633,80,1.694,81,0.633,83,2.338,85,1.199,86,0.969,87,1.199,88,1.694,90,1.19,91,0.691,96,0.895,98,0.503,99,0.71,100,1.965,101,2.135,102,1.199,103,0.388,104,0.503,105,1.128,106,1.694,107,1.37,108,0.824,109,0.276,110,0.388,111,1.235,112,1.111,113,1.199,114,0.195,115,1.694,116,0.71,117,1.199,118,1.199,119,1.199,120,1.694,121,1.199,122,1.965,123,1.694,124,1.694,125,1.199,126,0.895,127,1.199,128,1.199,129,1.199,130,0.633,131,1.199,132,1.199,133,1.199,134,1.199,135,1.199,136,1.694,137,1.199,138,1.199,139,1.199,140,1.199,141,1.199,142,0.036,143,0.051,144,0.036,278,0.969]],["title/classes/NgcConfig.html",[114,0.221,163,0.716]],["body/classes/NgcConfig.html",[1,0.388,3,0.448,4,0.346,5,0.346,6,0.346,7,0.346,9,0.565,11,0.824,17,0.973,19,1.227,21,1.188,22,1.07,30,0.565,49,0.085,52,0.701,55,0.565,57,0.973,71,1.138,75,0.565,76,1.07,78,0.565,81,0.565,90,0.973,91,0.505,96,1.188,98,0.448,99,0.849,103,0.346,104,0.448,105,0.565,108,0.772,109,0.174,110,0.656,111,0.824,114,0.254,116,0.448,126,1.188,130,0.973,142,0.032,143,0.047,144,0.032,163,0.973,167,0.701,168,0.865,170,0.865,173,0.824,174,0.701,176,0.865,177,1.069,178,1.561,179,1.069,182,1.069,183,1.069,188,1.069,190,1.069,191,1.069,192,1.561,194,1.069,195,1.843,196,1.069,197,1.069,198,2.044,199,1.069,202,2.155,206,1.069,208,1.069,209,1.023,211,1.843,212,1.069,213,2.026,215,1.561,217,1.069,218,1.069,219,1.069,220,1.069,221,1.069,222,1.069,223,1.069,224,1.069,225,1.069,226,1.069,227,1.069,228,1.069,229,1.069,230,1.069,231,1.069,232,1.069,233,1.561,234,1.069,235,1.069,236,1.069,237,1.069,238,1.069,239,1.069,240,1.069,241,1.069,242,1.561,243,1.561,244,1.561,245,1.069,246,1.069,247,1.069,248,1.069,249,1.561,250,1.561,251,1.069,252,1.069,253,1.843,254,1.561,255,1.069,256,1.069,257,1.069,258,2.026,259,1.069,260,1.069,261,1.069,262,1.069,263,1.069,264,0.865,265,1.561,266,1.069,267,1.069,268,1.069,269,1.069,270,1.069,271,1.561,272,1.561,273,1.069,274,1.069,275,1.069,276,1.069,277,1.069,279,1.76]],["title/interfaces/NgcElementChange.html",[109,0.221,110,0.439]],["body/interfaces/NgcElementChange.html",[0,0.902,1,0.382,3,0.508,4,0.392,5,0.392,6,0.392,7,0.392,8,0.979,9,0.64,10,1.707,11,0.902,13,1.211,14,1.707,15,0.64,16,1.119,17,1.044,18,2.346,19,1.404,20,1.211,21,1.34,22,1.044,23,1.707,24,1.211,25,0.979,26,1.211,28,1.211,29,1.211,30,0.64,31,1.211,32,1.211,33,1.707,34,1.211,36,1.211,37,1.211,38,1.211,40,1.211,45,1.707,49,0.085,51,0.715,53,1.211,55,1.195,57,1.133,60,1.211,62,2.261,67,0.979,68,1.211,69,1.211,71,1.273,75,0.64,76,0.902,78,0.64,80,1.707,81,0.64,83,1.976,85,1.211,86,0.979,87,1.211,88,1.707,90,1.195,91,0.695,96,0.902,98,0.508,99,0.715,100,1.976,101,2.145,102,1.211,103,0.392,104,0.508,105,1.133,106,1.707,107,1.38,108,0.828,109,0.278,110,0.553,111,1.355,112,0.794,113,1.211,114,0.197,115,1.707,116,0.715,117,1.211,118,1.211,119,1.211,120,1.707,121,1.211,122,1.976,123,1.707,124,1.707,125,1.211,126,0.902,127,1.211,128,1.211,129,1.211,130,0.64,131,1.211,132,1.211,133,1.211,134,1.211,135,1.211,136,1.707,137,1.211,138,1.211,139,1.211,140,1.211,141,1.211,142,0.036,143,0.051,144,0.036,278,0.979]],["title/interfaces/NgcTrackedElement.html",[109,0.221,209,0.888]],["body/interfaces/NgcTrackedElement.html",[1,0.385,3,0.438,4,0.339,5,0.339,6,0.339,7,0.339,9,0.552,11,0.811,15,0.552,16,1.006,17,0.961,19,1.218,21,1.179,22,1.218,30,0.552,49,0.085,51,0.644,52,0.686,55,0.552,57,1.128,71,1.128,75,0.552,76,1.059,78,0.552,81,0.552,90,0.961,91,0.497,96,1.315,98,0.438,99,0.84,103,0.339,104,0.438,105,0.552,108,0.763,109,0.17,110,0.649,111,0.811,114,0.25,116,0.438,126,1.179,130,0.961,142,0.031,143,0.046,144,0.031,163,0.811,167,0.686,168,0.845,170,0.845,173,0.811,174,0.686,176,0.845,177,1.046,178,1.535,179,1.046,182,1.046,183,1.046,188,1.046,190,1.046,191,1.046,192,1.535,194,1.046,195,1.819,196,1.046,197,1.046,198,2.035,199,1.046,202,2.135,206,1.046,208,1.046,209,1.193,211,1.819,212,1.046,213,2.005,215,1.535,217,1.046,218,1.046,219,1.046,220,1.046,221,1.046,222,1.046,223,1.046,224,1.046,225,1.046,226,1.046,227,1.046,228,1.046,229,1.046,230,1.046,231,1.046,232,1.046,233,1.535,234,1.046,235,1.046,236,1.046,237,1.046,238,1.046,239,1.046,240,1.046,241,1.046,242,1.535,243,1.535,244,1.535,245,1.046,246,1.046,247,1.046,248,1.046,249,1.535,250,1.535,251,1.046,252,1.046,253,1.819,254,1.535,255,1.046,256,1.046,257,1.046,258,2.005,259,1.046,260,1.046,261,1.046,262,1.046,263,1.046,264,0.845,265,1.535,266,1.046,267,1.046,268,1.046,269,1.046,270,1.046,271,1.535,272,1.535,273,1.046,274,1.046,275,1.046,276,1.046,277,1.046,278,0.845]],["title/coverage.html",[280,2.317]],["body/coverage.html",[0,0.999,1,0.308,5,0.612,6,0.859,7,0.859,8,1.985,49,0.081,51,0.793,91,0.612,98,1.069,109,0.4,110,0.612,112,1.24,114,0.308,142,0.057,143,0.068,144,0.057,163,0.999,173,0.999,174,1.24,176,1.985,209,1.24,280,2.376,281,3.112,282,3.112,283,3.112,284,3.112,285,3.112,286,3.112,287,3.761,288,3.112,289,3.112,290,3.112,291,3.112,292,3.112]],["title/dependencies.html",[148,1.316,293,1.866]],["body/dependencies.html",[49,0.084,103,0.638,104,0.826,142,0.059,143,0.07,144,0.059,148,1.593,294,3.242,295,4.49,296,3.242,297,3.242,298,3.242,299,3.854,300,2.942,301,3.242,302,3.242,303,3.242,304,3.242,305,3.242,306,3.242,307,3.242,308,3.242,309,3.242]],["title/index.html",[15,0.599,310,1.866,311,1.866]],["body/index.html",[4,0.558,49,0.065,50,1.394,67,1.394,86,1.394,91,0.558,107,1.394,142,0.052,143,0.065,144,0.052,159,1.724,167,1.619,198,1.394,264,1.394,312,2.838,313,2.838,314,2.838,315,2.838,316,3.553,317,2.838,318,3.879,319,2.838,320,2.838,321,2.838,322,3.553,323,4.186,324,4.334,325,2.838,326,2.838,327,2.838,328,2.838,329,2.838,330,2.838,331,2.838,332,2.838,333,2.838,334,3.879,335,3.879,336,3.879,337,2.838,338,4.186,339,2.838,340,2.838,341,2.838,342,2.838,343,2.838,344,2.838,345,2.838,346,3.553,347,3.553,348,4.066,349,2.838,350,3.553,351,3.553,352,2.838,353,4.066,354,2.838,355,2.838,356,2.838,357,3.879,358,2.838,359,2.838,360,2.838]],["title/modules.html",[147,1.844]],["body/modules.html",[49,0.074,142,0.064,143,0.074,144,0.064,146,1.738,147,2.149,300,2.7,361,3.537,362,3.537,363,3.537]],["title/overview.html",[364,2.317]],["body/overview.html",[0,1.043,1,0.441,49,0.077,114,0.321,142,0.059,143,0.07,144,0.059,145,2.345,146,2.137,148,1.597,149,2.481,150,2.481,151,2.481,152,2.481,153,2.481,154,2.481,155,2.481,156,2.481,157,2.947,158,2.481,159,1.975,173,1.043,278,1.597,364,2.481,365,4.259,366,3.25]]],"invertedIndex":[["",{"_index":49,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["0",{"_index":98,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{}}}],["0.10.2",{"_index":309,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":288,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":287,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":286,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":365,"title":{},"body":{"overview.html":{}}}],["10",{"_index":313,"title":{},"body":{"index.html":{}}}],["10.1.5",{"_index":295,"title":{},"body":{"dependencies.html":{}}}],["10.1.6",{"_index":320,"title":{},"body":{"index.html":{}}}],["10.2.4",{"_index":304,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":60,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["2.0.0",{"_index":307,"title":{},"body":{"dependencies.html":{}}}],["22",{"_index":284,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":366,"title":{},"body":{"overview.html":{}}}],["5/22",{"_index":285,"title":{},"body":{"coverage.html":{}}}],["6.6.0",{"_index":305,"title":{},"body":{"dependencies.html":{}}}],["66",{"_index":289,"title":{},"body":{"coverage.html":{}}}],["8/12",{"_index":290,"title":{},"body":{"coverage.html":{}}}],["active",{"_index":18,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["add",{"_index":115,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["addtrackedelement",{"_index":180,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["addtrackedelement(element",{"_index":188,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["aftercontentchecked",{"_index":10,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["angular",{"_index":167,"title":{},"body":{"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{},"index.html":{}}}],["angular/animations",{"_index":294,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":303,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":296,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler",{"_index":297,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":103,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":298,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":299,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":302,"title":{},"body":{"dependencies.html":{}}}],["angularcollisiondirective",{"_index":1,"title":{"directives/AngularCollisionDirective.html":{}},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{},"overview.html":{}}}],["angularcollisiondirective.uid",{"_index":121,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["angularcollisionmodule",{"_index":146,"title":{"modules/AngularCollisionModule.html":{}},"body":{"modules/AngularCollisionModule.html":{},"modules.html":{},"overview.html":{}}}],["angularcollisionservice",{"_index":174,"title":{"injectables/AngularCollisionService.html":{}},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{}}}],["app",{"_index":329,"title":{},"body":{"index.html":{}}}],["array.isarray(elements",{"_index":242,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["artifacts",{"_index":339,"title":{},"body":{"index.html":{}}}],["automatically",{"_index":330,"title":{},"body":{"index.html":{}}}],["between",{"_index":196,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["boolean",{"_index":55,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["bootstrap",{"_index":151,"title":{},"body":{"modules/AngularCollisionModule.html":{},"overview.html":{}}}],["browse",{"_index":363,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":300,"title":{},"body":{"dependencies.html":{},"modules.html":{}}}],["build",{"_index":338,"title":{},"body":{"index.html":{}}}],["change",{"_index":264,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{},"index.html":{}}}],["check",{"_index":67,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"index.html":{}}}],["checkelementscollision",{"_index":181,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["checkelementscollision(first",{"_index":191,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["checkposition",{"_index":28,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["checks",{"_index":194,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["class",{"_index":114,"title":{"classes/NgcConfig.html":{}},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{},"overview.html":{}}}],["class.collision",{"_index":42,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["classes",{"_index":279,"title":{},"body":{"classes/NgcConfig.html":{}}}],["cli",{"_index":318,"title":{},"body":{"index.html":{}}}],["cluster_angularcollisionmodule",{"_index":154,"title":{},"body":{"modules/AngularCollisionModule.html":{},"overview.html":{}}}],["cluster_angularcollisionmodule_declarations",{"_index":156,"title":{},"body":{"modules/AngularCollisionModule.html":{},"overview.html":{}}}],["cluster_angularcollisionmodule_exports",{"_index":155,"title":{},"body":{"modules/AngularCollisionModule.html":{},"overview.html":{}}}],["code",{"_index":332,"title":{},"body":{"index.html":{}}}],["collidedelements",{"_index":83,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["collidedids",{"_index":127,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["collision",{"_index":86,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"index.html":{}}}],["collision.directive",{"_index":168,"title":{},"body":{"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["collision.directive.ts",{"_index":8,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"coverage.html":{}}}],["collision.directive.ts:108",{"_index":77,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:117",{"_index":79,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:32",{"_index":56,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:33",{"_index":61,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:34",{"_index":54,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:36",{"_index":64,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:39",{"_index":63,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:43",{"_index":65,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:45",{"_index":95,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:46",{"_index":92,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:47",{"_index":94,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:49",{"_index":97,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:50",{"_index":89,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:51",{"_index":47,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:53",{"_index":93,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:57",{"_index":72,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:63",{"_index":73,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:74",{"_index":84,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:85",{"_index":66,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:95",{"_index":74,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.module.ts",{"_index":160,"title":{},"body":{"modules/AngularCollisionModule.html":{}}}],["collision.module.ts:10",{"_index":164,"title":{},"body":{"modules/AngularCollisionModule.html":{}}}],["collision.service",{"_index":169,"title":{},"body":{"modules/AngularCollisionModule.html":{}}}],["collision.service.ts",{"_index":176,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{}}}],["collision.service.ts:100",{"_index":205,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["collision.service.ts:121",{"_index":193,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["collision.service.ts:137",{"_index":189,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["collision.service.ts:155",{"_index":207,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["collision.service.ts:23",{"_index":210,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["collision.service.ts:28",{"_index":214,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["collision.service.ts:33",{"_index":216,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["collision.service.ts:37",{"_index":186,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["collision.service.ts:69",{"_index":200,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["collision.service.ts:80",{"_index":203,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["collision/src/lib/angular",{"_index":7,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{}}}],["collisionactive",{"_index":118,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["collisionactivechange",{"_index":40,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["collisions",{"_index":195,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["collisions.length",{"_index":239,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["collisions.push(innerelement.element",{"_index":237,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["component",{"_index":335,"title":{},"body":{"index.html":{}}}],["config",{"_index":116,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["const",{"_index":130,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["constructor",{"_index":43,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{}}}],["constructor(@optional",{"_index":223,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["constructor(config",{"_index":185,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["constructor(element",{"_index":44,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["constructor(public",{"_index":119,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["coverage",{"_index":280,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["customevents",{"_index":36,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["declarations",{"_index":150,"title":{},"body":{"modules/AngularCollisionModule.html":{},"overview.html":{}}}],["default",{"_index":58,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{}}}],["defined",{"_index":46,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{}}}],["dependencies",{"_index":148,"title":{"dependencies.html":{}},"body":{"modules/AngularCollisionModule.html":{},"dependencies.html":{},"overview.html":{}}}],["destroy",{"_index":20,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["detection",{"_index":315,"title":{},"body":{"index.html":{}}}],["dev",{"_index":326,"title":{},"body":{"index.html":{}}}],["development",{"_index":321,"title":{},"body":{"index.html":{}}}],["directive",{"_index":0,"title":{"directives/AngularCollisionDirective.html":{}},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"coverage.html":{},"overview.html":{}}}],["directives",{"_index":2,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":337,"title":{},"body":{"index.html":{}}}],["directory",{"_index":342,"title":{},"body":{"index.html":{}}}],["disableinterval",{"_index":37,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["dist",{"_index":341,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":281,"title":{},"body":{"coverage.html":{}}}],["domrect",{"_index":111,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["dynamic",{"_index":301,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":354,"title":{},"body":{"index.html":{}}}],["el.id",{"_index":257,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["element",{"_index":21,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["element.domrect",{"_index":235,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["element.element.updatecollisionstate",{"_index":238,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["element.id",{"_index":258,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["element.rectanglechange",{"_index":260,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["element.starttracking",{"_index":259,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["element.stoptracking",{"_index":267,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["elementref",{"_index":45,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["elements",{"_index":198,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{},"index.html":{}}}],["elements.foreach((element",{"_index":244,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["elementsmap.foreach",{"_index":231,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["elementsmap.foreach((element",{"_index":230,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["emit",{"_index":68,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["end",{"_index":353,"title":{},"body":{"index.html":{}}}],["eventemitter",{"_index":62,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["execute",{"_index":350,"title":{},"body":{"index.html":{}}}],["export",{"_index":108,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["exportas",{"_index":113,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["exports",{"_index":153,"title":{},"body":{"modules/AngularCollisionModule.html":{},"overview.html":{}}}],["false",{"_index":88,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["file",{"_index":5,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{}}}],["files",{"_index":107,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"index.html":{}}}],["finish",{"_index":208,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["first",{"_index":199,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["first.bottom",{"_index":251,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["first.left",{"_index":253,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["first.top",{"_index":249,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["flag",{"_index":344,"title":{},"body":{"index.html":{}}}],["forroot",{"_index":161,"title":{},"body":{"modules/AngularCollisionModule.html":{}}}],["forroot(config",{"_index":162,"title":{},"body":{"modules/AngularCollisionModule.html":{}}}],["foundelement",{"_index":269,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["foundelement.subscription.closed",{"_index":274,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["foundelement.subscription.unsubscribe",{"_index":275,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["foundelement?.subscription",{"_index":273,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["further",{"_index":356,"title":{},"body":{"index.html":{}}}],["generate",{"_index":334,"title":{},"body":{"index.html":{}}}],["generated",{"_index":317,"title":{},"body":{"index.html":{}}}],["getting",{"_index":310,"title":{"index.html":{}},"body":{}}],["go",{"_index":359,"title":{},"body":{"index.html":{}}}],["help",{"_index":357,"title":{},"body":{"index.html":{}}}],["hostbinding",{"_index":102,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["hostbinding('class.collision",{"_index":117,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["hostbindings",{"_index":41,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["http://localhost:4200",{"_index":328,"title":{},"body":{"index.html":{}}}],["id",{"_index":22,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["identifier",{"_index":282,"title":{},"body":{"coverage.html":{}}}],["ids",{"_index":212,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["implements",{"_index":9,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["import",{"_index":99,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["index",{"_index":15,"title":{"index.html":{}},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["info",{"_index":3,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["init",{"_index":190,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["injectable",{"_index":173,"title":{"injectables/AngularCollisionService.html":{}},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":175,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["innerelement",{"_index":232,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["innerelement.domrect",{"_index":236,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["innerid",{"_index":233,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["input",{"_index":101,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["inputs",{"_index":35,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["instanceof",{"_index":243,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["interface",{"_index":109,"title":{"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{}}}],["interfaces",{"_index":278,"title":{},"body":{"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"overview.html":{}}}],["intervaltime",{"_index":38,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["karma",{"_index":352,"title":{},"body":{"index.html":{}}}],["legend",{"_index":149,"title":{},"body":{"modules/AngularCollisionModule.html":{},"overview.html":{}}}],["library",{"_index":314,"title":{},"body":{"index.html":{}}}],["map",{"_index":213,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["matching",{"_index":143,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["metadata",{"_index":12,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["methods",{"_index":27,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{}}}],["module",{"_index":145,"title":{"modules/AngularCollisionModule.html":{}},"body":{"modules/AngularCollisionModule.html":{},"overview.html":{}}}],["modules",{"_index":147,"title":{"modules.html":{}},"body":{"modules/AngularCollisionModule.html":{},"modules.html":{}}}],["modulewithproviders",{"_index":165,"title":{},"body":{"modules/AngularCollisionModule.html":{}}}],["more",{"_index":358,"title":{},"body":{"index.html":{}}}],["move",{"_index":106,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["name",{"_index":50,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"index.html":{}}}],["navigate",{"_index":327,"title":{},"body":{"index.html":{}}}],["new",{"_index":91,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{},"index.html":{}}}],["ng",{"_index":324,"title":{},"body":{"index.html":{}}}],["ngaftercontentchecked",{"_index":29,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["ngcangularcollision",{"_index":14,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["ngccollisionchange",{"_index":112,"title":{"interfaces/NgcCollisionChange.html":{}},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"coverage.html":{}}}],["ngcconfig",{"_index":163,"title":{"classes/NgcConfig.html":{}},"body":{"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{}}}],["ngcelementchange",{"_index":110,"title":{"interfaces/NgcElementChange.html":{}},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{}}}],["ngcollision",{"_index":312,"title":{},"body":{"index.html":{}}}],["ngctrackedelement",{"_index":209,"title":{"interfaces/NgcTrackedElement.html":{}},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{}}}],["ngmodule",{"_index":166,"title":{},"body":{"modules/AngularCollisionModule.html":{}}}],["ngondestroy",{"_index":30,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["number",{"_index":57,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["observable",{"_index":81,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["ondestroy",{"_index":11,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["optional",{"_index":52,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["out",{"_index":159,"title":{},"body":{"modules/AngularCollisionModule.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":100,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["outputs",{"_index":39,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["overview",{"_index":364,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":293,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":126,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["parameters",{"_index":48,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{}}}],["performance",{"_index":229,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["pipe(takeuntil(element.destroy",{"_index":261,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["pipe(throttletime(100",{"_index":226,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["position",{"_index":69,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["positions",{"_index":215,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["private",{"_index":17,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["prod",{"_index":343,"title":{},"body":{"index.html":{}}}],["production",{"_index":345,"title":{},"body":{"index.html":{}}}],["project",{"_index":316,"title":{},"body":{"index.html":{}}}],["projects/angular",{"_index":6,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{}}}],["properties",{"_index":16,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["protractor",{"_index":355,"title":{},"body":{"index.html":{}}}],["provide",{"_index":171,"title":{},"body":{"modules/AngularCollisionModule.html":{}}}],["providedin",{"_index":221,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["providers",{"_index":152,"title":{},"body":{"modules/AngularCollisionModule.html":{},"overview.html":{}}}],["public",{"_index":19,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["querylist",{"_index":202,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["readme",{"_index":360,"title":{},"body":{"index.html":{}}}],["rectanglechange",{"_index":23,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["register",{"_index":182,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["register(elements",{"_index":201,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["reload",{"_index":331,"title":{},"body":{"index.html":{}}}],["remove",{"_index":183,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["remove(elements",{"_index":204,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["removetrackedelement",{"_index":184,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["removetrackedelement(element",{"_index":206,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["reset",{"_index":158,"title":{},"body":{"modules/AngularCollisionModule.html":{},"overview.html":{}}}],["result",{"_index":142,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["results",{"_index":144,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["return",{"_index":170,"title":{},"body":{"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["returns",{"_index":70,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{}}}],["root",{"_index":222,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["run",{"_index":323,"title":{},"body":{"index.html":{}}}],["running",{"_index":346,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":104,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":220,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["scaffolding",{"_index":333,"title":{},"body":{"index.html":{}}}],["second",{"_index":192,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["second.bottom",{"_index":252,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["second.left",{"_index":254,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["second.right",{"_index":255,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["second.top",{"_index":250,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["selector",{"_index":13,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["serve",{"_index":325,"title":{},"body":{"index.html":{}}}],["server",{"_index":322,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"index.html":{}}}],["start",{"_index":75,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["started",{"_index":311,"title":{"index.html":{}},"body":{}}],["starttracking",{"_index":31,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["statements",{"_index":283,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":25,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["status",{"_index":87,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["stop",{"_index":78,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["stoptracking",{"_index":32,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["stored",{"_index":340,"title":{},"body":{"index.html":{}}}],["string",{"_index":53,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["subject",{"_index":90,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["subscribe((change",{"_index":262,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["subscribe((elementsmap",{"_index":227,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["subscription",{"_index":96,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["support",{"_index":361,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":362,"title":{},"body":{"modules.html":{}}}],["table",{"_index":292,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":291,"title":{},"body":{"coverage.html":{}}}],["takeuntil",{"_index":218,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["test",{"_index":349,"title":{},"body":{"index.html":{}}}],["tests",{"_index":348,"title":{},"body":{"index.html":{}}}],["this.active",{"_index":122,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.addtrackedelement(element",{"_index":245,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["this.addtrackedelement(elements",{"_index":246,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["this.checkelementscollision",{"_index":234,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["this.checkposition",{"_index":123,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.collisionactive",{"_index":128,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.collisionactivechange.emit",{"_index":129,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.destroy$.next(this.id",{"_index":125,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.disableinterval",{"_index":135,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.element.nativeelement.getboundingclientrect",{"_index":131,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.id",{"_index":120,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.intervaltime).subscribe",{"_index":138,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.rectanglechange$.next",{"_index":132,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.rectanglechange.emit",{"_index":133,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.removetrackedelement(element",{"_index":247,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["this.removetrackedelement(elements",{"_index":248,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["this.timersubscription",{"_index":136,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.timersubscription.closed",{"_index":140,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.timersubscription.unsubscribe",{"_index":141,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.trackedelements",{"_index":276,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["this.trackedelements.filter",{"_index":277,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["this.trackedelements.find",{"_index":270,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["this.trackedelements.push",{"_index":266,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["this.trackedelements.some((el",{"_index":256,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["this.trackedelementspositions",{"_index":225,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["this.trackedelementspositions$.next(this.trackedelementspositions",{"_index":265,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["this.trackedelementspositions.delete(element.id",{"_index":268,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["this.trackedelementspositions.set(change.element.id",{"_index":263,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["this.trackedelementspositionsubscription",{"_index":224,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["this.trackedelementspositionsubscription.closed",{"_index":240,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["this.trackedelementspositionsubscription.unsubscribe",{"_index":241,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["this.unsubscribe",{"_index":124,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.updatecollisionstate(false",{"_index":139,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["throttletime",{"_index":219,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["timer",{"_index":80,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["timer(0",{"_index":137,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["timersubscription",{"_index":24,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["todo",{"_index":105,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["tracked",{"_index":211,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["trackedelement",{"_index":271,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["trackedelement.id",{"_index":272,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["trackedelements",{"_index":177,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["trackedelementspositions",{"_index":178,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["trackedelementspositionsubscription",{"_index":179,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["tracking",{"_index":76,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["true",{"_index":134,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["tslib",{"_index":306,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":197,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["type",{"_index":51,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{}}}],["uid",{"_index":26,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["unit",{"_index":347,"title":{},"body":{"index.html":{}}}],["unsubscribe",{"_index":33,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["update",{"_index":85,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["updatecollisionstate",{"_index":34,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["updatecollisionstate(active",{"_index":82,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["use",{"_index":336,"title":{},"body":{"index.html":{}}}],["usevalue",{"_index":172,"title":{},"body":{"modules/AngularCollisionModule.html":{}}}],["value",{"_index":59,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{}}}],["version",{"_index":319,"title":{},"body":{"index.html":{}}}],["via",{"_index":351,"title":{},"body":{"index.html":{}}}],["void",{"_index":71,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["work",{"_index":228,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["wrapper",{"_index":217,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["yes",{"_index":187,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["zone.js",{"_index":308,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":157,"title":{},"body":{"modules/AngularCollisionModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"directives/AngularCollisionDirective.html":{"url":"directives/AngularCollisionDirective.html","title":"directive - AngularCollisionDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  AngularCollisionDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-collision/src/lib/angular-collision.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            AfterContentChecked\n                            OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [ngcAngularCollision]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                active\n                            \n                            \n                                    Public\n                                destroy$\n                            \n                            \n                                    Public\n                                element\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                rectangleChange$\n                            \n                            \n                                    Private\n                                timerSubscription\n                            \n                            \n                                    Private\n                                    Static\n                                uid\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                checkPosition\n                            \n                            \n                                    Public\n                                ngAfterContentChecked\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                startTracking\n                            \n                            \n                                    Public\n                                stopTracking\n                            \n                            \n                                    Public\n                                unsubscribe\n                            \n                            \n                                    Public\n                                updateCollisionState\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                customEvents\n                            \n                            \n                                disableInterval\n                            \n                            \n                                intervalTime\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                collisionActiveChange\n                            \n                            \n                                rectangleChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class.collision\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(element: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:51\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        customEvents\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disableInterval\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        intervalTime\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 100\n                    \n                \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:33\n                            \n                        \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        collisionActiveChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rectangleChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:36\n                            \n                        \n            \n        \n\n            \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class.collision\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:43\n                            \n                        \n\n\n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            checkPosition\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkPosition()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:85\n                \n            \n\n\n            \n                \n                    Check and emit element position\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngAfterContentChecked\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterContentChecked()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            startTracking\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    startTracking()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:95\n                \n            \n\n\n            \n                \n                    Start tracking element\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            stopTracking\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    stopTracking()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:108\n                \n            \n\n\n            \n                \n                    Stop tracking element\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            unsubscribe\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    unsubscribe()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:117\n                \n            \n\n\n            \n                \n                    Unsubscribe timer observable\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateCollisionState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateCollisionState(active: boolean, collidedElements: AngularCollisionDirective[])\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:74\n                \n            \n\n\n            \n                \n                    Update collision status\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    active\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    collidedElements\n                                    \n                                            AngularCollisionDirective[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            active\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            destroy$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            element\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rectangleChange$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            timerSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            uid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:51\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import {\n  Directive,\n  AfterContentChecked,\n  ElementRef,\n  Output,\n  EventEmitter,\n  OnDestroy,\n  Input,\n  HostBinding,\n} from '@angular/core';\nimport { timer, Subscription, Subject } from 'rxjs';\n\n// TODO: move to files\nexport interface NgcElementChange {\n  domRect: DOMRect;\n  element: AngularCollisionDirective;\n}\n\n// TODO: move to files\nexport interface NgcCollisionChange {\n  id: number;\n  active: boolean;\n  collidedElements: AngularCollisionDirective[];\n}\n\n@Directive({\n  selector: '[ngcAngularCollision]',\n  exportAs: 'ngcAngularCollision',\n})\nexport class AngularCollisionDirective\n  implements AfterContentChecked, OnDestroy {\n  @Input() public disableInterval: boolean; // TODO add to config\n  @Input() public intervalTime: number = 100; // TODO add to config\n  @Input() public customEvents: string[];\n\n  @Output() public rectangleChange: EventEmitter = new EventEmitter();\n  @Output() public collisionActiveChange: EventEmitter = new EventEmitter();\n\n  @HostBinding('class.collision') public collisionActive: boolean;\n\n  public rectangleChange$: Subject = new Subject();\n  public destroy$: Subject = new Subject();\n  public id: number;\n\n  private timerSubscription: Subscription;\n  private active: boolean = false;\n  private static uid: number = 0;\n\n  constructor(public element: ElementRef) {\n    this.id = AngularCollisionDirective.uid++;\n  }\n\n  public ngAfterContentChecked(): void {\n    if (this.active) {\n      this.checkPosition();\n    }\n  }\n\n  public ngOnDestroy(): void {\n    this.unsubscribe();\n    this.destroy$.next(this.id);\n  }\n\n  /**\n   * Update collision status\n   *\n   * @param active\n   * @param collidedIds\n   */\n  public updateCollisionState(\n    active: boolean,\n    collidedElements: AngularCollisionDirective[]\n  ): void {\n    this.collisionActive = active;\n    this.collisionActiveChange.emit({ id: this.id, active, collidedElements });\n  }\n\n  /**\n   * Check and emit element position\n   */\n  public checkPosition(): void {\n    const domRect: DOMRect = this.element.nativeElement.getBoundingClientRect();\n\n    this.rectangleChange$.next({ domRect, element: this });\n    this.rectangleChange.emit({ domRect, element: this });\n  }\n\n  /**\n   * Start tracking element\n   */\n  public startTracking(): void {\n    this.active = true;\n\n    if (!this.disableInterval) {\n      this.timerSubscription = timer(0, this.intervalTime).subscribe(() => {\n        this.checkPosition();\n      });\n    }\n  }\n\n  /**\n   * Stop tracking element\n   */\n  public stopTracking(): void {\n    this.active = false;\n    this.updateCollisionState(false, []);\n    this.unsubscribe();\n  }\n\n  /**\n   * Unsubscribe timer observable\n   */\n  public unsubscribe(): void {\n    if (this.timerSubscription && !this.timerSubscription.closed) {\n      this.timerSubscription.unsubscribe();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AngularCollisionModule.html":{"url":"modules/AngularCollisionModule.html","title":"module - AngularCollisionModule","body":"\n                   \n\n\n\n\n    Modules\n    AngularCollisionModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AngularCollisionModule\n\n\n\ncluster_AngularCollisionModule_exports\n\n\n\ncluster_AngularCollisionModule_declarations\n\n\n\n\nAngularCollisionDirective\n\nAngularCollisionDirective\n\n\n\nAngularCollisionModule\n\nAngularCollisionModule\n\nAngularCollisionModule -->\n\nAngularCollisionDirective->AngularCollisionModule\n\n\n\n\n\nAngularCollisionDirective \n\nAngularCollisionDirective \n\nAngularCollisionDirective  -->\n\nAngularCollisionModule->AngularCollisionDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/angular-collision/src/lib/angular-collision.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AngularCollisionDirective\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AngularCollisionDirective\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(config: NgcConfig)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.module.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                NgcConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { AngularCollisionDirective } from './angular-collision.directive';\nimport { NgcConfig } from './angular-collision.service';\n\n@NgModule({\n  declarations: [AngularCollisionDirective],\n  exports: [AngularCollisionDirective],\n})\nexport class AngularCollisionModule {\n  static forRoot(\n    config: NgcConfig\n  ): ModuleWithProviders {\n    return {\n      ngModule: AngularCollisionModule,\n      providers: [{ provide: NgcConfig, useValue: config }],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AngularCollisionService.html":{"url":"injectables/AngularCollisionService.html","title":"injectable - AngularCollisionService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AngularCollisionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-collision/src/lib/angular-collision.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                trackedElements\n                            \n                            \n                                    Public\n                                trackedElementsPositions\n                            \n                            \n                                    Public\n                                trackedElementsPositions$\n                            \n                            \n                                    Public\n                                trackedElementsPositionSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addTrackedElement\n                            \n                            \n                                    Private\n                                checkElementsCollision\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                register\n                            \n                            \n                                    Public\n                                remove\n                            \n                            \n                                    Private\n                                removeTrackedElement\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config?: NgcConfig)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-collision/src/lib/angular-collision.service.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        NgcConfig\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            addTrackedElement\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addTrackedElement(element: AngularCollisionDirective)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.service.ts:137\n                \n            \n\n\n            \n                \n                    Init tracking of element\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    element\n                                    \n                                            AngularCollisionDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            checkElementsCollision\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkElementsCollision(first: DOMRect, second: DOMRect)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.service.ts:121\n                \n            \n\n\n            \n                \n                    Checks collisions between two elements\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    first\n                                    \n                                            DOMRect\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    second\n                                    \n                                            DOMRect\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            register\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    register(elements: QueryList | AngularCollisionDirective | AngularCollisionDirective[])\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.service.ts:80\n                \n            \n\n\n            \n                \n                    Start tracking element / elements\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    elements\n                                    \n                                            QueryList | AngularCollisionDirective | AngularCollisionDirective[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(elements: QueryList | AngularCollisionDirective | AngularCollisionDirective[])\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.service.ts:100\n                \n            \n\n\n            \n                \n                    Stop tracking element / elements\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    elements\n                                    \n                                            QueryList | AngularCollisionDirective | AngularCollisionDirective[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            removeTrackedElement\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeTrackedElement(element: AngularCollisionDirective)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.service.ts:155\n                \n            \n\n\n            \n                \n                    Finish tracking of element\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    element\n                                    \n                                            AngularCollisionDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            trackedElements\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgcTrackedElement[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.service.ts:23\n                            \n                        \n\n                \n                    \n                        Tracked elements ids\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            trackedElementsPositions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Map\n\n                        \n                    \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.service.ts:28\n                            \n                        \n\n                \n                    \n                        Map of tracked elements positions\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            trackedElementsPositions$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Subject>\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.service.ts:33\n                            \n                        \n\n                \n                    \n                        Observable wrapper of tracked elements positions\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            trackedElementsPositionSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.service.ts:37\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, OnDestroy, Optional, QueryList } from '@angular/core';\nimport { takeUntil, throttleTime } from 'rxjs/operators';\nimport { Subject, Subscription } from 'rxjs';\nimport {\n  AngularCollisionDirective,\n  NgcElementChange,\n} from './angular-collision.directive';\n\nexport class NgcConfig {}\n\nexport interface NgcTrackedElement {\n  id: number;\n  subscription: Subscription;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AngularCollisionService implements OnDestroy {\n  /**\n   *  Tracked elements ids\n   */\n  public trackedElements: NgcTrackedElement[] = [];\n\n  /**\n   *  Map of tracked elements positions\n   */\n  public trackedElementsPositions: Map = new Map();\n\n  /**\n   *  Observable wrapper of tracked elements positions\n   */\n  public trackedElementsPositions$: Subject\n  > = new Subject();\n\n  public trackedElementsPositionSubscription: Subscription;\n\n  constructor(@Optional() config?: NgcConfig) {\n    this.trackedElementsPositionSubscription = this.trackedElementsPositions$\n      .pipe(throttleTime(100))\n      .subscribe((elementsMap: Map) => {\n        // TODO work on performance\n        elementsMap.forEach((element: NgcElementChange, id: number) => {\n          const collisions: AngularCollisionDirective[] = [];\n\n          elementsMap.forEach(\n            (innerElement: NgcElementChange, innerId: number) => {\n              if (\n                id !== innerId &&\n                this.checkElementsCollision(\n                  element.domRect,\n                  innerElement.domRect\n                )\n              ) {\n                collisions.push(innerElement.element);\n              }\n            }\n          );\n\n          element.element.updateCollisionState(\n            collisions.length > 0,\n            collisions\n          );\n        });\n      });\n  }\n\n  public ngOnDestroy(): void {\n    if (!this.trackedElementsPositionSubscription.closed) {\n      this.trackedElementsPositionSubscription.unsubscribe();\n    }\n  }\n\n  /**\n   * Start tracking element / elements\n   *\n   * @param elements\n   */\n  public register(\n    elements:\n      | QueryList\n      | AngularCollisionDirective\n      | AngularCollisionDirective[]\n  ): void {\n    if (Array.isArray(elements) || elements instanceof QueryList) {\n      elements.forEach((element) => {\n        this.addTrackedElement(element);\n      });\n    } else {\n      this.addTrackedElement(elements);\n    }\n  }\n\n  /**\n   * Stop tracking element / elements\n   *\n   * @param elements\n   */\n  public remove(\n    elements:\n      | QueryList\n      | AngularCollisionDirective\n      | AngularCollisionDirective[]\n  ): void {\n    if (Array.isArray(elements) || elements instanceof QueryList) {\n      elements.forEach((element) => {\n        this.removeTrackedElement(element);\n      });\n    } else {\n      this.removeTrackedElement(elements);\n    }\n  }\n\n  /**\n   * Checks collisions between two elements\n   *\n   * @param first\n   * @param second\n   */\n  private checkElementsCollision(first: DOMRect, second: DOMRect): boolean {\n    return (\n      ((first.top = second.top) ||\n        (first.bottom = second.top) ||\n        (first.top = second.bottom)) &&\n      ((first.left >= second.left && first.left = second.left) ||\n        (first.left = second.right))\n    );\n  }\n\n  /**\n   * Init tracking of element\n   *\n   * @param element\n   */\n  private addTrackedElement(element: AngularCollisionDirective): void {\n    if (!this.trackedElements.some((el) => el.id == element.id)) {\n      element.startTracking();\n      const subscription = element.rectangleChange$\n        .pipe(takeUntil(element.destroy$))\n        .subscribe((change: NgcElementChange) => {\n          this.trackedElementsPositions.set(change.element.id, change);\n          this.trackedElementsPositions$.next(this.trackedElementsPositions);\n        });\n      this.trackedElements.push({ id: element.id, subscription });\n    }\n  }\n\n  /**\n   * Finish tracking of element\n   *\n   * @param element\n   */\n  private removeTrackedElement(element: AngularCollisionDirective): void {\n    element.stopTracking();\n\n    this.trackedElementsPositions.delete(element.id);\n    this.trackedElementsPositions$.next(this.trackedElementsPositions);\n\n    const foundElement = this.trackedElements.find(\n      (trackedElement) => trackedElement.id === element.id\n    );\n\n    if (foundElement?.subscription && !foundElement.subscription.closed) {\n      foundElement.subscription.unsubscribe();\n    }\n\n    this.trackedElements = this.trackedElements.filter(\n      (trackedElement) => trackedElement.id !== element.id\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgcCollisionChange.html":{"url":"interfaces/NgcCollisionChange.html","title":"interface - NgcCollisionChange","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgcCollisionChange\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-collision/src/lib/angular-collision.directive.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        active\n                                \n                                \n                                        collidedElements\n                                \n                                \n                                        id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        active\n                                    \n                                \n                                \n                                    \n                                        active:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        collidedElements\n                                    \n                                \n                                \n                                    \n                                        collidedElements:     AngularCollisionDirective[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     AngularCollisionDirective[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Directive,\n  AfterContentChecked,\n  ElementRef,\n  Output,\n  EventEmitter,\n  OnDestroy,\n  Input,\n  HostBinding,\n} from '@angular/core';\nimport { timer, Subscription, Subject } from 'rxjs';\n\n// TODO: move to files\nexport interface NgcElementChange {\n  domRect: DOMRect;\n  element: AngularCollisionDirective;\n}\n\n// TODO: move to files\nexport interface NgcCollisionChange {\n  id: number;\n  active: boolean;\n  collidedElements: AngularCollisionDirective[];\n}\n\n@Directive({\n  selector: '[ngcAngularCollision]',\n  exportAs: 'ngcAngularCollision',\n})\nexport class AngularCollisionDirective\n  implements AfterContentChecked, OnDestroy {\n  @Input() public disableInterval: boolean; // TODO add to config\n  @Input() public intervalTime: number = 100; // TODO add to config\n  @Input() public customEvents: string[];\n\n  @Output() public rectangleChange: EventEmitter = new EventEmitter();\n  @Output() public collisionActiveChange: EventEmitter = new EventEmitter();\n\n  @HostBinding('class.collision') public collisionActive: boolean;\n\n  public rectangleChange$: Subject = new Subject();\n  public destroy$: Subject = new Subject();\n  public id: number;\n\n  private timerSubscription: Subscription;\n  private active: boolean = false;\n  private static uid: number = 0;\n\n  constructor(public element: ElementRef) {\n    this.id = AngularCollisionDirective.uid++;\n  }\n\n  public ngAfterContentChecked(): void {\n    if (this.active) {\n      this.checkPosition();\n    }\n  }\n\n  public ngOnDestroy(): void {\n    this.unsubscribe();\n    this.destroy$.next(this.id);\n  }\n\n  /**\n   * Update collision status\n   *\n   * @param active\n   * @param collidedIds\n   */\n  public updateCollisionState(\n    active: boolean,\n    collidedElements: AngularCollisionDirective[]\n  ): void {\n    this.collisionActive = active;\n    this.collisionActiveChange.emit({ id: this.id, active, collidedElements });\n  }\n\n  /**\n   * Check and emit element position\n   */\n  public checkPosition(): void {\n    const domRect: DOMRect = this.element.nativeElement.getBoundingClientRect();\n\n    this.rectangleChange$.next({ domRect, element: this });\n    this.rectangleChange.emit({ domRect, element: this });\n  }\n\n  /**\n   * Start tracking element\n   */\n  public startTracking(): void {\n    this.active = true;\n\n    if (!this.disableInterval) {\n      this.timerSubscription = timer(0, this.intervalTime).subscribe(() => {\n        this.checkPosition();\n      });\n    }\n  }\n\n  /**\n   * Stop tracking element\n   */\n  public stopTracking(): void {\n    this.active = false;\n    this.updateCollisionState(false, []);\n    this.unsubscribe();\n  }\n\n  /**\n   * Unsubscribe timer observable\n   */\n  public unsubscribe(): void {\n    if (this.timerSubscription && !this.timerSubscription.closed) {\n      this.timerSubscription.unsubscribe();\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NgcConfig.html":{"url":"classes/NgcConfig.html","title":"class - NgcConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NgcConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-collision/src/lib/angular-collision.service.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable, OnDestroy, Optional, QueryList } from '@angular/core';\nimport { takeUntil, throttleTime } from 'rxjs/operators';\nimport { Subject, Subscription } from 'rxjs';\nimport {\n  AngularCollisionDirective,\n  NgcElementChange,\n} from './angular-collision.directive';\n\nexport class NgcConfig {}\n\nexport interface NgcTrackedElement {\n  id: number;\n  subscription: Subscription;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AngularCollisionService implements OnDestroy {\n  /**\n   *  Tracked elements ids\n   */\n  public trackedElements: NgcTrackedElement[] = [];\n\n  /**\n   *  Map of tracked elements positions\n   */\n  public trackedElementsPositions: Map = new Map();\n\n  /**\n   *  Observable wrapper of tracked elements positions\n   */\n  public trackedElementsPositions$: Subject\n  > = new Subject();\n\n  public trackedElementsPositionSubscription: Subscription;\n\n  constructor(@Optional() config?: NgcConfig) {\n    this.trackedElementsPositionSubscription = this.trackedElementsPositions$\n      .pipe(throttleTime(100))\n      .subscribe((elementsMap: Map) => {\n        // TODO work on performance\n        elementsMap.forEach((element: NgcElementChange, id: number) => {\n          const collisions: AngularCollisionDirective[] = [];\n\n          elementsMap.forEach(\n            (innerElement: NgcElementChange, innerId: number) => {\n              if (\n                id !== innerId &&\n                this.checkElementsCollision(\n                  element.domRect,\n                  innerElement.domRect\n                )\n              ) {\n                collisions.push(innerElement.element);\n              }\n            }\n          );\n\n          element.element.updateCollisionState(\n            collisions.length > 0,\n            collisions\n          );\n        });\n      });\n  }\n\n  public ngOnDestroy(): void {\n    if (!this.trackedElementsPositionSubscription.closed) {\n      this.trackedElementsPositionSubscription.unsubscribe();\n    }\n  }\n\n  /**\n   * Start tracking element / elements\n   *\n   * @param elements\n   */\n  public register(\n    elements:\n      | QueryList\n      | AngularCollisionDirective\n      | AngularCollisionDirective[]\n  ): void {\n    if (Array.isArray(elements) || elements instanceof QueryList) {\n      elements.forEach((element) => {\n        this.addTrackedElement(element);\n      });\n    } else {\n      this.addTrackedElement(elements);\n    }\n  }\n\n  /**\n   * Stop tracking element / elements\n   *\n   * @param elements\n   */\n  public remove(\n    elements:\n      | QueryList\n      | AngularCollisionDirective\n      | AngularCollisionDirective[]\n  ): void {\n    if (Array.isArray(elements) || elements instanceof QueryList) {\n      elements.forEach((element) => {\n        this.removeTrackedElement(element);\n      });\n    } else {\n      this.removeTrackedElement(elements);\n    }\n  }\n\n  /**\n   * Checks collisions between two elements\n   *\n   * @param first\n   * @param second\n   */\n  private checkElementsCollision(first: DOMRect, second: DOMRect): boolean {\n    return (\n      ((first.top = second.top) ||\n        (first.bottom = second.top) ||\n        (first.top = second.bottom)) &&\n      ((first.left >= second.left && first.left = second.left) ||\n        (first.left = second.right))\n    );\n  }\n\n  /**\n   * Init tracking of element\n   *\n   * @param element\n   */\n  private addTrackedElement(element: AngularCollisionDirective): void {\n    if (!this.trackedElements.some((el) => el.id == element.id)) {\n      element.startTracking();\n      const subscription = element.rectangleChange$\n        .pipe(takeUntil(element.destroy$))\n        .subscribe((change: NgcElementChange) => {\n          this.trackedElementsPositions.set(change.element.id, change);\n          this.trackedElementsPositions$.next(this.trackedElementsPositions);\n        });\n      this.trackedElements.push({ id: element.id, subscription });\n    }\n  }\n\n  /**\n   * Finish tracking of element\n   *\n   * @param element\n   */\n  private removeTrackedElement(element: AngularCollisionDirective): void {\n    element.stopTracking();\n\n    this.trackedElementsPositions.delete(element.id);\n    this.trackedElementsPositions$.next(this.trackedElementsPositions);\n\n    const foundElement = this.trackedElements.find(\n      (trackedElement) => trackedElement.id === element.id\n    );\n\n    if (foundElement?.subscription && !foundElement.subscription.closed) {\n      foundElement.subscription.unsubscribe();\n    }\n\n    this.trackedElements = this.trackedElements.filter(\n      (trackedElement) => trackedElement.id !== element.id\n    );\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgcElementChange.html":{"url":"interfaces/NgcElementChange.html","title":"interface - NgcElementChange","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgcElementChange\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-collision/src/lib/angular-collision.directive.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        domRect\n                                \n                                \n                                        element\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        domRect\n                                    \n                                \n                                \n                                    \n                                        domRect:     DOMRect\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DOMRect\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        element\n                                    \n                                \n                                \n                                    \n                                        element:     AngularCollisionDirective\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     AngularCollisionDirective\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Directive,\n  AfterContentChecked,\n  ElementRef,\n  Output,\n  EventEmitter,\n  OnDestroy,\n  Input,\n  HostBinding,\n} from '@angular/core';\nimport { timer, Subscription, Subject } from 'rxjs';\n\n// TODO: move to files\nexport interface NgcElementChange {\n  domRect: DOMRect;\n  element: AngularCollisionDirective;\n}\n\n// TODO: move to files\nexport interface NgcCollisionChange {\n  id: number;\n  active: boolean;\n  collidedElements: AngularCollisionDirective[];\n}\n\n@Directive({\n  selector: '[ngcAngularCollision]',\n  exportAs: 'ngcAngularCollision',\n})\nexport class AngularCollisionDirective\n  implements AfterContentChecked, OnDestroy {\n  @Input() public disableInterval: boolean; // TODO add to config\n  @Input() public intervalTime: number = 100; // TODO add to config\n  @Input() public customEvents: string[];\n\n  @Output() public rectangleChange: EventEmitter = new EventEmitter();\n  @Output() public collisionActiveChange: EventEmitter = new EventEmitter();\n\n  @HostBinding('class.collision') public collisionActive: boolean;\n\n  public rectangleChange$: Subject = new Subject();\n  public destroy$: Subject = new Subject();\n  public id: number;\n\n  private timerSubscription: Subscription;\n  private active: boolean = false;\n  private static uid: number = 0;\n\n  constructor(public element: ElementRef) {\n    this.id = AngularCollisionDirective.uid++;\n  }\n\n  public ngAfterContentChecked(): void {\n    if (this.active) {\n      this.checkPosition();\n    }\n  }\n\n  public ngOnDestroy(): void {\n    this.unsubscribe();\n    this.destroy$.next(this.id);\n  }\n\n  /**\n   * Update collision status\n   *\n   * @param active\n   * @param collidedIds\n   */\n  public updateCollisionState(\n    active: boolean,\n    collidedElements: AngularCollisionDirective[]\n  ): void {\n    this.collisionActive = active;\n    this.collisionActiveChange.emit({ id: this.id, active, collidedElements });\n  }\n\n  /**\n   * Check and emit element position\n   */\n  public checkPosition(): void {\n    const domRect: DOMRect = this.element.nativeElement.getBoundingClientRect();\n\n    this.rectangleChange$.next({ domRect, element: this });\n    this.rectangleChange.emit({ domRect, element: this });\n  }\n\n  /**\n   * Start tracking element\n   */\n  public startTracking(): void {\n    this.active = true;\n\n    if (!this.disableInterval) {\n      this.timerSubscription = timer(0, this.intervalTime).subscribe(() => {\n        this.checkPosition();\n      });\n    }\n  }\n\n  /**\n   * Stop tracking element\n   */\n  public stopTracking(): void {\n    this.active = false;\n    this.updateCollisionState(false, []);\n    this.unsubscribe();\n  }\n\n  /**\n   * Unsubscribe timer observable\n   */\n  public unsubscribe(): void {\n    if (this.timerSubscription && !this.timerSubscription.closed) {\n      this.timerSubscription.unsubscribe();\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgcTrackedElement.html":{"url":"interfaces/NgcTrackedElement.html","title":"interface - NgcTrackedElement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgcTrackedElement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-collision/src/lib/angular-collision.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        subscription\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subscription\n                                    \n                                \n                                \n                                    \n                                        subscription:     Subscription\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Subscription\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, OnDestroy, Optional, QueryList } from '@angular/core';\nimport { takeUntil, throttleTime } from 'rxjs/operators';\nimport { Subject, Subscription } from 'rxjs';\nimport {\n  AngularCollisionDirective,\n  NgcElementChange,\n} from './angular-collision.directive';\n\nexport class NgcConfig {}\n\nexport interface NgcTrackedElement {\n  id: number;\n  subscription: Subscription;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AngularCollisionService implements OnDestroy {\n  /**\n   *  Tracked elements ids\n   */\n  public trackedElements: NgcTrackedElement[] = [];\n\n  /**\n   *  Map of tracked elements positions\n   */\n  public trackedElementsPositions: Map = new Map();\n\n  /**\n   *  Observable wrapper of tracked elements positions\n   */\n  public trackedElementsPositions$: Subject\n  > = new Subject();\n\n  public trackedElementsPositionSubscription: Subscription;\n\n  constructor(@Optional() config?: NgcConfig) {\n    this.trackedElementsPositionSubscription = this.trackedElementsPositions$\n      .pipe(throttleTime(100))\n      .subscribe((elementsMap: Map) => {\n        // TODO work on performance\n        elementsMap.forEach((element: NgcElementChange, id: number) => {\n          const collisions: AngularCollisionDirective[] = [];\n\n          elementsMap.forEach(\n            (innerElement: NgcElementChange, innerId: number) => {\n              if (\n                id !== innerId &&\n                this.checkElementsCollision(\n                  element.domRect,\n                  innerElement.domRect\n                )\n              ) {\n                collisions.push(innerElement.element);\n              }\n            }\n          );\n\n          element.element.updateCollisionState(\n            collisions.length > 0,\n            collisions\n          );\n        });\n      });\n  }\n\n  public ngOnDestroy(): void {\n    if (!this.trackedElementsPositionSubscription.closed) {\n      this.trackedElementsPositionSubscription.unsubscribe();\n    }\n  }\n\n  /**\n   * Start tracking element / elements\n   *\n   * @param elements\n   */\n  public register(\n    elements:\n      | QueryList\n      | AngularCollisionDirective\n      | AngularCollisionDirective[]\n  ): void {\n    if (Array.isArray(elements) || elements instanceof QueryList) {\n      elements.forEach((element) => {\n        this.addTrackedElement(element);\n      });\n    } else {\n      this.addTrackedElement(elements);\n    }\n  }\n\n  /**\n   * Stop tracking element / elements\n   *\n   * @param elements\n   */\n  public remove(\n    elements:\n      | QueryList\n      | AngularCollisionDirective\n      | AngularCollisionDirective[]\n  ): void {\n    if (Array.isArray(elements) || elements instanceof QueryList) {\n      elements.forEach((element) => {\n        this.removeTrackedElement(element);\n      });\n    } else {\n      this.removeTrackedElement(elements);\n    }\n  }\n\n  /**\n   * Checks collisions between two elements\n   *\n   * @param first\n   * @param second\n   */\n  private checkElementsCollision(first: DOMRect, second: DOMRect): boolean {\n    return (\n      ((first.top = second.top) ||\n        (first.bottom = second.top) ||\n        (first.top = second.bottom)) &&\n      ((first.left >= second.left && first.left = second.left) ||\n        (first.left = second.right))\n    );\n  }\n\n  /**\n   * Init tracking of element\n   *\n   * @param element\n   */\n  private addTrackedElement(element: AngularCollisionDirective): void {\n    if (!this.trackedElements.some((el) => el.id == element.id)) {\n      element.startTracking();\n      const subscription = element.rectangleChange$\n        .pipe(takeUntil(element.destroy$))\n        .subscribe((change: NgcElementChange) => {\n          this.trackedElementsPositions.set(change.element.id, change);\n          this.trackedElementsPositions$.next(this.trackedElementsPositions);\n        });\n      this.trackedElements.push({ id: element.id, subscription });\n    }\n  }\n\n  /**\n   * Finish tracking of element\n   *\n   * @param element\n   */\n  private removeTrackedElement(element: AngularCollisionDirective): void {\n    element.stopTracking();\n\n    this.trackedElementsPositions.delete(element.id);\n    this.trackedElementsPositions$.next(this.trackedElementsPositions);\n\n    const foundElement = this.trackedElements.find(\n      (trackedElement) => trackedElement.id === element.id\n    );\n\n    if (foundElement?.subscription && !foundElement.subscription.closed) {\n      foundElement.subscription.unsubscribe();\n    }\n\n    this.trackedElements = this.trackedElements.filter(\n      (trackedElement) => trackedElement.id !== element.id\n    );\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/angular-collision/src/lib/angular-collision.directive.ts\n            \n            directive\n            AngularCollisionDirective\n            \n                22 %\n                (5/22)\n            \n        \n        \n            \n                \n                projects/angular-collision/src/lib/angular-collision.directive.ts\n            \n            interface\n            NgcCollisionChange\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/angular-collision/src/lib/angular-collision.directive.ts\n            \n            interface\n            NgcElementChange\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/angular-collision/src/lib/angular-collision.service.ts\n            \n            class\n            NgcConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular-collision/src/lib/angular-collision.service.ts\n            \n            injectable\n            AngularCollisionService\n            \n                66 %\n                (8/12)\n            \n        \n        \n            \n                \n                projects/angular-collision/src/lib/angular-collision.service.ts\n            \n            interface\n            NgcTrackedElement\n            \n                0 %\n                (0/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~10.1.5\n        \n            @angular/common : ~10.1.5\n        \n            @angular/compiler : ~10.1.5\n        \n            @angular/core : ~10.1.5\n        \n            @angular/forms : ~10.1.5\n        \n            @angular/platform-browser : ~10.1.5\n        \n            @angular/platform-browser-dynamic : ~10.1.5\n        \n            @angular/router : ~10.1.5\n        \n            @angular/cdk : ^10.2.4\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNgCollision\nAngular 10 library for elements collision detection\nThis project was generated with Angular CLI version 10.1.6.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AngularCollisionModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AngularCollisionModule\n\n\n\ncluster_AngularCollisionModule_declarations\n\n\n\ncluster_AngularCollisionModule_exports\n\n\n\n\nAngularCollisionDirective\n\nAngularCollisionDirective\n\n\n\nAngularCollisionModule\n\nAngularCollisionModule\n\nAngularCollisionModule -->\n\nAngularCollisionDirective->AngularCollisionModule\n\n\n\n\n\nAngularCollisionDirective \n\nAngularCollisionDirective \n\nAngularCollisionDirective  -->\n\nAngularCollisionModule->AngularCollisionDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
