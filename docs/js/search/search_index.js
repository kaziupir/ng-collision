var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/directives/AngularCollisionDirective.html",[0,0.716,1,0.439]],["body/directives/AngularCollisionDirective.html",[0,0.835,1,0.635,2,1.104,3,0.456,4,0.281,5,0.217,6,0.826,7,1.347,8,0.542,9,0.88,10,1.374,11,1.374,12,1.111,13,1.104,14,1.088,15,1.374,16,0.281,17,0.575,18,1.934,19,1.374,20,1.374,21,1.374,22,1.374,23,1.111,24,1.374,25,1.754,26,1.795,27,1.738,28,1.568,29,1.286,30,1.862,31,1.088,32,1.581,33,1.581,34,1.791,35,1.278,36,1.581,37,1.581,38,1.862,39,1.374,40,1.791,41,1.111,42,1.111,43,1.791,44,1.374,45,1.791,46,1.791,47,0.671,48,1.104,49,1.738,50,1.036,51,0.663,52,2.051,53,1.791,54,1.111,55,0.084,56,1.111,57,0.79,58,0.918,59,1.104,60,1.531,61,1.104,62,0.88,63,1.278,64,1.652,65,1.278,66,1.115,67,1.738,68,1.738,69,0.714,70,1.104,71,0.88,72,1.961,73,1.104,74,2.043,75,1.585,76,1.104,77,1.104,78,1.104,79,1.088,80,1.088,81,2.043,82,1.934,83,1.104,84,1.088,85,1.581,86,1.104,87,1.104,88,1.104,89,0.88,90,1.278,91,1.104,92,0.88,93,1.104,94,1.374,95,1.22,96,1.104,97,1.738,98,1.104,99,1.088,100,1.088,101,1.961,102,1.111,103,1.104,104,1.104,105,1.104,106,0.901,107,1.104,108,0.88,109,1.104,110,1.374,111,1.707,112,1.22,113,1.104,114,1.088,115,1.581,116,1.104,117,1.104,118,1.088,119,1.104,120,1.088,121,1.738,122,0.726,123,1.374,124,0.671,125,0.354,126,0.354,127,0.44,128,0.542,129,1.088,130,0.671,131,0.671,132,1.585,133,0.671,134,0.576,135,0.352,136,0.354,137,0.542,138,0.44,139,0.671,140,0.16,141,0.671,142,0.671,143,0.671,144,1.088,145,0.671,146,1.088,147,0.671,148,1.374,149,0.671,150,0.671,151,0.671,152,0.671,153,0.671,154,1.374,155,1.088,156,1.088,157,0.671,158,0.88,159,0.671,160,0.671,161,0.671,162,0.671,163,0.542,164,0.671,165,0.671,166,0.671,167,1.088,168,0.671,169,0.671,170,0.671,171,0.671,172,0.671,173,0.02,174,0.033,175,0.02]],["title/modules/AngularCollisionModule.html",[176,1.095,177,1.095]],["body/modules/AngularCollisionModule.html",[1,0.88,3,0.693,4,0.693,5,0.535,6,0.681,7,1.11,23,1.7,31,1.653,50,1.515,51,1.053,52,1.336,54,1.336,55,0.083,56,1.336,57,0.535,58,0.873,81,1.653,122,1.221,125,0.873,127,1.084,128,1.336,134,0.693,140,0.395,173,0.049,174,0.063,175,0.049,176,1.336,177,2.135,178,1.653,179,1.336,180,2.077,181,2.904,182,2.077,183,2.641,184,2.904,185,2.077,186,2.077,187,2.077,188,2.641,189,2.077,190,2.077,191,2.72,192,3.459,193,2.72,194,2.72,195,3.804,196,3.804,197,1.653,198,2.077,199,2.077,200,2.72,201,2.72]],["title/injectables/AngularCollisionService.html",[202,1.095,203,1.355]],["body/injectables/AngularCollisionService.html",[1,0.824,3,0.327,4,0.327,5,0.253,6,0.763,7,1.245,9,0.631,12,0.994,16,0.327,17,0.649,18,1.796,25,1.677,28,1.545,29,0.996,31,1.229,35,1.394,47,1.52,52,1.874,54,1.516,55,0.085,56,1.516,57,0.719,58,0.991,60,0.806,66,0.649,67,1.52,68,1.52,81,1.992,82,1.838,89,0.994,90,1.745,92,0.994,95,0.806,106,1.229,108,0.631,111,1.516,112,1.13,122,0.991,125,0.412,126,0.412,127,0.512,132,1.61,134,0.327,136,0.911,137,1.394,140,0.187,158,1.61,163,1.229,173,0.023,174,0.037,175,0.023,197,0.781,198,0.981,199,0.981,202,0.994,203,1.229,204,1.285,205,0.981,206,2.502,207,3.277,208,2.502,209,2.023,210,2.023,211,2.502,212,2.502,213,2.023,214,2.023,215,2.023,216,1.285,217,2.023,218,2.023,219,2.837,220,1.285,221,2.023,222,2.023,223,2.023,224,3.196,225,2.023,226,1.285,227,1.285,228,3.655,229,1.285,230,1.285,231,1.285,232,2.023,233,1.285,234,2.023,235,1.229,236,1.285,237,2.084,238,3.429,239,1.285,240,2.837,241,1.285,242,2.023,243,1.285,244,1.285,245,1.285,246,1.285,247,1.285,248,1.285,249,1.285,250,1.285,251,1.285,252,1.285,253,1.285,254,1.285,255,1.285,256,1.285,257,1.285,258,1.285,259,2.023,260,1.285,261,1.285,262,1.285,263,1.285,264,1.285,265,1.285,266,1.285,267,1.285,268,2.023,269,2.023,270,2.023,271,1.285,272,1.285,273,1.285,274,1.285,275,2.023,276,2.023,277,1.285,278,1.285,279,2.502,280,2.023,281,1.285,282,1.285,283,1.285,284,2.837,285,1.285,286,1.285,287,1.285,288,1.285,289,1.285,290,1.285,291,2.023,292,1.285,293,1.285,294,1.285,295,1.285,296,1.285,297,2.023,298,2.023,299,1.285,300,1.285,301,1.285,302,1.285,303,1.285]],["title/interfaces/NgcCollisionChange.html",[135,0.439,138,0.888]],["body/interfaces/NgcCollisionChange.html",[0,0.927,1,0.707,3,0.736,4,0.413,5,0.319,6,0.319,7,0.52,8,0.796,9,0.796,10,1.468,11,1.468,12,1.187,14,0.984,15,1.468,16,0.413,17,0.775,18,1.765,19,0.984,20,0.984,21,0.984,22,0.984,23,0.796,24,0.984,25,1.688,26,1.683,27,1.468,28,1.558,29,1.483,30,1.468,32,0.984,33,0.984,35,0.796,36,0.984,37,0.984,38,1.468,39,0.984,41,0.796,42,0.796,44,0.984,49,1.468,50,0.962,51,0.615,55,0.085,57,0.568,58,0.775,60,1.558,62,0.796,63,1.187,64,1.573,65,1.187,66,1.195,69,0.645,71,0.796,72,2.082,74,2.183,75,1.419,79,0.984,80,0.984,82,1.88,84,0.984,85,1.468,89,0.796,90,1.187,92,0.796,94,1.468,95,1.151,97,2.183,99,0.984,100,0.984,101,2.376,102,1.187,106,0.962,108,0.796,110,1.468,111,1.683,112,1.276,114,0.984,115,1.468,118,0.984,120,0.984,121,1.946,122,0.927,123,1.755,124,0.984,125,0.52,126,0.52,127,0.645,128,0.796,129,1.755,130,0.984,131,0.984,132,1.829,133,0.984,134,0.736,135,0.475,136,0.52,137,1.187,138,0.962,139,0.984,140,0.235,141,0.984,142,0.984,143,0.984,144,1.468,145,0.984,146,1.468,147,0.984,148,1.755,149,0.984,150,0.984,151,0.984,152,0.984,153,0.984,154,1.755,155,1.468,156,1.468,157,0.984,158,1.187,159,0.984,160,0.984,161,0.984,162,0.984,163,0.796,164,0.984,165,0.984,166,0.984,167,1.468,168,0.984,169,0.984,170,0.984,171,0.984,172,0.984,173,0.029,174,0.044,175,0.029,304,0.796,305,0.796]],["title/classes/NgcConfig.html",[51,0.568,140,0.324]],["body/classes/NgcConfig.html",[3,0.701,4,0.701,5,0.541,6,0.791,16,0.701,17,1.118,25,1.688,41,1.975,42,2.038,47,2.117,50,1.096,51,0.888,52,1.879,54,1.351,55,0.083,56,1.351,57,0.752,58,1.118,60,1.601,62,1.712,63,1.975,64,1.975,65,1.975,66,1.29,67,2.117,68,2.117,69,1.388,71,1.712,102,1.712,134,0.701,140,0.4,173,0.05,174,0.063,175,0.05,176,1.351,305,1.351,306,2.751,307,2.443,308,2.1,309,2.751,310,2.751,311,2.751,312,2.751]],["title/interfaces/NgcElementChange.html",[135,0.439,136,0.716]],["body/interfaces/NgcElementChange.html",[0,0.93,1,0.708,3,0.618,4,0.415,5,0.32,6,0.32,7,0.523,8,0.8,9,0.8,10,1.474,11,1.474,12,1.191,14,0.989,15,1.474,16,0.415,17,0.778,18,1.769,19,0.989,20,0.989,21,0.989,22,0.989,23,0.8,24,0.989,25,1.69,26,1.687,27,1.474,28,1.649,29,1.279,30,1.474,32,0.989,33,0.989,35,0.8,36,0.989,37,0.989,38,1.474,39,0.989,41,0.8,42,0.8,44,0.989,49,1.474,50,0.966,51,0.618,55,0.085,57,0.477,58,0.778,60,1.485,62,0.8,63,1.191,64,1.578,65,1.191,66,1.102,69,0.649,71,0.8,72,2.086,74,2.188,75,1.424,79,0.989,80,0.989,82,1.883,84,0.989,85,1.474,89,0.8,90,1.191,92,0.8,94,1.474,95,1.154,97,1.761,99,0.989,100,0.989,101,2.188,102,1.191,106,0.966,108,0.8,110,1.474,111,1.687,112,1.279,114,0.989,115,1.474,118,0.989,120,0.989,121,1.951,122,0.93,123,1.761,124,0.989,125,0.523,126,0.523,127,0.649,128,0.8,129,1.761,130,1.474,131,1.474,132,2.034,133,1.474,134,0.738,135,0.477,136,0.778,137,0.8,138,0.649,139,0.989,140,0.236,141,0.989,142,0.989,143,0.989,144,1.474,145,0.989,146,1.474,147,0.989,148,1.761,149,0.989,150,0.989,151,0.989,152,0.989,153,0.989,154,1.761,155,1.474,156,1.474,157,0.989,158,1.191,159,0.989,160,0.989,161,0.989,162,0.989,163,0.8,164,0.989,165,0.989,166,0.989,167,1.474,168,0.989,169,0.989,170,0.989,171,0.989,172,0.989,173,0.03,174,0.044,175,0.03,304,0.8,305,0.8]],["title/interfaces/NgcTrackedElement.html",[135,0.439,235,1.095]],["body/interfaces/NgcTrackedElement.html",[3,0.757,4,0.757,5,0.585,6,0.585,16,0.757,17,1.174,28,1.721,29,1.721,55,0.083,57,0.72,66,1.272,75,1.797,95,1.457,106,1.786,122,0.954,126,0.954,134,0.757,135,0.585,173,0.054,174,0.066,175,0.054,235,1.797,237,2.407,304,1.461,305,1.461,307,1.807,313,2.27,314,2.792,315,3.658]],["title/coverage.html",[316,2.317]],["body/coverage.html",[0,0.983,1,0.603,5,0.603,6,0.856,7,1.34,8,1.972,51,0.78,55,0.081,57,0.603,69,1.22,112,1.22,135,0.79,136,0.983,138,1.22,140,0.445,173,0.056,174,0.068,175,0.056,202,1.505,203,1.862,205,2.339,235,1.505,237,1.862,307,2.264,308,2.339,313,2.339,316,2.339,317,2.339,318,3.064,319,3.064,320,3.064,321,3.064,322,3.064,323,3.064,324,3.064,325,3.064,326,3.064,327,3.064,328,3.064,329,3.064,330,3.064,331,3.064,332,3.064]],["title/dependencies.html",[179,1.316,333,1.866]],["body/dependencies.html",[55,0.083,125,1.03,126,1.03,173,0.058,174,0.07,175,0.058,179,1.577,334,3.21,335,4.482,336,3.21,337,3.21,338,3.21,339,3.831,340,2.925,341,3.21,342,3.21,343,2.45,344,3.21,345,3.21,346,3.21,347,3.21,348,3.21,349,3.21]],["title/index.html",[16,0.475,350,1.866,351,1.866]],["body/index.html",[26,1.44,55,0.071,173,0.053,174,0.066,175,0.053,197,1.781,224,2.237,314,2.767,317,2.767,343,2.237,352,2.93,353,2.93,354,2.93,355,3.625,356,3.625,357,3.936,358,3.625,359,3.625,360,4.112,361,2.93,362,2.93,363,2.93,364,2.93,365,2.93,366,3.625,367,3.625,368,2.93,369,2.93,370,2.93,371,4.112,372,2.93,373,4.226,374,2.93,375,2.93,376,2.93,377,2.93,378,2.93,379,2.93,380,2.93,381,2.93,382,2.93,383,3.625,384,4.112,385,2.93,386,3.625,387,3.625,388,2.93,389,4.112,390,2.93,391,2.93]],["title/modules.html",[178,1.844]],["body/modules.html",[55,0.074,173,0.064,174,0.074,175,0.064,177,1.733,178,2.143,340,2.693,392,3.527,393,3.527,394,3.527]],["title/overview.html",[395,2.317]],["body/overview.html",[0,1.033,1,0.875,55,0.077,140,0.467,173,0.058,174,0.07,175,0.058,176,1.885,177,2.131,179,1.581,180,2.457,181,2.457,182,2.457,183,2.457,184,2.457,185,2.457,186,2.457,187,2.457,188,2.929,189,2.457,190,2.457,202,1.581,304,1.581,395,2.457,396,4.245,397,3.218]]],"invertedIndex":[["",{"_index":55,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["0",{"_index":108,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["0.10.2",{"_index":349,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":396,"title":{},"body":{"overview.html":{}}}],["1/3",{"_index":325,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":323,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":353,"title":{},"body":{"index.html":{}}}],["10.1.5",{"_index":335,"title":{},"body":{"dependencies.html":{}}}],["10.2.4",{"_index":344,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":69,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"coverage.html":{}}}],["13/25",{"_index":321,"title":{},"body":{"coverage.html":{}}}],["2.0.0",{"_index":347,"title":{},"body":{"dependencies.html":{}}}],["25",{"_index":322,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":397,"title":{},"body":{"overview.html":{}}}],["3/3",{"_index":330,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":329,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":324,"title":{},"body":{"coverage.html":{}}}],["52",{"_index":320,"title":{},"body":{"coverage.html":{}}}],["6.6.0",{"_index":345,"title":{},"body":{"dependencies.html":{}}}],["66",{"_index":326,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":328,"title":{},"body":{"coverage.html":{}}}],["8/12",{"_index":327,"title":{},"body":{"coverage.html":{}}}],["_active",{"_index":19,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["_disableinterval",{"_index":20,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["_intervaltime",{"_index":21,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["_timersubscription",{"_index":22,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["_uid",{"_index":24,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["active",{"_index":101,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["addtrackedelement",{"_index":209,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["addtrackedelement(element",{"_index":215,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["aftercontentchecked",{"_index":11,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["angular",{"_index":197,"title":{},"body":{"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"index.html":{}}}],["angular/animations",{"_index":334,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":343,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["angular/common",{"_index":336,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler",{"_index":337,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":125,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":338,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":339,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":342,"title":{},"body":{"dependencies.html":{}}}],["angularcollisiondirective",{"_index":1,"title":{"directives/AngularCollisionDirective.html":{}},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"coverage.html":{},"overview.html":{}}}],["angularcollisiondirective._uid",{"_index":145,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["angularcollisionmodule",{"_index":177,"title":{"modules/AngularCollisionModule.html":{}},"body":{"modules/AngularCollisionModule.html":{},"modules.html":{},"overview.html":{}}}],["angularcollisionservice",{"_index":203,"title":{"injectables/AngularCollisionService.html":{}},"body":{"injectables/AngularCollisionService.html":{},"coverage.html":{}}}],["app",{"_index":359,"title":{},"body":{"index.html":{}}}],["array.isarray(elements",{"_index":268,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["artifacts",{"_index":375,"title":{},"body":{"index.html":{}}}],["auto",{"_index":355,"title":{},"body":{"index.html":{}}}],["between",{"_index":222,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["boolean",{"_index":60,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{}}}],["bootstrap",{"_index":182,"title":{},"body":{"modules/AngularCollisionModule.html":{},"overview.html":{}}}],["browse",{"_index":394,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":340,"title":{},"body":{"dependencies.html":{},"modules.html":{}}}],["build",{"_index":373,"title":{},"body":{"index.html":{}}}],["change",{"_index":290,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["changed",{"_index":131,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["changes",{"_index":75,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["changes.disableinterval",{"_index":152,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["changes.disableinterval.currentvalue",{"_index":153,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["changes.intervaltime",{"_index":150,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["changes.intervaltime.currentvalue",{"_index":151,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["check",{"_index":79,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["checkelementscollision",{"_index":210,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["checkelementscollision(first",{"_index":218,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["checking",{"_index":65,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{}}}],["checkposition",{"_index":32,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["checks",{"_index":221,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["class",{"_index":140,"title":{"classes/NgcConfig.html":{}},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"coverage.html":{},"overview.html":{}}}],["class.collision",{"_index":46,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["classes",{"_index":306,"title":{},"body":{"classes/NgcConfig.html":{}}}],["cluster_angularcollisionmodule",{"_index":185,"title":{},"body":{"modules/AngularCollisionModule.html":{},"overview.html":{}}}],["cluster_angularcollisionmodule_declarations",{"_index":187,"title":{},"body":{"modules/AngularCollisionModule.html":{},"overview.html":{}}}],["cluster_angularcollisionmodule_exports",{"_index":186,"title":{},"body":{"modules/AngularCollisionModule.html":{},"overview.html":{}}}],["collidedelements",{"_index":97,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["collidedids",{"_index":159,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["collision",{"_index":26,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"index.html":{}}}],["collision.directive",{"_index":198,"title":{},"body":{"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{}}}],["collision.directive.ts",{"_index":8,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"coverage.html":{}}}],["collision.directive.ts:100",{"_index":86,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:110",{"_index":83,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:116",{"_index":87,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:127",{"_index":98,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:139",{"_index":78,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:149",{"_index":88,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:162",{"_index":91,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:171",{"_index":93,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:43",{"_index":61,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:48",{"_index":70,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:53",{"_index":76,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:60",{"_index":73,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:64",{"_index":77,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:69",{"_index":119,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:74",{"_index":113,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:79",{"_index":117,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:84",{"_index":109,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:86",{"_index":107,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:87",{"_index":103,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:88",{"_index":105,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:89",{"_index":104,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:90",{"_index":53,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:92",{"_index":116,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.module.ts",{"_index":191,"title":{},"body":{"modules/AngularCollisionModule.html":{}}}],["collision.module.ts:10",{"_index":194,"title":{},"body":{"modules/AngularCollisionModule.html":{}}}],["collision.service.ts",{"_index":205,"title":{},"body":{"injectables/AngularCollisionService.html":{},"coverage.html":{}}}],["collision.service.ts:115",{"_index":220,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["collision.service.ts:131",{"_index":216,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["collision.service.ts:149",{"_index":233,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["collision.service.ts:17",{"_index":236,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["collision.service.ts:22",{"_index":239,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["collision.service.ts:27",{"_index":241,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["collision.service.ts:31",{"_index":214,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["collision.service.ts:63",{"_index":226,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["collision.service.ts:74",{"_index":229,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["collision.service.ts:94",{"_index":231,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["collision/src/lib/angular",{"_index":7,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"coverage.html":{}}}],["collision/src/lib/models/ngc",{"_index":307,"title":{},"body":{"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{}}}],["collisionactive",{"_index":142,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["collisionactivechange",{"_index":44,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["collisions",{"_index":137,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["collisions.length",{"_index":265,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["collisions.push(innerelement.element",{"_index":263,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["commit",{"_index":368,"title":{},"body":{"index.html":{}}}],["compodoc",{"_index":372,"title":{},"body":{"index.html":{}}}],["config",{"_index":50,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{}}}],["config.disableinterval",{"_index":149,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["config.intervaltime",{"_index":147,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["config.model",{"_index":128,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["config.model.ts",{"_index":308,"title":{},"body":{"classes/NgcConfig.html":{},"coverage.html":{}}}],["config.model.ts:13",{"_index":312,"title":{},"body":{"classes/NgcConfig.html":{}}}],["config.model.ts:4",{"_index":310,"title":{},"body":{"classes/NgcConfig.html":{}}}],["config.model.ts:9",{"_index":311,"title":{},"body":{"classes/NgcConfig.html":{}}}],["const",{"_index":163,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["constructor",{"_index":47,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{}}}],["constructor(disableinterval",{"_index":309,"title":{},"body":{"classes/NgcConfig.html":{}}}],["constructor(element",{"_index":48,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["constructor(public",{"_index":143,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["containing",{"_index":130,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["coverage",{"_index":316,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["declarations",{"_index":181,"title":{},"body":{"modules/AngularCollisionModule.html":{},"overview.html":{}}}],["default",{"_index":67,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{}}}],["defined",{"_index":52,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{}}}],["demo",{"_index":358,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":179,"title":{"dependencies.html":{}},"body":{"modules/AngularCollisionModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":305,"title":{},"body":{"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["destroy",{"_index":27,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["detection",{"_index":354,"title":{},"body":{"index.html":{}}}],["directive",{"_index":0,"title":{"directives/AngularCollisionDirective.html":{}},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"coverage.html":{},"overview.html":{}}}],["directives",{"_index":2,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["directory",{"_index":378,"title":{},"body":{"index.html":{}}}],["disable",{"_index":62,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{}}}],["disableinterval",{"_index":41,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{}}}],["dist",{"_index":377,"title":{},"body":{"index.html":{}}}],["docs",{"_index":367,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":317,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["domrect",{"_index":132,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["drag",{"_index":362,"title":{},"body":{"index.html":{}}}],["drop",{"_index":363,"title":{},"body":{"index.html":{}}}],["dynamic",{"_index":341,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":390,"title":{},"body":{"index.html":{}}}],["el.id",{"_index":283,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["element",{"_index":28,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["element's",{"_index":74,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["element.domrect",{"_index":261,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["element.element.updatecollisionstate",{"_index":264,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["element.id",{"_index":284,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["element.interface",{"_index":246,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["element.interface.ts",{"_index":313,"title":{},"body":{"interfaces/NgcTrackedElement.html":{},"coverage.html":{}}}],["element.rectanglechange",{"_index":286,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["element.starttracking",{"_index":285,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["element.stoptracking",{"_index":293,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["elementref",{"_index":49,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["elements",{"_index":224,"title":{},"body":{"injectables/AngularCollisionService.html":{},"index.html":{}}}],["elements.foreach((element",{"_index":270,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["elementsmap.foreach",{"_index":257,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["elementsmap.foreach((element",{"_index":256,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["emit",{"_index":80,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["emits",{"_index":114,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["end",{"_index":389,"title":{},"body":{"index.html":{}}}],["eventemitter",{"_index":72,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["execute",{"_index":386,"title":{},"body":{"index.html":{}}}],["export",{"_index":134,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["exportas",{"_index":139,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["exports",{"_index":184,"title":{},"body":{"modules/AngularCollisionModule.html":{},"overview.html":{}}}],["false",{"_index":102,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{}}}],["file",{"_index":5,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{}}}],["finish",{"_index":234,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["first",{"_index":225,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["first.bottom",{"_index":277,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["first.left",{"_index":279,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["first.top",{"_index":275,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["flag",{"_index":381,"title":{},"body":{"index.html":{}}}],["forroot",{"_index":192,"title":{},"body":{"modules/AngularCollisionModule.html":{}}}],["forroot(config",{"_index":193,"title":{},"body":{"modules/AngularCollisionModule.html":{}}}],["foundelement",{"_index":295,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["foundelement.subscription.closed",{"_index":300,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["foundelement.subscription.unsubscribe",{"_index":301,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["foundelement?.subscription",{"_index":299,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["generate",{"_index":366,"title":{},"body":{"index.html":{}}}],["generated",{"_index":356,"title":{},"body":{"index.html":{}}}],["getting",{"_index":350,"title":{"index.html":{}},"body":{}}],["hostbinding",{"_index":124,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["hostbinding('class.collision",{"_index":141,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["hostbindings",{"_index":45,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["id",{"_index":29,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["identifier",{"_index":318,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":9,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["import",{"_index":122,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["index",{"_index":16,"title":{"index.html":{}},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["info",{"_index":3,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["init",{"_index":217,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["injectable",{"_index":202,"title":{"injectables/AngularCollisionService.html":{}},"body":{"injectables/AngularCollisionService.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":204,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["innerelement",{"_index":258,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["innerelement.domrect",{"_index":262,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["innerid",{"_index":259,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["input",{"_index":123,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["inputs",{"_index":40,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["instance",{"_index":115,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["instanceof",{"_index":269,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["interface",{"_index":135,"title":{"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{}}}],["interfaces",{"_index":304,"title":{},"body":{"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"overview.html":{}}}],["interval",{"_index":63,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{}}}],["intervaltime",{"_index":42,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{}}}],["itself",{"_index":133,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["karma",{"_index":388,"title":{},"body":{"index.html":{}}}],["legend",{"_index":180,"title":{},"body":{"modules/AngularCollisionModule.html":{},"overview.html":{}}}],["library",{"_index":314,"title":{},"body":{"interfaces/NgcTrackedElement.html":{},"index.html":{}}}],["made",{"_index":364,"title":{},"body":{"index.html":{}}}],["manually",{"_index":369,"title":{},"body":{"index.html":{}}}],["map",{"_index":238,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["matching",{"_index":174,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["metadata",{"_index":13,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["methods",{"_index":31,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{}}}],["models/ngc",{"_index":127,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["module",{"_index":176,"title":{"modules/AngularCollisionModule.html":{}},"body":{"modules/AngularCollisionModule.html":{},"classes/NgcConfig.html":{},"overview.html":{}}}],["modules",{"_index":178,"title":{"modules.html":{}},"body":{"modules/AngularCollisionModule.html":{},"modules.html":{}}}],["modulewithproviders",{"_index":195,"title":{},"body":{"modules/AngularCollisionModule.html":{}}}],["name",{"_index":56,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{}}}],["new",{"_index":112,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"coverage.html":{}}}],["ng",{"_index":360,"title":{},"body":{"index.html":{}}}],["ngaftercontentchecked",{"_index":33,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["ngcangularcollision",{"_index":15,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["ngccollisionchange",{"_index":138,"title":{"interfaces/NgcCollisionChange.html":{}},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"coverage.html":{}}}],["ngcconfig",{"_index":51,"title":{"classes/NgcConfig.html":{}},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"coverage.html":{}}}],["ngcelementchange",{"_index":136,"title":{"interfaces/NgcElementChange.html":{}},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"coverage.html":{}}}],["ngcollision",{"_index":352,"title":{},"body":{"index.html":{}}}],["ngctrackedelement",{"_index":235,"title":{"interfaces/NgcTrackedElement.html":{}},"body":{"injectables/AngularCollisionService.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{}}}],["ngmodule",{"_index":196,"title":{},"body":{"modules/AngularCollisionModule.html":{}}}],["ngonchanges",{"_index":34,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["ngonchanges(changes",{"_index":84,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["ngondestroy",{"_index":35,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["npm",{"_index":370,"title":{},"body":{"index.html":{}}}],["number",{"_index":66,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["object",{"_index":129,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["observable",{"_index":95,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["onchanges",{"_index":10,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["ondestroy",{"_index":12,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["optional",{"_index":58,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{}}}],["out",{"_index":190,"title":{},"body":{"modules/AngularCollisionModule.html":{},"overview.html":{}}}],["output",{"_index":121,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["outputs",{"_index":43,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["overview",{"_index":395,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":333,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":158,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["parameters",{"_index":54,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{}}}],["part",{"_index":365,"title":{},"body":{"index.html":{}}}],["performance",{"_index":255,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["pipe(takeuntil(element.destroy",{"_index":287,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["pipe(throttletime(100",{"_index":251,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["position",{"_index":64,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{}}}],["positions",{"_index":240,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["private",{"_index":18,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["prod",{"_index":380,"title":{},"body":{"index.html":{}}}],["production",{"_index":382,"title":{},"body":{"index.html":{}}}],["project",{"_index":374,"title":{},"body":{"index.html":{}}}],["projects/angular",{"_index":6,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{}}}],["properties",{"_index":17,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["protractor",{"_index":391,"title":{},"body":{"index.html":{}}}],["provide",{"_index":200,"title":{},"body":{"modules/AngularCollisionModule.html":{}}}],["providedin",{"_index":247,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["providers",{"_index":183,"title":{},"body":{"modules/AngularCollisionModule.html":{},"overview.html":{}}}],["public",{"_index":25,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{}}}],["querylist",{"_index":228,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["rectanglechange",{"_index":30,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["register",{"_index":211,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["register(elements",{"_index":227,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["remove",{"_index":212,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["remove(elements",{"_index":230,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["removetrackedelement",{"_index":213,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["removetrackedelement(element",{"_index":232,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["reset",{"_index":189,"title":{},"body":{"modules/AngularCollisionModule.html":{},"overview.html":{}}}],["result",{"_index":173,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["results",{"_index":175,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["return",{"_index":199,"title":{},"body":{"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{}}}],["returns",{"_index":81,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{}}}],["root",{"_index":248,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["run",{"_index":371,"title":{},"body":{"index.html":{}}}],["running",{"_index":357,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":126,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":245,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["same",{"_index":120,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["second",{"_index":219,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["second.bottom",{"_index":278,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["second.left",{"_index":280,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["second.right",{"_index":281,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["second.top",{"_index":276,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["selector",{"_index":14,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["serve",{"_index":361,"title":{},"body":{"index.html":{}}}],["service",{"_index":315,"title":{},"body":{"interfaces/NgcTrackedElement.html":{}}}],["simplechanges",{"_index":85,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["source",{"_index":4,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["start",{"_index":89,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["started",{"_index":351,"title":{"index.html":{}},"body":{}}],["starttracking",{"_index":36,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["statements",{"_index":319,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":23,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["status",{"_index":100,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["stop",{"_index":92,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["stoptracking",{"_index":37,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["stored",{"_index":376,"title":{},"body":{"index.html":{}}}],["subject",{"_index":111,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["subscribe((change",{"_index":288,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["subscribe((elementsmap",{"_index":252,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["subscription",{"_index":106,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["support",{"_index":392,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":393,"title":{},"body":{"modules.html":{}}}],["table",{"_index":332,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":331,"title":{},"body":{"coverage.html":{}}}],["takeuntil",{"_index":243,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["test",{"_index":385,"title":{},"body":{"index.html":{}}}],["tests",{"_index":384,"title":{},"body":{"index.html":{}}}],["this._active",{"_index":154,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this._disableinterval",{"_index":148,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this._intervaltime",{"_index":146,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this._intervaltime).subscribe",{"_index":169,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this._timersubscription",{"_index":167,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this._timersubscription.closed",{"_index":171,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this._timersubscription.unsubscribe",{"_index":172,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.addtrackedelement(element",{"_index":271,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["this.addtrackedelement(elements",{"_index":272,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["this.checkelementscollision",{"_index":260,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["this.checkposition",{"_index":155,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.collision",{"_index":161,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.collisionactive",{"_index":160,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.collisionactivechange.emit",{"_index":162,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.destroy$.next(this.id",{"_index":157,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.element.nativeelement.getboundingclientrect",{"_index":164,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.id",{"_index":144,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.rectanglechange$.next",{"_index":165,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.rectanglechange.emit",{"_index":166,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.removetrackedelement(element",{"_index":273,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["this.removetrackedelement(elements",{"_index":274,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["this.trackedelements",{"_index":302,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["this.trackedelements.filter",{"_index":303,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["this.trackedelements.find",{"_index":296,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["this.trackedelements.push",{"_index":292,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["this.trackedelements.some((el",{"_index":282,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["this.trackedelementspositions",{"_index":250,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["this.trackedelementspositions$.next(this.trackedelementspositions",{"_index":291,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["this.trackedelementspositions.delete(element.id",{"_index":294,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["this.trackedelementspositions.set(change.element.id",{"_index":289,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["this.trackedelementspositionsubscription",{"_index":249,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["this.trackedelementspositionsubscription.closed",{"_index":266,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["this.trackedelementspositionsubscription.unsubscribe",{"_index":267,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["this.unsubscribe",{"_index":156,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.updatecollisionstate(false",{"_index":170,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["throttletime",{"_index":244,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["time",{"_index":71,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{}}}],["timer",{"_index":94,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["timer(0",{"_index":168,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["todo",{"_index":253,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["tracked",{"_index":237,"title":{},"body":{"injectables/AngularCollisionService.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{}}}],["trackedelement",{"_index":297,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["trackedelement.id",{"_index":298,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["trackedelements",{"_index":206,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["trackedelementspositions",{"_index":207,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["trackedelementspositionsubscription",{"_index":208,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["tracking",{"_index":90,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["true",{"_index":110,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["tslib",{"_index":346,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":223,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["type",{"_index":57,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{}}}],["unique",{"_index":118,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["unit",{"_index":383,"title":{},"body":{"index.html":{}}}],["unsubscribe",{"_index":38,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["update",{"_index":99,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["updatecollisionstate",{"_index":39,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["updatecollisionstate(active",{"_index":96,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["use",{"_index":379,"title":{},"body":{"index.html":{}}}],["usevalue",{"_index":201,"title":{},"body":{"modules/AngularCollisionModule.html":{}}}],["value",{"_index":68,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{}}}],["via",{"_index":387,"title":{},"body":{"index.html":{}}}],["void",{"_index":82,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["work",{"_index":254,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["wrapper",{"_index":242,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["yes",{"_index":59,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["zone.js",{"_index":348,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":188,"title":{},"body":{"modules/AngularCollisionModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"directives/AngularCollisionDirective.html":{"url":"directives/AngularCollisionDirective.html","title":"directive - AngularCollisionDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  AngularCollisionDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-collision/src/lib/angular-collision.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            OnChanges\n                            AfterContentChecked\n                            OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [ngcAngularCollision]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _active\n                            \n                            \n                                    Private\n                                _disableInterval\n                            \n                            \n                                    Private\n                                _intervalTime\n                            \n                            \n                                    Private\n                                _timerSubscription\n                            \n                            \n                                    Private\n                                    Static\n                                _uid\n                            \n                            \n                                    Public\n                                collision\n                            \n                            \n                                    Public\n                                destroy$\n                            \n                            \n                                    Public\n                                element\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                rectangleChange$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                checkPosition\n                            \n                            \n                                    Public\n                                ngAfterContentChecked\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                startTracking\n                            \n                            \n                                    Public\n                                stopTracking\n                            \n                            \n                                    Public\n                                unsubscribe\n                            \n                            \n                                    Public\n                                updateCollisionState\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disableInterval\n                            \n                            \n                                intervalTime\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                collisionActiveChange\n                            \n                            \n                                rectangleChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class.collision\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(element: ElementRef, config?: NgcConfig)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:90\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        NgcConfig\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        disableInterval\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:43\n                            \n                        \n                \n                    \n                        Disable interval position checking\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        intervalTime\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 100\n                    \n                \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:48\n                            \n                        \n                \n                    \n                        Interval time for position checking\n\n                    \n                \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        collisionActiveChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:60\n                            \n                        \n                \n                    \n                        Element's collision changes\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        rectangleChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:53\n                            \n                        \n                \n                    \n                        Element's position changes\n\n                    \n                \n            \n        \n\n            \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class.collision\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:64\n                            \n                        \n\n\n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            checkPosition\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkPosition()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:139\n                \n            \n\n\n            \n                \n                    Check and emit element position\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngAfterContentChecked\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterContentChecked()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            startTracking\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    startTracking()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:149\n                \n            \n\n\n            \n                \n                    Start tracking element\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            stopTracking\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    stopTracking()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:162\n                \n            \n\n\n            \n                \n                    Stop tracking element\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            unsubscribe\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    unsubscribe()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:171\n                \n            \n\n\n            \n                \n                    Unsubscribe timer observable\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateCollisionState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateCollisionState(active: boolean, collidedElements: AngularCollisionDirective[])\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:127\n                \n            \n\n\n            \n                \n                    Update collision status\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    active\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    collidedElements\n                                    \n                                            AngularCollisionDirective[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _active\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:87\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _disableInterval\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:89\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _intervalTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:88\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _timerSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:86\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            _uid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:90\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            collision\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:84\n                            \n                        \n\n                \n                    \n                        True if element has any collision\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            destroy$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:74\n                            \n                        \n\n                \n                    \n                        Observable that emits on instance destroy\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            element\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:92\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:79\n                            \n                        \n\n                \n                    \n                        Unique id for directive instance\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rectangleChange$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:69\n                            \n                        \n\n                \n                    \n                        Element's collision changes as observable, same as output\n\n                    \n                \n\n            \n        \n\n\n\n    \n\n\n    \n        import {\n  Directive,\n  AfterContentChecked,\n  ElementRef,\n  Output,\n  EventEmitter,\n  OnDestroy,\n  Input,\n  HostBinding,\n  Optional,\n  OnChanges,\n  SimpleChanges,\n} from '@angular/core';\nimport { timer, Subscription, Subject } from 'rxjs';\nimport { NgcConfig } from './models/ngc-config.model';\n\n/**\n * Object containing changed element's domRect and element itself\n */\nexport interface NgcElementChange {\n  domRect: DOMRect;\n  element: AngularCollisionDirective;\n}\n\n/**\n * Object with info about element's collisions\n */\nexport interface NgcCollisionChange {\n  id: number;\n  active: boolean;\n  collidedElements: AngularCollisionDirective[];\n}\n\n@Directive({\n  selector: '[ngcAngularCollision]',\n  exportAs: 'ngcAngularCollision',\n})\nexport class AngularCollisionDirective\n  implements OnChanges, AfterContentChecked, OnDestroy {\n  /**\n   * Disable interval position checking\n   */\n  @Input() public disableInterval: boolean;\n\n  /**\n   * Interval time for position checking\n   */\n  @Input() public intervalTime: number = 100;\n\n  /**\n   * Element's position changes\n   */\n  @Output() public rectangleChange: EventEmitter = new EventEmitter();\n\n  /**\n   * Element's collision changes\n   */\n  @Output() public collisionActiveChange: EventEmitter = new EventEmitter();\n\n  @HostBinding('class.collision') private collisionActive: boolean;\n\n  /**\n   * Element's collision changes as observable, same as output\n   */\n  public rectangleChange$: Subject = new Subject();\n\n  /**\n   * Observable that emits on instance destroy\n   */\n  public destroy$: Subject = new Subject();\n\n  /**\n   * Unique id for directive instance\n   */\n  public id: number;\n\n  /**\n   * True if element has any collision\n   */\n  public collision: boolean;\n\n  private _timerSubscription: Subscription;\n  private _active: boolean = false;\n  private _intervalTime: number;\n  private _disableInterval: boolean;\n  private static _uid: number = 0;\n\n  constructor(public element: ElementRef, @Optional() config?: NgcConfig) {\n    this.id = AngularCollisionDirective._uid++;\n    if (config) {\n      this._intervalTime = config.intervalTime;\n      this._disableInterval = config.disableInterval;\n    }\n  }\n\n  public ngOnChanges(changes: SimpleChanges): void {\n    if (changes.intervalTime) {\n      this._intervalTime = changes.intervalTime.currentValue;\n    }\n\n    if (changes.disableInterval) {\n      this._disableInterval = changes.disableInterval.currentValue;\n    }\n  }\n\n  public ngAfterContentChecked(): void {\n    if (this._active) {\n      this.checkPosition();\n    }\n  }\n\n  public ngOnDestroy(): void {\n    this.unsubscribe();\n    this.destroy$.next(this.id);\n  }\n\n  /**\n   * Update collision status\n   *\n   * @param active\n   * @param collidedIds\n   */\n  public updateCollisionState(\n    active: boolean,\n    collidedElements: AngularCollisionDirective[]\n  ): void {\n    this.collisionActive = active;\n    this.collision = active;\n    this.collisionActiveChange.emit({ id: this.id, active, collidedElements });\n  }\n\n  /**\n   * Check and emit element position\n   */\n  public checkPosition(): void {\n    const domRect: DOMRect = this.element.nativeElement.getBoundingClientRect();\n\n    this.rectangleChange$.next({ domRect, element: this });\n    this.rectangleChange.emit({ domRect, element: this });\n  }\n\n  /**\n   * Start tracking element\n   */\n  public startTracking(): void {\n    this._active = true;\n\n    if (!this._disableInterval) {\n      this._timerSubscription = timer(0, this._intervalTime).subscribe(() => {\n        this.checkPosition();\n      });\n    }\n  }\n\n  /**\n   * Stop tracking element\n   */\n  public stopTracking(): void {\n    this._active = false;\n    this.updateCollisionState(false, []);\n    this.unsubscribe();\n  }\n\n  /**\n   * Unsubscribe timer observable\n   */\n  public unsubscribe(): void {\n    if (this._timerSubscription && !this._timerSubscription.closed) {\n      this._timerSubscription.unsubscribe();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AngularCollisionModule.html":{"url":"modules/AngularCollisionModule.html","title":"module - AngularCollisionModule","body":"\n                   \n\n\n\n\n    Modules\n    AngularCollisionModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AngularCollisionModule\n\n\n\ncluster_AngularCollisionModule_exports\n\n\n\ncluster_AngularCollisionModule_declarations\n\n\n\n\nAngularCollisionDirective\n\nAngularCollisionDirective\n\n\n\nAngularCollisionModule\n\nAngularCollisionModule\n\nAngularCollisionModule -->\n\nAngularCollisionDirective->AngularCollisionModule\n\n\n\n\n\nAngularCollisionDirective \n\nAngularCollisionDirective \n\nAngularCollisionDirective  -->\n\nAngularCollisionModule->AngularCollisionDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/angular-collision/src/lib/angular-collision.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AngularCollisionDirective\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AngularCollisionDirective\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(config: NgcConfig)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.module.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                NgcConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { AngularCollisionDirective } from './angular-collision.directive';\nimport { NgcConfig } from './models/ngc-config.model';\n\n@NgModule({\n  declarations: [AngularCollisionDirective],\n  exports: [AngularCollisionDirective],\n})\nexport class AngularCollisionModule {\n  static forRoot(\n    config: NgcConfig\n  ): ModuleWithProviders {\n    return {\n      ngModule: AngularCollisionModule,\n      providers: [{ provide: NgcConfig, useValue: config }],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AngularCollisionService.html":{"url":"injectables/AngularCollisionService.html","title":"injectable - AngularCollisionService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AngularCollisionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-collision/src/lib/angular-collision.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                trackedElements\n                            \n                            \n                                    Public\n                                trackedElementsPositions\n                            \n                            \n                                    Public\n                                trackedElementsPositions$\n                            \n                            \n                                    Public\n                                trackedElementsPositionSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addTrackedElement\n                            \n                            \n                                    Private\n                                checkElementsCollision\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                register\n                            \n                            \n                                    Public\n                                remove\n                            \n                            \n                                    Private\n                                removeTrackedElement\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/angular-collision/src/lib/angular-collision.service.ts:31\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            addTrackedElement\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addTrackedElement(element: AngularCollisionDirective)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.service.ts:131\n                \n            \n\n\n            \n                \n                    Init tracking of element\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    element\n                                    \n                                            AngularCollisionDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            checkElementsCollision\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkElementsCollision(first: DOMRect, second: DOMRect)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.service.ts:115\n                \n            \n\n\n            \n                \n                    Checks collisions between two elements\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    first\n                                    \n                                            DOMRect\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    second\n                                    \n                                            DOMRect\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            register\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    register(elements: QueryList | AngularCollisionDirective | AngularCollisionDirective[])\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.service.ts:74\n                \n            \n\n\n            \n                \n                    Start tracking element / elements\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    elements\n                                    \n                                            QueryList | AngularCollisionDirective | AngularCollisionDirective[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(elements: QueryList | AngularCollisionDirective | AngularCollisionDirective[])\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.service.ts:94\n                \n            \n\n\n            \n                \n                    Stop tracking element / elements\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    elements\n                                    \n                                            QueryList | AngularCollisionDirective | AngularCollisionDirective[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            removeTrackedElement\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeTrackedElement(element: AngularCollisionDirective)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.service.ts:149\n                \n            \n\n\n            \n                \n                    Finish tracking of element\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    element\n                                    \n                                            AngularCollisionDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            trackedElements\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgcTrackedElement[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.service.ts:17\n                            \n                        \n\n                \n                    \n                        Tracked elements\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            trackedElementsPositions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Map\n\n                        \n                    \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.service.ts:22\n                            \n                        \n\n                \n                    \n                        Map of tracked elements positions\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            trackedElementsPositions$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Subject>\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.service.ts:27\n                            \n                        \n\n                \n                    \n                        Observable wrapper of tracked elements positions\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            trackedElementsPositionSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.service.ts:31\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, OnDestroy, QueryList } from '@angular/core';\nimport { takeUntil, throttleTime } from 'rxjs/operators';\nimport { Subject, Subscription } from 'rxjs';\nimport {\n  AngularCollisionDirective,\n  NgcElementChange,\n} from './angular-collision.directive';\nimport { NgcTrackedElement } from './models/ngc-tracked-element.interface';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AngularCollisionService implements OnDestroy {\n  /**\n   *  Tracked elements\n   */\n  public trackedElements: NgcTrackedElement[] = [];\n\n  /**\n   *  Map of tracked elements positions\n   */\n  public trackedElementsPositions: Map = new Map();\n\n  /**\n   *  Observable wrapper of tracked elements positions\n   */\n  public trackedElementsPositions$: Subject\n  > = new Subject();\n\n  public trackedElementsPositionSubscription: Subscription;\n\n  constructor() {\n    this.trackedElementsPositionSubscription = this.trackedElementsPositions$\n      .pipe(throttleTime(100))\n      .subscribe((elementsMap: Map) => {\n        // TODO work on performance\n        elementsMap.forEach((element: NgcElementChange, id: number) => {\n          const collisions: AngularCollisionDirective[] = [];\n\n          elementsMap.forEach(\n            (innerElement: NgcElementChange, innerId: number) => {\n              if (\n                id !== innerId &&\n                this.checkElementsCollision(\n                  element.domRect,\n                  innerElement.domRect\n                )\n              ) {\n                collisions.push(innerElement.element);\n              }\n            }\n          );\n\n          element.element.updateCollisionState(\n            collisions.length > 0,\n            collisions\n          );\n        });\n      });\n  }\n\n  public ngOnDestroy(): void {\n    if (!this.trackedElementsPositionSubscription.closed) {\n      this.trackedElementsPositionSubscription.unsubscribe();\n    }\n  }\n\n  /**\n   * Start tracking element / elements\n   *\n   * @param elements\n   */\n  public register(\n    elements:\n      | QueryList\n      | AngularCollisionDirective\n      | AngularCollisionDirective[]\n  ): void {\n    if (Array.isArray(elements) || elements instanceof QueryList) {\n      elements.forEach((element) => {\n        this.addTrackedElement(element);\n      });\n    } else {\n      this.addTrackedElement(elements);\n    }\n  }\n\n  /**\n   * Stop tracking element / elements\n   *\n   * @param elements\n   */\n  public remove(\n    elements:\n      | QueryList\n      | AngularCollisionDirective\n      | AngularCollisionDirective[]\n  ): void {\n    if (Array.isArray(elements) || elements instanceof QueryList) {\n      elements.forEach((element) => {\n        this.removeTrackedElement(element);\n      });\n    } else {\n      this.removeTrackedElement(elements);\n    }\n  }\n\n  /**\n   * Checks collisions between two elements\n   *\n   * @param first\n   * @param second\n   */\n  private checkElementsCollision(first: DOMRect, second: DOMRect): boolean {\n    return (\n      ((first.top = second.top) ||\n        (first.bottom = second.top) ||\n        (first.top = second.bottom)) &&\n      ((first.left >= second.left && first.left = second.left) ||\n        (first.left = second.right))\n    );\n  }\n\n  /**\n   * Init tracking of element\n   *\n   * @param element\n   */\n  private addTrackedElement(element: AngularCollisionDirective): void {\n    if (!this.trackedElements.some((el) => el.id == element.id)) {\n      element.startTracking();\n      const subscription = element.rectangleChange$\n        .pipe(takeUntil(element.destroy$))\n        .subscribe((change: NgcElementChange) => {\n          this.trackedElementsPositions.set(change.element.id, change);\n          this.trackedElementsPositions$.next(this.trackedElementsPositions);\n        });\n      this.trackedElements.push({ id: element.id, subscription });\n    }\n  }\n\n  /**\n   * Finish tracking of element\n   *\n   * @param element\n   */\n  private removeTrackedElement(element: AngularCollisionDirective): void {\n    element.stopTracking();\n\n    this.trackedElementsPositions.delete(element.id);\n    this.trackedElementsPositions$.next(this.trackedElementsPositions);\n\n    const foundElement = this.trackedElements.find(\n      (trackedElement) => trackedElement.id === element.id\n    );\n\n    if (foundElement?.subscription && !foundElement.subscription.closed) {\n      foundElement.subscription.unsubscribe();\n    }\n\n    this.trackedElements = this.trackedElements.filter(\n      (trackedElement) => trackedElement.id !== element.id\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgcCollisionChange.html":{"url":"interfaces/NgcCollisionChange.html","title":"interface - NgcCollisionChange","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgcCollisionChange\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-collision/src/lib/angular-collision.directive.ts\n        \n\n            \n                Description\n            \n            \n                Object with info about element's collisions\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        active\n                                \n                                \n                                        collidedElements\n                                \n                                \n                                        id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        active\n                                    \n                                \n                                \n                                    \n                                        active:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        collidedElements\n                                    \n                                \n                                \n                                    \n                                        collidedElements:     AngularCollisionDirective[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     AngularCollisionDirective[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Directive,\n  AfterContentChecked,\n  ElementRef,\n  Output,\n  EventEmitter,\n  OnDestroy,\n  Input,\n  HostBinding,\n  Optional,\n  OnChanges,\n  SimpleChanges,\n} from '@angular/core';\nimport { timer, Subscription, Subject } from 'rxjs';\nimport { NgcConfig } from './models/ngc-config.model';\n\n/**\n * Object containing changed element's domRect and element itself\n */\nexport interface NgcElementChange {\n  domRect: DOMRect;\n  element: AngularCollisionDirective;\n}\n\n/**\n * Object with info about element's collisions\n */\nexport interface NgcCollisionChange {\n  id: number;\n  active: boolean;\n  collidedElements: AngularCollisionDirective[];\n}\n\n@Directive({\n  selector: '[ngcAngularCollision]',\n  exportAs: 'ngcAngularCollision',\n})\nexport class AngularCollisionDirective\n  implements OnChanges, AfterContentChecked, OnDestroy {\n  /**\n   * Disable interval position checking\n   */\n  @Input() public disableInterval: boolean;\n\n  /**\n   * Interval time for position checking\n   */\n  @Input() public intervalTime: number = 100;\n\n  /**\n   * Element's position changes\n   */\n  @Output() public rectangleChange: EventEmitter = new EventEmitter();\n\n  /**\n   * Element's collision changes\n   */\n  @Output() public collisionActiveChange: EventEmitter = new EventEmitter();\n\n  @HostBinding('class.collision') private collisionActive: boolean;\n\n  /**\n   * Element's collision changes as observable, same as output\n   */\n  public rectangleChange$: Subject = new Subject();\n\n  /**\n   * Observable that emits on instance destroy\n   */\n  public destroy$: Subject = new Subject();\n\n  /**\n   * Unique id for directive instance\n   */\n  public id: number;\n\n  /**\n   * True if element has any collision\n   */\n  public collision: boolean;\n\n  private _timerSubscription: Subscription;\n  private _active: boolean = false;\n  private _intervalTime: number;\n  private _disableInterval: boolean;\n  private static _uid: number = 0;\n\n  constructor(public element: ElementRef, @Optional() config?: NgcConfig) {\n    this.id = AngularCollisionDirective._uid++;\n    if (config) {\n      this._intervalTime = config.intervalTime;\n      this._disableInterval = config.disableInterval;\n    }\n  }\n\n  public ngOnChanges(changes: SimpleChanges): void {\n    if (changes.intervalTime) {\n      this._intervalTime = changes.intervalTime.currentValue;\n    }\n\n    if (changes.disableInterval) {\n      this._disableInterval = changes.disableInterval.currentValue;\n    }\n  }\n\n  public ngAfterContentChecked(): void {\n    if (this._active) {\n      this.checkPosition();\n    }\n  }\n\n  public ngOnDestroy(): void {\n    this.unsubscribe();\n    this.destroy$.next(this.id);\n  }\n\n  /**\n   * Update collision status\n   *\n   * @param active\n   * @param collidedIds\n   */\n  public updateCollisionState(\n    active: boolean,\n    collidedElements: AngularCollisionDirective[]\n  ): void {\n    this.collisionActive = active;\n    this.collision = active;\n    this.collisionActiveChange.emit({ id: this.id, active, collidedElements });\n  }\n\n  /**\n   * Check and emit element position\n   */\n  public checkPosition(): void {\n    const domRect: DOMRect = this.element.nativeElement.getBoundingClientRect();\n\n    this.rectangleChange$.next({ domRect, element: this });\n    this.rectangleChange.emit({ domRect, element: this });\n  }\n\n  /**\n   * Start tracking element\n   */\n  public startTracking(): void {\n    this._active = true;\n\n    if (!this._disableInterval) {\n      this._timerSubscription = timer(0, this._intervalTime).subscribe(() => {\n        this.checkPosition();\n      });\n    }\n  }\n\n  /**\n   * Stop tracking element\n   */\n  public stopTracking(): void {\n    this._active = false;\n    this.updateCollisionState(false, []);\n    this.unsubscribe();\n  }\n\n  /**\n   * Unsubscribe timer observable\n   */\n  public unsubscribe(): void {\n    if (this._timerSubscription && !this._timerSubscription.closed) {\n      this._timerSubscription.unsubscribe();\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NgcConfig.html":{"url":"classes/NgcConfig.html","title":"class - NgcConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NgcConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-collision/src/lib/models/ngc-config.model.ts\n        \n\n            \n                Description\n            \n            \n                Optional module config\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                disableInterval\n                            \n                            \n                                    Public\n                                intervalTime\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(disableInterval: boolean, intervalTime: number)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-collision/src/lib/models/ngc-config.model.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        disableInterval\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        intervalTime\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            disableInterval\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/models/ngc-config.model.ts:9\n                            \n                        \n\n                \n                    \n                        Disable interval position checking\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            intervalTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 100\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/models/ngc-config.model.ts:13\n                            \n                        \n\n                \n                    \n                        Interval time for position checking\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class NgcConfig {\n  constructor(\n    /**\n     * Disable interval position checking\n     */\n    public disableInterval: boolean = false,\n    /**\n     * Interval time for position checking\n     */\n    public intervalTime: number = 100\n  ) {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgcElementChange.html":{"url":"interfaces/NgcElementChange.html","title":"interface - NgcElementChange","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgcElementChange\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-collision/src/lib/angular-collision.directive.ts\n        \n\n            \n                Description\n            \n            \n                Object containing changed element's domRect and element itself\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        domRect\n                                \n                                \n                                        element\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        domRect\n                                    \n                                \n                                \n                                    \n                                        domRect:     DOMRect\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DOMRect\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        element\n                                    \n                                \n                                \n                                    \n                                        element:     AngularCollisionDirective\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     AngularCollisionDirective\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Directive,\n  AfterContentChecked,\n  ElementRef,\n  Output,\n  EventEmitter,\n  OnDestroy,\n  Input,\n  HostBinding,\n  Optional,\n  OnChanges,\n  SimpleChanges,\n} from '@angular/core';\nimport { timer, Subscription, Subject } from 'rxjs';\nimport { NgcConfig } from './models/ngc-config.model';\n\n/**\n * Object containing changed element's domRect and element itself\n */\nexport interface NgcElementChange {\n  domRect: DOMRect;\n  element: AngularCollisionDirective;\n}\n\n/**\n * Object with info about element's collisions\n */\nexport interface NgcCollisionChange {\n  id: number;\n  active: boolean;\n  collidedElements: AngularCollisionDirective[];\n}\n\n@Directive({\n  selector: '[ngcAngularCollision]',\n  exportAs: 'ngcAngularCollision',\n})\nexport class AngularCollisionDirective\n  implements OnChanges, AfterContentChecked, OnDestroy {\n  /**\n   * Disable interval position checking\n   */\n  @Input() public disableInterval: boolean;\n\n  /**\n   * Interval time for position checking\n   */\n  @Input() public intervalTime: number = 100;\n\n  /**\n   * Element's position changes\n   */\n  @Output() public rectangleChange: EventEmitter = new EventEmitter();\n\n  /**\n   * Element's collision changes\n   */\n  @Output() public collisionActiveChange: EventEmitter = new EventEmitter();\n\n  @HostBinding('class.collision') private collisionActive: boolean;\n\n  /**\n   * Element's collision changes as observable, same as output\n   */\n  public rectangleChange$: Subject = new Subject();\n\n  /**\n   * Observable that emits on instance destroy\n   */\n  public destroy$: Subject = new Subject();\n\n  /**\n   * Unique id for directive instance\n   */\n  public id: number;\n\n  /**\n   * True if element has any collision\n   */\n  public collision: boolean;\n\n  private _timerSubscription: Subscription;\n  private _active: boolean = false;\n  private _intervalTime: number;\n  private _disableInterval: boolean;\n  private static _uid: number = 0;\n\n  constructor(public element: ElementRef, @Optional() config?: NgcConfig) {\n    this.id = AngularCollisionDirective._uid++;\n    if (config) {\n      this._intervalTime = config.intervalTime;\n      this._disableInterval = config.disableInterval;\n    }\n  }\n\n  public ngOnChanges(changes: SimpleChanges): void {\n    if (changes.intervalTime) {\n      this._intervalTime = changes.intervalTime.currentValue;\n    }\n\n    if (changes.disableInterval) {\n      this._disableInterval = changes.disableInterval.currentValue;\n    }\n  }\n\n  public ngAfterContentChecked(): void {\n    if (this._active) {\n      this.checkPosition();\n    }\n  }\n\n  public ngOnDestroy(): void {\n    this.unsubscribe();\n    this.destroy$.next(this.id);\n  }\n\n  /**\n   * Update collision status\n   *\n   * @param active\n   * @param collidedIds\n   */\n  public updateCollisionState(\n    active: boolean,\n    collidedElements: AngularCollisionDirective[]\n  ): void {\n    this.collisionActive = active;\n    this.collision = active;\n    this.collisionActiveChange.emit({ id: this.id, active, collidedElements });\n  }\n\n  /**\n   * Check and emit element position\n   */\n  public checkPosition(): void {\n    const domRect: DOMRect = this.element.nativeElement.getBoundingClientRect();\n\n    this.rectangleChange$.next({ domRect, element: this });\n    this.rectangleChange.emit({ domRect, element: this });\n  }\n\n  /**\n   * Start tracking element\n   */\n  public startTracking(): void {\n    this._active = true;\n\n    if (!this._disableInterval) {\n      this._timerSubscription = timer(0, this._intervalTime).subscribe(() => {\n        this.checkPosition();\n      });\n    }\n  }\n\n  /**\n   * Stop tracking element\n   */\n  public stopTracking(): void {\n    this._active = false;\n    this.updateCollisionState(false, []);\n    this.unsubscribe();\n  }\n\n  /**\n   * Unsubscribe timer observable\n   */\n  public unsubscribe(): void {\n    if (this._timerSubscription && !this._timerSubscription.closed) {\n      this._timerSubscription.unsubscribe();\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgcTrackedElement.html":{"url":"interfaces/NgcTrackedElement.html","title":"interface - NgcTrackedElement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgcTrackedElement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-collision/src/lib/models/ngc-tracked-element.interface.ts\n        \n\n            \n                Description\n            \n            \n                Tracked element in library service\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        subscription\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Element id\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subscription\n                                    \n                                \n                                \n                                    \n                                        subscription:     Subscription\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Subscription\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Element changes observable subscription\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Subscription } from 'rxjs';\n\n/**\n * Tracked element in library service\n */\nexport interface NgcTrackedElement {\n  /**\n   * Element id\n   */\n  id: number;\n\n  /**\n   * Element changes observable subscription\n   */\n  subscription: Subscription;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/angular-collision/src/lib/angular-collision.directive.ts\n            \n            directive\n            AngularCollisionDirective\n            \n                52 %\n                (13/25)\n            \n        \n        \n            \n                \n                projects/angular-collision/src/lib/angular-collision.directive.ts\n            \n            interface\n            NgcCollisionChange\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                projects/angular-collision/src/lib/angular-collision.directive.ts\n            \n            interface\n            NgcElementChange\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                projects/angular-collision/src/lib/angular-collision.service.ts\n            \n            injectable\n            AngularCollisionService\n            \n                66 %\n                (8/12)\n            \n        \n        \n            \n                \n                projects/angular-collision/src/lib/models/ngc-config.model.ts\n            \n            class\n            NgcConfig\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                projects/angular-collision/src/lib/models/ngc-tracked-element.interface.ts\n            \n            interface\n            NgcTrackedElement\n            \n                100 %\n                (3/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~10.1.5\n        \n            @angular/common : ~10.1.5\n        \n            @angular/compiler : ~10.1.5\n        \n            @angular/core : ~10.1.5\n        \n            @angular/forms : ~10.1.5\n        \n            @angular/platform-browser : ~10.1.5\n        \n            @angular/platform-browser-dynamic : ~10.1.5\n        \n            @angular/router : ~10.1.5\n        \n            @angular/cdk : ^10.2.4\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNgCollision\nAngular 10 library for elements collision detection\nAuto-generated documentation\nRunning demo app\nng serve demo-app\nDrag & drop made with angular/cdk. Not a part of library.\nGenerate docs\nDocumentation is auto-generated every commit.\nYou can also generate docs manually by:\nnpm run compodoc\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AngularCollisionModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AngularCollisionModule\n\n\n\ncluster_AngularCollisionModule_declarations\n\n\n\ncluster_AngularCollisionModule_exports\n\n\n\n\nAngularCollisionDirective\n\nAngularCollisionDirective\n\n\n\nAngularCollisionModule\n\nAngularCollisionModule\n\nAngularCollisionModule -->\n\nAngularCollisionDirective->AngularCollisionModule\n\n\n\n\n\nAngularCollisionDirective \n\nAngularCollisionDirective \n\nAngularCollisionDirective  -->\n\nAngularCollisionModule->AngularCollisionDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
