var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/directives/AngularCollisionDirective.html",[0,0.716,1,0.221]],["body/directives/AngularCollisionDirective.html",[0,0.69,1,0.349,2,1.388,3,0.354,4,0.354,5,0.273,6,0.842,7,0.842,8,0.682,9,0.69,10,1.597,11,0.844,12,1.388,13,1.305,14,1.597,15,0.446,16,0.856,17,1.201,18,2.275,19,1.434,20,1.597,21,1.285,22,1.027,23,2.056,24,1.597,25,1.291,26,1.597,27,1.305,28,1.798,29,1.798,30,0.95,31,1.798,32,1.798,33,2.056,34,1.597,35,2.148,36,1.597,37,1.597,38,1.597,39,2.148,40,1.597,41,2.148,42,2.148,43,1.06,44,1.388,45,1.945,46,2.588,47,2.148,48,1.305,49,0.084,50,1.305,51,1.042,52,0.856,53,1.305,54,1.388,55,1.228,56,1.388,57,1.133,58,2.443,59,2.443,60,1.305,61,1.388,62,2.145,63,1.388,64,1.388,65,1.388,66,1.388,67,1.305,68,1.305,69,1.305,70,2.145,71,1.3,72,1.388,73,1.388,74,1.388,75,0.69,76,0.95,77,1.388,78,0.69,79,1.388,80,1.597,81,0.69,82,1.388,83,1.945,84,1.388,85,1.305,86,1.055,87,1.305,88,1.597,89,1.388,90,1.201,91,0.862,92,1.388,93,1.388,94,1.388,95,1.388,96,0.844,97,1.388,98,0.547,99,0.547,100,1.597,101,1.798,102,0.843,103,0.273,104,0.354,105,0.95,106,1.305,107,1.305,108,0.669,109,0.212,110,0.273,111,1.086,112,0.553,113,0.843,114,0.137,115,1.305,116,0.547,117,0.843,118,0.843,119,0.843,120,1.305,121,0.843,122,1.597,123,1.305,124,1.305,125,0.843,126,0.69,127,0.843,128,0.843,129,0.843,130,0.446,131,0.843,132,0.843,133,0.843,134,0.843,135,0.843,136,1.305,137,0.843,138,0.843,139,0.843,140,0.843,141,0.843,142,0.025,143,0.039,144,0.025]],["title/modules/AngularCollisionModule.html",[145,1.355,146,1.095]],["body/modules/AngularCollisionModule.html",[1,0.443,3,0.705,4,0.705,5,0.545,6,0.688,7,0.688,25,1.719,27,1.682,46,1.682,48,1.682,49,0.084,50,1.682,51,0.705,52,1.103,70,1.682,99,0.977,103,0.545,108,0.705,114,0.274,116,0.977,142,0.05,143,0.064,144,0.05,145,1.682,146,2.142,147,1.682,148,1.36,149,2.114,150,2.928,151,2.114,152,2.671,153,2.928,154,2.114,155,2.114,156,2.114,157,2.671,158,2.114,159,2.114,160,2.769,161,3.499,162,2.769,163,1.334,164,2.769,165,3.836,166,3.836,167,1.394,168,1.36,169,2.769,170,1.36,171,2.769,172,2.769]],["title/injectables/AngularCollisionService.html",[173,0.716,174,0.888]],["body/injectables/AngularCollisionService.html",[1,0.416,3,0.336,4,0.336,5,0.259,6,0.768,7,0.768,9,0.423,11,0.662,15,0.423,16,0.822,17,1.183,19,1.357,21,1.253,22,0.923,27,1.254,30,0.923,43,1.006,46,2.334,48,2.013,49,0.085,50,2.013,51,0.96,52,1.379,55,0.662,57,0.816,58,1.941,59,1.941,70,2.013,71,1.21,75,0.662,76,1.15,78,0.662,81,0.662,90,1.003,91,0.733,96,1.111,98,0.336,99,0.733,103,0.259,104,0.336,105,0.423,108,0.648,109,0.13,110,0.566,111,1.063,114,0.204,116,0.526,126,1.063,130,0.816,142,0.024,143,0.037,144,0.024,163,0.923,167,0.525,168,0.647,170,0.647,173,0.662,174,0.822,175,1.318,176,0.647,177,1.545,178,2.013,179,1.545,180,2.063,181,2.063,182,1.545,183,1.545,184,2.063,185,1.318,186,2.063,187,1.318,188,1.254,189,1.318,190,1.254,191,1.254,192,1.748,193,1.318,194,1.254,195,1.748,196,1.254,197,1.254,198,2.065,199,1.254,200,1.318,201,1.318,202,2.239,203,1.318,204,1.318,205,1.318,206,1.254,207,1.318,208,1.254,209,1.013,210,1.318,211,2.013,212,1.254,213,2.104,214,1.318,215,1.748,216,1.318,217,1.254,218,0.801,219,0.801,220,0.801,221,0.801,222,0.801,223,0.801,224,0.801,225,0.801,226,0.801,227,0.801,228,0.801,229,0.801,230,0.801,231,0.801,232,0.801,233,1.254,234,0.801,235,0.801,236,0.801,237,0.801,238,0.801,239,0.801,240,0.801,241,0.801,242,1.254,243,1.254,244,1.254,245,0.801,246,0.801,247,0.801,248,0.801,249,1.254,250,1.254,251,0.801,252,0.801,253,1.545,254,1.254,255,0.801,256,0.801,257,0.801,258,1.748,259,0.801,260,0.801,261,0.801,262,0.801,263,0.801,264,0.801,265,1.254,266,0.801,267,0.801,268,0.801,269,0.801,270,0.801,271,1.254,272,1.254,273,0.801,274,0.801,275,0.801,276,0.801,277,0.801]],["title/interfaces/NgcCollisionChange.html",[109,0.221,112,0.888]],["body/interfaces/NgcCollisionChange.html",[0,0.891,1,0.38,3,0.499,4,0.499,5,0.386,6,0.386,7,0.386,8,0.963,9,0.629,10,1.687,11,0.891,13,1.191,14,1.687,15,0.629,16,1.106,17,1.034,18,2.493,19,1.4,20,1.191,21,1.267,22,1.233,23,1.687,24,1.191,25,0.963,26,1.191,28,1.191,29,1.191,30,0.629,31,1.191,32,1.191,33,1.687,34,1.191,36,1.191,37,1.191,38,1.191,40,1.191,45,1.687,49,0.085,51,0.821,53,1.191,55,1.267,57,1.233,60,1.191,62,2.247,67,1.191,68,1.191,69,1.191,71,1.267,75,0.629,76,0.891,78,0.629,80,1.687,81,0.629,83,2.333,85,1.191,86,0.963,87,1.191,88,1.687,90,1.187,91,0.893,96,0.891,98,0.499,99,0.707,100,1.958,101,2.129,102,1.191,103,0.386,104,0.499,105,1.125,106,1.687,107,1.687,108,0.821,109,0.275,110,0.386,111,1.233,112,1.106,113,1.191,114,0.194,115,1.687,116,0.707,117,1.191,118,1.191,119,1.191,120,1.687,121,1.191,122,1.958,123,1.687,124,1.687,125,1.191,126,0.891,127,1.191,128,1.191,129,1.191,130,0.629,131,1.191,132,1.191,133,1.191,134,1.191,135,1.191,136,1.687,137,1.191,138,1.191,139,1.191,140,1.191,141,1.191,142,0.036,143,0.05,144,0.036,278,0.963]],["title/classes/NgcConfig.html",[114,0.221,163,0.716]],["body/classes/NgcConfig.html",[1,0.387,3,0.445,4,0.445,5,0.344,6,0.344,7,0.344,9,0.561,11,0.82,17,0.969,19,1.224,21,1.185,22,1.067,30,0.561,49,0.085,52,0.696,55,0.561,57,0.969,71,1.135,75,0.561,76,1.067,78,0.561,81,0.561,90,0.969,91,0.651,96,1.185,98,0.445,99,0.846,103,0.344,104,0.445,105,0.561,108,0.769,109,0.173,110,0.654,111,0.82,114,0.253,116,0.445,126,1.185,130,0.969,142,0.032,143,0.046,144,0.032,163,0.969,167,0.696,168,0.858,170,0.858,173,0.82,174,0.696,176,0.858,177,1.062,178,1.553,179,1.062,182,1.062,183,1.062,188,1.062,190,1.062,191,1.062,192,1.553,194,1.062,195,1.835,196,1.062,197,1.062,198,2.041,199,1.062,202,2.148,206,1.062,208,1.062,209,1.018,211,1.835,212,1.062,213,2.019,215,1.553,217,1.062,218,1.062,219,1.062,220,1.062,221,1.062,222,1.062,223,1.062,224,1.062,225,1.062,226,1.062,227,1.062,228,1.062,229,1.062,230,1.062,231,1.062,232,1.062,233,1.553,234,1.062,235,1.062,236,1.062,237,1.062,238,1.062,239,1.062,240,1.062,241,1.062,242,1.553,243,1.553,244,1.553,245,1.062,246,1.062,247,1.062,248,1.062,249,1.553,250,1.553,251,1.062,252,1.062,253,1.835,254,1.553,255,1.062,256,1.062,257,1.062,258,2.019,259,1.062,260,1.062,261,1.062,262,1.062,263,1.062,264,1.062,265,1.553,266,1.062,267,1.062,268,1.062,269,1.062,270,1.062,271,1.553,272,1.553,273,1.062,274,1.062,275,1.062,276,1.062,277,1.062,279,1.747]],["title/interfaces/NgcElementChange.html",[109,0.221,110,0.439]],["body/interfaces/NgcElementChange.html",[0,0.898,1,0.381,3,0.505,4,0.505,5,0.39,6,0.39,7,0.39,8,0.973,9,0.636,10,1.699,11,0.898,13,1.204,14,1.699,15,0.636,16,1.114,17,1.04,18,2.341,19,1.402,20,1.204,21,1.338,22,1.04,23,1.699,24,1.204,25,0.973,26,1.204,28,1.204,29,1.204,30,0.636,31,1.204,32,1.204,33,1.699,34,1.204,36,1.204,37,1.204,38,1.204,40,1.204,45,1.699,49,0.085,51,0.712,53,1.204,55,1.192,57,1.13,60,1.204,62,2.256,67,1.204,68,1.204,69,1.204,71,1.271,75,0.636,76,0.898,78,0.636,80,1.699,81,0.636,83,1.969,85,1.204,86,0.973,87,1.204,88,1.699,90,1.192,91,0.897,96,0.898,98,0.505,99,0.712,100,1.969,101,2.139,102,1.204,103,0.39,104,0.505,105,1.13,106,1.699,107,1.699,108,0.825,109,0.277,110,0.55,111,1.353,112,0.789,113,1.204,114,0.196,115,1.699,116,0.712,117,1.204,118,1.204,119,1.204,120,1.699,121,1.204,122,1.969,123,1.699,124,1.699,125,1.204,126,0.898,127,1.204,128,1.204,129,1.204,130,0.636,131,1.204,132,1.204,133,1.204,134,1.204,135,1.204,136,1.699,137,1.204,138,1.204,139,1.204,140,1.204,141,1.204,142,0.036,143,0.051,144,0.036,278,0.973]],["title/interfaces/NgcTrackedElement.html",[109,0.221,209,0.888]],["body/interfaces/NgcTrackedElement.html",[1,0.384,3,0.435,4,0.435,5,0.336,6,0.336,7,0.336,9,0.548,11,0.807,15,0.548,16,1.001,17,0.957,19,1.216,21,1.176,22,1.216,30,0.548,49,0.085,51,0.64,52,0.681,55,0.548,57,1.124,71,1.124,75,0.548,76,1.055,78,0.548,81,0.548,90,0.957,91,0.64,96,1.312,98,0.435,99,0.837,103,0.336,104,0.435,105,0.548,108,0.759,109,0.169,110,0.647,111,0.807,114,0.249,116,0.435,126,1.176,130,0.957,142,0.031,143,0.046,144,0.031,163,0.807,167,0.681,168,0.839,170,0.839,173,0.807,174,0.681,176,0.839,177,1.038,178,1.527,179,1.038,182,1.038,183,1.038,188,1.038,190,1.038,191,1.038,192,1.527,194,1.038,195,1.811,196,1.038,197,1.038,198,2.032,199,1.038,202,2.129,206,1.038,208,1.038,209,1.188,211,1.811,212,1.038,213,1.997,215,1.527,217,1.038,218,1.038,219,1.038,220,1.038,221,1.038,222,1.038,223,1.038,224,1.038,225,1.038,226,1.038,227,1.038,228,1.038,229,1.038,230,1.038,231,1.038,232,1.038,233,1.527,234,1.038,235,1.038,236,1.038,237,1.038,238,1.038,239,1.038,240,1.038,241,1.038,242,1.527,243,1.527,244,1.527,245,1.038,246,1.038,247,1.038,248,1.038,249,1.527,250,1.527,251,1.038,252,1.038,253,1.811,254,1.527,255,1.038,256,1.038,257,1.038,258,1.997,259,1.038,260,1.038,261,1.038,262,1.038,263,1.038,264,1.038,265,1.527,266,1.038,267,1.038,268,1.038,269,1.038,270,1.038,271,1.527,272,1.527,273,1.038,274,1.038,275,1.038,276,1.038,277,1.038,278,0.839]],["title/coverage.html",[280,2.317]],["body/coverage.html",[0,0.997,1,0.307,5,0.611,6,0.859,7,0.859,8,1.984,49,0.081,51,0.791,91,0.791,98,1.069,109,0.399,110,0.611,112,1.237,114,0.307,142,0.056,143,0.068,144,0.056,163,0.997,173,0.997,174,1.237,176,1.984,209,1.237,280,2.371,281,2.371,282,3.106,283,3.106,284,3.106,285,3.106,286,3.106,287,3.756,288,3.106,289,3.106,290,3.106,291,3.106,292,3.106]],["title/dependencies.html",[148,1.316,293,1.866]],["body/dependencies.html",[49,0.083,103,0.637,104,0.824,142,0.059,143,0.07,144,0.059,148,1.59,294,3.237,295,4.488,296,3.237,297,3.237,298,3.237,299,3.85,300,2.94,301,3.237,302,3.237,303,3.237,304,3.237,305,3.237,306,3.237,307,3.237,308,3.237,309,3.237]],["title/index.html",[15,0.599,310,1.866,311,1.866]],["body/index.html",[49,0.068,86,1.526,142,0.056,143,0.068,144,0.056,167,1.237,198,1.526,281,2.371,312,3.106,313,3.106,314,3.106,315,3.106,316,3.106,317,3.106,318,4.038,319,3.756,320,3.756,321,4.195,322,3.106,323,4.296,324,4.038,325,3.106,326,3.106,327,3.106,328,3.106,329,3.106,330,3.106,331,3.106,332,3.106,333,3.106,334,3.756,335,4.195,336,3.106,337,3.756,338,3.756,339,3.106,340,4.195,341,3.106,342,3.106]],["title/modules.html",[147,1.844]],["body/modules.html",[49,0.074,142,0.064,143,0.074,144,0.064,146,1.737,147,2.148,300,2.699,343,3.535,344,3.535,345,3.535]],["title/overview.html",[346,2.317]],["body/overview.html",[0,1.042,1,0.441,49,0.077,114,0.321,142,0.059,143,0.07,144,0.059,145,2.343,146,2.136,148,1.594,149,2.477,150,2.477,151,2.477,152,2.477,153,2.477,154,2.477,155,2.477,156,2.477,157,2.944,158,2.477,159,2.477,173,1.042,278,1.594,346,2.477,347,4.257,348,3.245]]],"invertedIndex":[["",{"_index":49,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["0",{"_index":98,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{}}}],["0.10.2",{"_index":309,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":288,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":287,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":286,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":347,"title":{},"body":{"overview.html":{}}}],["10",{"_index":313,"title":{},"body":{"index.html":{}}}],["10.1.5",{"_index":295,"title":{},"body":{"dependencies.html":{}}}],["10.2.4",{"_index":304,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":60,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["2.0.0",{"_index":307,"title":{},"body":{"dependencies.html":{}}}],["22",{"_index":284,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":348,"title":{},"body":{"overview.html":{}}}],["5/22",{"_index":285,"title":{},"body":{"coverage.html":{}}}],["6.6.0",{"_index":305,"title":{},"body":{"dependencies.html":{}}}],["66",{"_index":289,"title":{},"body":{"coverage.html":{}}}],["8/12",{"_index":290,"title":{},"body":{"coverage.html":{}}}],["active",{"_index":18,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["add",{"_index":115,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["addtrackedelement",{"_index":180,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["addtrackedelement(element",{"_index":188,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["aftercontentchecked",{"_index":10,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["angular",{"_index":167,"title":{},"body":{"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{},"index.html":{}}}],["angular/animations",{"_index":294,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":303,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":296,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler",{"_index":297,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":103,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":298,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":299,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":302,"title":{},"body":{"dependencies.html":{}}}],["angularcollisiondirective",{"_index":1,"title":{"directives/AngularCollisionDirective.html":{}},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{},"overview.html":{}}}],["angularcollisiondirective.uid",{"_index":121,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["angularcollisionmodule",{"_index":146,"title":{"modules/AngularCollisionModule.html":{}},"body":{"modules/AngularCollisionModule.html":{},"modules.html":{},"overview.html":{}}}],["angularcollisionservice",{"_index":174,"title":{"injectables/AngularCollisionService.html":{}},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{}}}],["app",{"_index":320,"title":{},"body":{"index.html":{}}}],["array.isarray(elements",{"_index":242,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["artifacts",{"_index":326,"title":{},"body":{"index.html":{}}}],["auto",{"_index":316,"title":{},"body":{"index.html":{}}}],["between",{"_index":196,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["boolean",{"_index":55,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["bootstrap",{"_index":151,"title":{},"body":{"modules/AngularCollisionModule.html":{},"overview.html":{}}}],["browse",{"_index":345,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":300,"title":{},"body":{"dependencies.html":{},"modules.html":{}}}],["build",{"_index":323,"title":{},"body":{"index.html":{}}}],["change",{"_index":264,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["check",{"_index":67,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["checkelementscollision",{"_index":181,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["checkelementscollision(first",{"_index":191,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["checkposition",{"_index":28,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["checks",{"_index":194,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["class",{"_index":114,"title":{"classes/NgcConfig.html":{}},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{},"overview.html":{}}}],["class.collision",{"_index":42,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["classes",{"_index":279,"title":{},"body":{"classes/NgcConfig.html":{}}}],["cluster_angularcollisionmodule",{"_index":154,"title":{},"body":{"modules/AngularCollisionModule.html":{},"overview.html":{}}}],["cluster_angularcollisionmodule_declarations",{"_index":156,"title":{},"body":{"modules/AngularCollisionModule.html":{},"overview.html":{}}}],["cluster_angularcollisionmodule_exports",{"_index":155,"title":{},"body":{"modules/AngularCollisionModule.html":{},"overview.html":{}}}],["collidedelements",{"_index":83,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["collidedids",{"_index":127,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["collision",{"_index":86,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"index.html":{}}}],["collision.directive",{"_index":168,"title":{},"body":{"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["collision.directive.ts",{"_index":8,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"coverage.html":{}}}],["collision.directive.ts:108",{"_index":77,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:117",{"_index":79,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:32",{"_index":56,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:33",{"_index":61,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:34",{"_index":54,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:36",{"_index":64,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:39",{"_index":63,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:43",{"_index":65,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:45",{"_index":95,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:46",{"_index":92,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:47",{"_index":94,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:49",{"_index":97,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:50",{"_index":89,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:51",{"_index":47,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:53",{"_index":93,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:57",{"_index":72,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:63",{"_index":73,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:74",{"_index":84,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:85",{"_index":66,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:95",{"_index":74,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.module.ts",{"_index":160,"title":{},"body":{"modules/AngularCollisionModule.html":{}}}],["collision.module.ts:10",{"_index":164,"title":{},"body":{"modules/AngularCollisionModule.html":{}}}],["collision.service",{"_index":169,"title":{},"body":{"modules/AngularCollisionModule.html":{}}}],["collision.service.ts",{"_index":176,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{}}}],["collision.service.ts:100",{"_index":205,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["collision.service.ts:121",{"_index":193,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["collision.service.ts:137",{"_index":189,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["collision.service.ts:155",{"_index":207,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["collision.service.ts:23",{"_index":210,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["collision.service.ts:28",{"_index":214,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["collision.service.ts:33",{"_index":216,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["collision.service.ts:37",{"_index":186,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["collision.service.ts:69",{"_index":200,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["collision.service.ts:80",{"_index":203,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["collision/src/lib/angular",{"_index":7,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{}}}],["collisionactive",{"_index":118,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["collisionactivechange",{"_index":40,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["collisions",{"_index":195,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["collisions.length",{"_index":239,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["collisions.push(innerelement.element",{"_index":237,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["config",{"_index":116,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["const",{"_index":130,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["constructor",{"_index":43,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{}}}],["constructor(@optional",{"_index":223,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["constructor(config",{"_index":185,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["constructor(element",{"_index":44,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["constructor(public",{"_index":119,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["coverage",{"_index":280,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["customevents",{"_index":36,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["declarations",{"_index":150,"title":{},"body":{"modules/AngularCollisionModule.html":{},"overview.html":{}}}],["default",{"_index":58,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{}}}],["defined",{"_index":46,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{}}}],["demo",{"_index":319,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":148,"title":{"dependencies.html":{}},"body":{"modules/AngularCollisionModule.html":{},"dependencies.html":{},"overview.html":{}}}],["destroy",{"_index":20,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["detection",{"_index":315,"title":{},"body":{"index.html":{}}}],["directive",{"_index":0,"title":{"directives/AngularCollisionDirective.html":{}},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"coverage.html":{},"overview.html":{}}}],["directives",{"_index":2,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["directory",{"_index":329,"title":{},"body":{"index.html":{}}}],["disableinterval",{"_index":37,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["dist",{"_index":328,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":281,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["domrect",{"_index":111,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["dynamic",{"_index":301,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":341,"title":{},"body":{"index.html":{}}}],["el.id",{"_index":257,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["element",{"_index":21,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["element.domrect",{"_index":235,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["element.element.updatecollisionstate",{"_index":238,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["element.id",{"_index":258,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["element.rectanglechange",{"_index":260,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["element.starttracking",{"_index":259,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["element.stoptracking",{"_index":267,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["elementref",{"_index":45,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["elements",{"_index":198,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{},"index.html":{}}}],["elements.foreach((element",{"_index":244,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["elementsmap.foreach",{"_index":231,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["elementsmap.foreach((element",{"_index":230,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["emit",{"_index":68,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["end",{"_index":340,"title":{},"body":{"index.html":{}}}],["eventemitter",{"_index":62,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["execute",{"_index":337,"title":{},"body":{"index.html":{}}}],["export",{"_index":108,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["exportas",{"_index":113,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["exports",{"_index":153,"title":{},"body":{"modules/AngularCollisionModule.html":{},"overview.html":{}}}],["false",{"_index":88,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["file",{"_index":5,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{}}}],["files",{"_index":107,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["finish",{"_index":208,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["first",{"_index":199,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["first.bottom",{"_index":251,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["first.left",{"_index":253,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["first.top",{"_index":249,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["flag",{"_index":332,"title":{},"body":{"index.html":{}}}],["forroot",{"_index":161,"title":{},"body":{"modules/AngularCollisionModule.html":{}}}],["forroot(config",{"_index":162,"title":{},"body":{"modules/AngularCollisionModule.html":{}}}],["foundelement",{"_index":269,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["foundelement.subscription.closed",{"_index":274,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["foundelement.subscription.unsubscribe",{"_index":275,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["foundelement?.subscription",{"_index":273,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["generated",{"_index":317,"title":{},"body":{"index.html":{}}}],["getting",{"_index":310,"title":{"index.html":{}},"body":{}}],["hostbinding",{"_index":102,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["hostbinding('class.collision",{"_index":117,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["hostbindings",{"_index":41,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["id",{"_index":22,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["identifier",{"_index":282,"title":{},"body":{"coverage.html":{}}}],["ids",{"_index":212,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["implements",{"_index":9,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["import",{"_index":99,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["index",{"_index":15,"title":{"index.html":{}},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["info",{"_index":3,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["init",{"_index":190,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["injectable",{"_index":173,"title":{"injectables/AngularCollisionService.html":{}},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":175,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["innerelement",{"_index":232,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["innerelement.domrect",{"_index":236,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["innerid",{"_index":233,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["input",{"_index":101,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["inputs",{"_index":35,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["instanceof",{"_index":243,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["interface",{"_index":109,"title":{"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{}}}],["interfaces",{"_index":278,"title":{},"body":{"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"overview.html":{}}}],["intervaltime",{"_index":38,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["karma",{"_index":339,"title":{},"body":{"index.html":{}}}],["legend",{"_index":149,"title":{},"body":{"modules/AngularCollisionModule.html":{},"overview.html":{}}}],["library",{"_index":314,"title":{},"body":{"index.html":{}}}],["map",{"_index":213,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["matching",{"_index":143,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["metadata",{"_index":12,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["methods",{"_index":27,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{}}}],["module",{"_index":145,"title":{"modules/AngularCollisionModule.html":{}},"body":{"modules/AngularCollisionModule.html":{},"overview.html":{}}}],["modules",{"_index":147,"title":{"modules.html":{}},"body":{"modules/AngularCollisionModule.html":{},"modules.html":{}}}],["modulewithproviders",{"_index":165,"title":{},"body":{"modules/AngularCollisionModule.html":{}}}],["move",{"_index":106,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["name",{"_index":50,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{}}}],["new",{"_index":91,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{}}}],["ng",{"_index":321,"title":{},"body":{"index.html":{}}}],["ngaftercontentchecked",{"_index":29,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["ngcangularcollision",{"_index":14,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["ngccollisionchange",{"_index":112,"title":{"interfaces/NgcCollisionChange.html":{}},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"coverage.html":{}}}],["ngcconfig",{"_index":163,"title":{"classes/NgcConfig.html":{}},"body":{"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{}}}],["ngcelementchange",{"_index":110,"title":{"interfaces/NgcElementChange.html":{}},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{}}}],["ngcollision",{"_index":312,"title":{},"body":{"index.html":{}}}],["ngctrackedelement",{"_index":209,"title":{"interfaces/NgcTrackedElement.html":{}},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{}}}],["ngmodule",{"_index":166,"title":{},"body":{"modules/AngularCollisionModule.html":{}}}],["ngondestroy",{"_index":30,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["number",{"_index":57,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["observable",{"_index":81,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["ondestroy",{"_index":11,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["optional",{"_index":52,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["out",{"_index":159,"title":{},"body":{"modules/AngularCollisionModule.html":{},"overview.html":{}}}],["output",{"_index":100,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["outputs",{"_index":39,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["overview",{"_index":346,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":293,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":126,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["parameters",{"_index":48,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{}}}],["performance",{"_index":229,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["pipe(takeuntil(element.destroy",{"_index":261,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["pipe(throttletime(100",{"_index":226,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["position",{"_index":69,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["positions",{"_index":215,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["private",{"_index":17,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["prod",{"_index":331,"title":{},"body":{"index.html":{}}}],["production",{"_index":333,"title":{},"body":{"index.html":{}}}],["project",{"_index":325,"title":{},"body":{"index.html":{}}}],["projects/angular",{"_index":6,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{}}}],["properties",{"_index":16,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["protractor",{"_index":342,"title":{},"body":{"index.html":{}}}],["provide",{"_index":171,"title":{},"body":{"modules/AngularCollisionModule.html":{}}}],["providedin",{"_index":221,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["providers",{"_index":152,"title":{},"body":{"modules/AngularCollisionModule.html":{},"overview.html":{}}}],["public",{"_index":19,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["querylist",{"_index":202,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["rectanglechange",{"_index":23,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["register",{"_index":182,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["register(elements",{"_index":201,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["remove",{"_index":183,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["remove(elements",{"_index":204,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["removetrackedelement",{"_index":184,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["removetrackedelement(element",{"_index":206,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["reset",{"_index":158,"title":{},"body":{"modules/AngularCollisionModule.html":{},"overview.html":{}}}],["result",{"_index":142,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["results",{"_index":144,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["return",{"_index":170,"title":{},"body":{"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["returns",{"_index":70,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{}}}],["root",{"_index":222,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["run",{"_index":324,"title":{},"body":{"index.html":{}}}],["running",{"_index":318,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":104,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":220,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["second",{"_index":192,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["second.bottom",{"_index":252,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["second.left",{"_index":254,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["second.right",{"_index":255,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["second.top",{"_index":250,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["selector",{"_index":13,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["serve",{"_index":322,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["start",{"_index":75,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["started",{"_index":311,"title":{"index.html":{}},"body":{}}],["starttracking",{"_index":31,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["statements",{"_index":283,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":25,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["status",{"_index":87,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["stop",{"_index":78,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["stoptracking",{"_index":32,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["stored",{"_index":327,"title":{},"body":{"index.html":{}}}],["string",{"_index":53,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["subject",{"_index":90,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["subscribe((change",{"_index":262,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["subscribe((elementsmap",{"_index":227,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["subscription",{"_index":96,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["support",{"_index":343,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":344,"title":{},"body":{"modules.html":{}}}],["table",{"_index":292,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":291,"title":{},"body":{"coverage.html":{}}}],["takeuntil",{"_index":218,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["test",{"_index":336,"title":{},"body":{"index.html":{}}}],["tests",{"_index":335,"title":{},"body":{"index.html":{}}}],["this.active",{"_index":122,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.addtrackedelement(element",{"_index":245,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["this.addtrackedelement(elements",{"_index":246,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["this.checkelementscollision",{"_index":234,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["this.checkposition",{"_index":123,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.collisionactive",{"_index":128,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.collisionactivechange.emit",{"_index":129,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.destroy$.next(this.id",{"_index":125,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.disableinterval",{"_index":135,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.element.nativeelement.getboundingclientrect",{"_index":131,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.id",{"_index":120,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.intervaltime).subscribe",{"_index":138,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.rectanglechange$.next",{"_index":132,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.rectanglechange.emit",{"_index":133,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.removetrackedelement(element",{"_index":247,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["this.removetrackedelement(elements",{"_index":248,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["this.timersubscription",{"_index":136,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.timersubscription.closed",{"_index":140,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.timersubscription.unsubscribe",{"_index":141,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.trackedelements",{"_index":276,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["this.trackedelements.filter",{"_index":277,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["this.trackedelements.find",{"_index":270,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["this.trackedelements.push",{"_index":266,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["this.trackedelements.some((el",{"_index":256,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["this.trackedelementspositions",{"_index":225,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["this.trackedelementspositions$.next(this.trackedelementspositions",{"_index":265,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["this.trackedelementspositions.delete(element.id",{"_index":268,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["this.trackedelementspositions.set(change.element.id",{"_index":263,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["this.trackedelementspositionsubscription",{"_index":224,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["this.trackedelementspositionsubscription.closed",{"_index":240,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["this.trackedelementspositionsubscription.unsubscribe",{"_index":241,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["this.unsubscribe",{"_index":124,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.updatecollisionstate(false",{"_index":139,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["throttletime",{"_index":219,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["timer",{"_index":80,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["timer(0",{"_index":137,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["timersubscription",{"_index":24,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["todo",{"_index":105,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["tracked",{"_index":211,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["trackedelement",{"_index":271,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["trackedelement.id",{"_index":272,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["trackedelements",{"_index":177,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["trackedelementspositions",{"_index":178,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["trackedelementspositionsubscription",{"_index":179,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["tracking",{"_index":76,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["true",{"_index":134,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["tslib",{"_index":306,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":197,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["type",{"_index":51,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{}}}],["uid",{"_index":26,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["unit",{"_index":334,"title":{},"body":{"index.html":{}}}],["unsubscribe",{"_index":33,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["update",{"_index":85,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["updatecollisionstate",{"_index":34,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["updatecollisionstate(active",{"_index":82,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["use",{"_index":330,"title":{},"body":{"index.html":{}}}],["usevalue",{"_index":172,"title":{},"body":{"modules/AngularCollisionModule.html":{}}}],["value",{"_index":59,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{}}}],["via",{"_index":338,"title":{},"body":{"index.html":{}}}],["void",{"_index":71,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["work",{"_index":228,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["wrapper",{"_index":217,"title":{},"body":{"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{}}}],["yes",{"_index":187,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["zone.js",{"_index":308,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":157,"title":{},"body":{"modules/AngularCollisionModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"directives/AngularCollisionDirective.html":{"url":"directives/AngularCollisionDirective.html","title":"directive - AngularCollisionDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  AngularCollisionDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-collision/src/lib/angular-collision.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            AfterContentChecked\n                            OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [ngcAngularCollision]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                active\n                            \n                            \n                                    Public\n                                destroy$\n                            \n                            \n                                    Public\n                                element\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                rectangleChange$\n                            \n                            \n                                    Private\n                                timerSubscription\n                            \n                            \n                                    Private\n                                    Static\n                                uid\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                checkPosition\n                            \n                            \n                                    Public\n                                ngAfterContentChecked\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                startTracking\n                            \n                            \n                                    Public\n                                stopTracking\n                            \n                            \n                                    Public\n                                unsubscribe\n                            \n                            \n                                    Public\n                                updateCollisionState\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                customEvents\n                            \n                            \n                                disableInterval\n                            \n                            \n                                intervalTime\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                collisionActiveChange\n                            \n                            \n                                rectangleChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class.collision\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(element: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:51\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        customEvents\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disableInterval\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        intervalTime\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 100\n                    \n                \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:33\n                            \n                        \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        collisionActiveChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rectangleChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:36\n                            \n                        \n            \n        \n\n            \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class.collision\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:43\n                            \n                        \n\n\n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            checkPosition\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkPosition()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:85\n                \n            \n\n\n            \n                \n                    Check and emit element position\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngAfterContentChecked\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterContentChecked()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            startTracking\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    startTracking()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:95\n                \n            \n\n\n            \n                \n                    Start tracking element\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            stopTracking\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    stopTracking()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:108\n                \n            \n\n\n            \n                \n                    Stop tracking element\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            unsubscribe\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    unsubscribe()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:117\n                \n            \n\n\n            \n                \n                    Unsubscribe timer observable\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateCollisionState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateCollisionState(active: boolean, collidedElements: AngularCollisionDirective[])\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:74\n                \n            \n\n\n            \n                \n                    Update collision status\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    active\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    collidedElements\n                                    \n                                            AngularCollisionDirective[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            active\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            destroy$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            element\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rectangleChange$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            timerSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            uid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:51\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import {\n  Directive,\n  AfterContentChecked,\n  ElementRef,\n  Output,\n  EventEmitter,\n  OnDestroy,\n  Input,\n  HostBinding,\n} from '@angular/core';\nimport { timer, Subscription, Subject } from 'rxjs';\n\n// TODO: move to files\nexport interface NgcElementChange {\n  domRect: DOMRect;\n  element: AngularCollisionDirective;\n}\n\n// TODO: move to files\nexport interface NgcCollisionChange {\n  id: number;\n  active: boolean;\n  collidedElements: AngularCollisionDirective[];\n}\n\n@Directive({\n  selector: '[ngcAngularCollision]',\n  exportAs: 'ngcAngularCollision',\n})\nexport class AngularCollisionDirective\n  implements AfterContentChecked, OnDestroy {\n  @Input() public disableInterval: boolean; // TODO add to config\n  @Input() public intervalTime: number = 100; // TODO add to config\n  @Input() public customEvents: string[];\n\n  @Output() public rectangleChange: EventEmitter = new EventEmitter();\n  @Output() public collisionActiveChange: EventEmitter = new EventEmitter();\n\n  @HostBinding('class.collision') public collisionActive: boolean;\n\n  public rectangleChange$: Subject = new Subject();\n  public destroy$: Subject = new Subject();\n  public id: number;\n\n  private timerSubscription: Subscription;\n  private active: boolean = false;\n  private static uid: number = 0;\n\n  constructor(public element: ElementRef) {\n    this.id = AngularCollisionDirective.uid++;\n  }\n\n  public ngAfterContentChecked(): void {\n    if (this.active) {\n      this.checkPosition();\n    }\n  }\n\n  public ngOnDestroy(): void {\n    this.unsubscribe();\n    this.destroy$.next(this.id);\n  }\n\n  /**\n   * Update collision status\n   *\n   * @param active\n   * @param collidedIds\n   */\n  public updateCollisionState(\n    active: boolean,\n    collidedElements: AngularCollisionDirective[]\n  ): void {\n    this.collisionActive = active;\n    this.collisionActiveChange.emit({ id: this.id, active, collidedElements });\n  }\n\n  /**\n   * Check and emit element position\n   */\n  public checkPosition(): void {\n    const domRect: DOMRect = this.element.nativeElement.getBoundingClientRect();\n\n    this.rectangleChange$.next({ domRect, element: this });\n    this.rectangleChange.emit({ domRect, element: this });\n  }\n\n  /**\n   * Start tracking element\n   */\n  public startTracking(): void {\n    this.active = true;\n\n    if (!this.disableInterval) {\n      this.timerSubscription = timer(0, this.intervalTime).subscribe(() => {\n        this.checkPosition();\n      });\n    }\n  }\n\n  /**\n   * Stop tracking element\n   */\n  public stopTracking(): void {\n    this.active = false;\n    this.updateCollisionState(false, []);\n    this.unsubscribe();\n  }\n\n  /**\n   * Unsubscribe timer observable\n   */\n  public unsubscribe(): void {\n    if (this.timerSubscription && !this.timerSubscription.closed) {\n      this.timerSubscription.unsubscribe();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AngularCollisionModule.html":{"url":"modules/AngularCollisionModule.html","title":"module - AngularCollisionModule","body":"\n                   \n\n\n\n\n    Modules\n    AngularCollisionModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AngularCollisionModule\n\n\n\ncluster_AngularCollisionModule_exports\n\n\n\ncluster_AngularCollisionModule_declarations\n\n\n\n\nAngularCollisionDirective\n\nAngularCollisionDirective\n\n\n\nAngularCollisionModule\n\nAngularCollisionModule\n\nAngularCollisionModule -->\n\nAngularCollisionDirective->AngularCollisionModule\n\n\n\n\n\nAngularCollisionDirective \n\nAngularCollisionDirective \n\nAngularCollisionDirective  -->\n\nAngularCollisionModule->AngularCollisionDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/angular-collision/src/lib/angular-collision.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AngularCollisionDirective\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AngularCollisionDirective\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(config: NgcConfig)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.module.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                NgcConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { AngularCollisionDirective } from './angular-collision.directive';\nimport { NgcConfig } from './angular-collision.service';\n\n@NgModule({\n  declarations: [AngularCollisionDirective],\n  exports: [AngularCollisionDirective],\n})\nexport class AngularCollisionModule {\n  static forRoot(\n    config: NgcConfig\n  ): ModuleWithProviders {\n    return {\n      ngModule: AngularCollisionModule,\n      providers: [{ provide: NgcConfig, useValue: config }],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AngularCollisionService.html":{"url":"injectables/AngularCollisionService.html","title":"injectable - AngularCollisionService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AngularCollisionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-collision/src/lib/angular-collision.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                trackedElements\n                            \n                            \n                                    Public\n                                trackedElementsPositions\n                            \n                            \n                                    Public\n                                trackedElementsPositions$\n                            \n                            \n                                    Public\n                                trackedElementsPositionSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addTrackedElement\n                            \n                            \n                                    Private\n                                checkElementsCollision\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                register\n                            \n                            \n                                    Public\n                                remove\n                            \n                            \n                                    Private\n                                removeTrackedElement\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config?: NgcConfig)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-collision/src/lib/angular-collision.service.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        NgcConfig\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            addTrackedElement\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addTrackedElement(element: AngularCollisionDirective)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.service.ts:137\n                \n            \n\n\n            \n                \n                    Init tracking of element\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    element\n                                    \n                                            AngularCollisionDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            checkElementsCollision\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkElementsCollision(first: DOMRect, second: DOMRect)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.service.ts:121\n                \n            \n\n\n            \n                \n                    Checks collisions between two elements\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    first\n                                    \n                                            DOMRect\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    second\n                                    \n                                            DOMRect\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            register\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    register(elements: QueryList | AngularCollisionDirective | AngularCollisionDirective[])\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.service.ts:80\n                \n            \n\n\n            \n                \n                    Start tracking element / elements\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    elements\n                                    \n                                            QueryList | AngularCollisionDirective | AngularCollisionDirective[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(elements: QueryList | AngularCollisionDirective | AngularCollisionDirective[])\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.service.ts:100\n                \n            \n\n\n            \n                \n                    Stop tracking element / elements\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    elements\n                                    \n                                            QueryList | AngularCollisionDirective | AngularCollisionDirective[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            removeTrackedElement\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeTrackedElement(element: AngularCollisionDirective)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.service.ts:155\n                \n            \n\n\n            \n                \n                    Finish tracking of element\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    element\n                                    \n                                            AngularCollisionDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            trackedElements\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgcTrackedElement[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.service.ts:23\n                            \n                        \n\n                \n                    \n                        Tracked elements ids\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            trackedElementsPositions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Map\n\n                        \n                    \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.service.ts:28\n                            \n                        \n\n                \n                    \n                        Map of tracked elements positions\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            trackedElementsPositions$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Subject>\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.service.ts:33\n                            \n                        \n\n                \n                    \n                        Observable wrapper of tracked elements positions\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            trackedElementsPositionSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.service.ts:37\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, OnDestroy, Optional, QueryList } from '@angular/core';\nimport { takeUntil, throttleTime } from 'rxjs/operators';\nimport { Subject, Subscription } from 'rxjs';\nimport {\n  AngularCollisionDirective,\n  NgcElementChange,\n} from './angular-collision.directive';\n\nexport class NgcConfig {}\n\nexport interface NgcTrackedElement {\n  id: number;\n  subscription: Subscription;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AngularCollisionService implements OnDestroy {\n  /**\n   *  Tracked elements ids\n   */\n  public trackedElements: NgcTrackedElement[] = [];\n\n  /**\n   *  Map of tracked elements positions\n   */\n  public trackedElementsPositions: Map = new Map();\n\n  /**\n   *  Observable wrapper of tracked elements positions\n   */\n  public trackedElementsPositions$: Subject\n  > = new Subject();\n\n  public trackedElementsPositionSubscription: Subscription;\n\n  constructor(@Optional() config?: NgcConfig) {\n    this.trackedElementsPositionSubscription = this.trackedElementsPositions$\n      .pipe(throttleTime(100))\n      .subscribe((elementsMap: Map) => {\n        // TODO work on performance\n        elementsMap.forEach((element: NgcElementChange, id: number) => {\n          const collisions: AngularCollisionDirective[] = [];\n\n          elementsMap.forEach(\n            (innerElement: NgcElementChange, innerId: number) => {\n              if (\n                id !== innerId &&\n                this.checkElementsCollision(\n                  element.domRect,\n                  innerElement.domRect\n                )\n              ) {\n                collisions.push(innerElement.element);\n              }\n            }\n          );\n\n          element.element.updateCollisionState(\n            collisions.length > 0,\n            collisions\n          );\n        });\n      });\n  }\n\n  public ngOnDestroy(): void {\n    if (!this.trackedElementsPositionSubscription.closed) {\n      this.trackedElementsPositionSubscription.unsubscribe();\n    }\n  }\n\n  /**\n   * Start tracking element / elements\n   *\n   * @param elements\n   */\n  public register(\n    elements:\n      | QueryList\n      | AngularCollisionDirective\n      | AngularCollisionDirective[]\n  ): void {\n    if (Array.isArray(elements) || elements instanceof QueryList) {\n      elements.forEach((element) => {\n        this.addTrackedElement(element);\n      });\n    } else {\n      this.addTrackedElement(elements);\n    }\n  }\n\n  /**\n   * Stop tracking element / elements\n   *\n   * @param elements\n   */\n  public remove(\n    elements:\n      | QueryList\n      | AngularCollisionDirective\n      | AngularCollisionDirective[]\n  ): void {\n    if (Array.isArray(elements) || elements instanceof QueryList) {\n      elements.forEach((element) => {\n        this.removeTrackedElement(element);\n      });\n    } else {\n      this.removeTrackedElement(elements);\n    }\n  }\n\n  /**\n   * Checks collisions between two elements\n   *\n   * @param first\n   * @param second\n   */\n  private checkElementsCollision(first: DOMRect, second: DOMRect): boolean {\n    return (\n      ((first.top = second.top) ||\n        (first.bottom = second.top) ||\n        (first.top = second.bottom)) &&\n      ((first.left >= second.left && first.left = second.left) ||\n        (first.left = second.right))\n    );\n  }\n\n  /**\n   * Init tracking of element\n   *\n   * @param element\n   */\n  private addTrackedElement(element: AngularCollisionDirective): void {\n    if (!this.trackedElements.some((el) => el.id == element.id)) {\n      element.startTracking();\n      const subscription = element.rectangleChange$\n        .pipe(takeUntil(element.destroy$))\n        .subscribe((change: NgcElementChange) => {\n          this.trackedElementsPositions.set(change.element.id, change);\n          this.trackedElementsPositions$.next(this.trackedElementsPositions);\n        });\n      this.trackedElements.push({ id: element.id, subscription });\n    }\n  }\n\n  /**\n   * Finish tracking of element\n   *\n   * @param element\n   */\n  private removeTrackedElement(element: AngularCollisionDirective): void {\n    element.stopTracking();\n\n    this.trackedElementsPositions.delete(element.id);\n    this.trackedElementsPositions$.next(this.trackedElementsPositions);\n\n    const foundElement = this.trackedElements.find(\n      (trackedElement) => trackedElement.id === element.id\n    );\n\n    if (foundElement?.subscription && !foundElement.subscription.closed) {\n      foundElement.subscription.unsubscribe();\n    }\n\n    this.trackedElements = this.trackedElements.filter(\n      (trackedElement) => trackedElement.id !== element.id\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgcCollisionChange.html":{"url":"interfaces/NgcCollisionChange.html","title":"interface - NgcCollisionChange","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgcCollisionChange\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-collision/src/lib/angular-collision.directive.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        active\n                                \n                                \n                                        collidedElements\n                                \n                                \n                                        id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        active\n                                    \n                                \n                                \n                                    \n                                        active:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        collidedElements\n                                    \n                                \n                                \n                                    \n                                        collidedElements:     AngularCollisionDirective[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     AngularCollisionDirective[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Directive,\n  AfterContentChecked,\n  ElementRef,\n  Output,\n  EventEmitter,\n  OnDestroy,\n  Input,\n  HostBinding,\n} from '@angular/core';\nimport { timer, Subscription, Subject } from 'rxjs';\n\n// TODO: move to files\nexport interface NgcElementChange {\n  domRect: DOMRect;\n  element: AngularCollisionDirective;\n}\n\n// TODO: move to files\nexport interface NgcCollisionChange {\n  id: number;\n  active: boolean;\n  collidedElements: AngularCollisionDirective[];\n}\n\n@Directive({\n  selector: '[ngcAngularCollision]',\n  exportAs: 'ngcAngularCollision',\n})\nexport class AngularCollisionDirective\n  implements AfterContentChecked, OnDestroy {\n  @Input() public disableInterval: boolean; // TODO add to config\n  @Input() public intervalTime: number = 100; // TODO add to config\n  @Input() public customEvents: string[];\n\n  @Output() public rectangleChange: EventEmitter = new EventEmitter();\n  @Output() public collisionActiveChange: EventEmitter = new EventEmitter();\n\n  @HostBinding('class.collision') public collisionActive: boolean;\n\n  public rectangleChange$: Subject = new Subject();\n  public destroy$: Subject = new Subject();\n  public id: number;\n\n  private timerSubscription: Subscription;\n  private active: boolean = false;\n  private static uid: number = 0;\n\n  constructor(public element: ElementRef) {\n    this.id = AngularCollisionDirective.uid++;\n  }\n\n  public ngAfterContentChecked(): void {\n    if (this.active) {\n      this.checkPosition();\n    }\n  }\n\n  public ngOnDestroy(): void {\n    this.unsubscribe();\n    this.destroy$.next(this.id);\n  }\n\n  /**\n   * Update collision status\n   *\n   * @param active\n   * @param collidedIds\n   */\n  public updateCollisionState(\n    active: boolean,\n    collidedElements: AngularCollisionDirective[]\n  ): void {\n    this.collisionActive = active;\n    this.collisionActiveChange.emit({ id: this.id, active, collidedElements });\n  }\n\n  /**\n   * Check and emit element position\n   */\n  public checkPosition(): void {\n    const domRect: DOMRect = this.element.nativeElement.getBoundingClientRect();\n\n    this.rectangleChange$.next({ domRect, element: this });\n    this.rectangleChange.emit({ domRect, element: this });\n  }\n\n  /**\n   * Start tracking element\n   */\n  public startTracking(): void {\n    this.active = true;\n\n    if (!this.disableInterval) {\n      this.timerSubscription = timer(0, this.intervalTime).subscribe(() => {\n        this.checkPosition();\n      });\n    }\n  }\n\n  /**\n   * Stop tracking element\n   */\n  public stopTracking(): void {\n    this.active = false;\n    this.updateCollisionState(false, []);\n    this.unsubscribe();\n  }\n\n  /**\n   * Unsubscribe timer observable\n   */\n  public unsubscribe(): void {\n    if (this.timerSubscription && !this.timerSubscription.closed) {\n      this.timerSubscription.unsubscribe();\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NgcConfig.html":{"url":"classes/NgcConfig.html","title":"class - NgcConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NgcConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-collision/src/lib/angular-collision.service.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable, OnDestroy, Optional, QueryList } from '@angular/core';\nimport { takeUntil, throttleTime } from 'rxjs/operators';\nimport { Subject, Subscription } from 'rxjs';\nimport {\n  AngularCollisionDirective,\n  NgcElementChange,\n} from './angular-collision.directive';\n\nexport class NgcConfig {}\n\nexport interface NgcTrackedElement {\n  id: number;\n  subscription: Subscription;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AngularCollisionService implements OnDestroy {\n  /**\n   *  Tracked elements ids\n   */\n  public trackedElements: NgcTrackedElement[] = [];\n\n  /**\n   *  Map of tracked elements positions\n   */\n  public trackedElementsPositions: Map = new Map();\n\n  /**\n   *  Observable wrapper of tracked elements positions\n   */\n  public trackedElementsPositions$: Subject\n  > = new Subject();\n\n  public trackedElementsPositionSubscription: Subscription;\n\n  constructor(@Optional() config?: NgcConfig) {\n    this.trackedElementsPositionSubscription = this.trackedElementsPositions$\n      .pipe(throttleTime(100))\n      .subscribe((elementsMap: Map) => {\n        // TODO work on performance\n        elementsMap.forEach((element: NgcElementChange, id: number) => {\n          const collisions: AngularCollisionDirective[] = [];\n\n          elementsMap.forEach(\n            (innerElement: NgcElementChange, innerId: number) => {\n              if (\n                id !== innerId &&\n                this.checkElementsCollision(\n                  element.domRect,\n                  innerElement.domRect\n                )\n              ) {\n                collisions.push(innerElement.element);\n              }\n            }\n          );\n\n          element.element.updateCollisionState(\n            collisions.length > 0,\n            collisions\n          );\n        });\n      });\n  }\n\n  public ngOnDestroy(): void {\n    if (!this.trackedElementsPositionSubscription.closed) {\n      this.trackedElementsPositionSubscription.unsubscribe();\n    }\n  }\n\n  /**\n   * Start tracking element / elements\n   *\n   * @param elements\n   */\n  public register(\n    elements:\n      | QueryList\n      | AngularCollisionDirective\n      | AngularCollisionDirective[]\n  ): void {\n    if (Array.isArray(elements) || elements instanceof QueryList) {\n      elements.forEach((element) => {\n        this.addTrackedElement(element);\n      });\n    } else {\n      this.addTrackedElement(elements);\n    }\n  }\n\n  /**\n   * Stop tracking element / elements\n   *\n   * @param elements\n   */\n  public remove(\n    elements:\n      | QueryList\n      | AngularCollisionDirective\n      | AngularCollisionDirective[]\n  ): void {\n    if (Array.isArray(elements) || elements instanceof QueryList) {\n      elements.forEach((element) => {\n        this.removeTrackedElement(element);\n      });\n    } else {\n      this.removeTrackedElement(elements);\n    }\n  }\n\n  /**\n   * Checks collisions between two elements\n   *\n   * @param first\n   * @param second\n   */\n  private checkElementsCollision(first: DOMRect, second: DOMRect): boolean {\n    return (\n      ((first.top = second.top) ||\n        (first.bottom = second.top) ||\n        (first.top = second.bottom)) &&\n      ((first.left >= second.left && first.left = second.left) ||\n        (first.left = second.right))\n    );\n  }\n\n  /**\n   * Init tracking of element\n   *\n   * @param element\n   */\n  private addTrackedElement(element: AngularCollisionDirective): void {\n    if (!this.trackedElements.some((el) => el.id == element.id)) {\n      element.startTracking();\n      const subscription = element.rectangleChange$\n        .pipe(takeUntil(element.destroy$))\n        .subscribe((change: NgcElementChange) => {\n          this.trackedElementsPositions.set(change.element.id, change);\n          this.trackedElementsPositions$.next(this.trackedElementsPositions);\n        });\n      this.trackedElements.push({ id: element.id, subscription });\n    }\n  }\n\n  /**\n   * Finish tracking of element\n   *\n   * @param element\n   */\n  private removeTrackedElement(element: AngularCollisionDirective): void {\n    element.stopTracking();\n\n    this.trackedElementsPositions.delete(element.id);\n    this.trackedElementsPositions$.next(this.trackedElementsPositions);\n\n    const foundElement = this.trackedElements.find(\n      (trackedElement) => trackedElement.id === element.id\n    );\n\n    if (foundElement?.subscription && !foundElement.subscription.closed) {\n      foundElement.subscription.unsubscribe();\n    }\n\n    this.trackedElements = this.trackedElements.filter(\n      (trackedElement) => trackedElement.id !== element.id\n    );\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgcElementChange.html":{"url":"interfaces/NgcElementChange.html","title":"interface - NgcElementChange","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgcElementChange\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-collision/src/lib/angular-collision.directive.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        domRect\n                                \n                                \n                                        element\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        domRect\n                                    \n                                \n                                \n                                    \n                                        domRect:     DOMRect\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DOMRect\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        element\n                                    \n                                \n                                \n                                    \n                                        element:     AngularCollisionDirective\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     AngularCollisionDirective\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Directive,\n  AfterContentChecked,\n  ElementRef,\n  Output,\n  EventEmitter,\n  OnDestroy,\n  Input,\n  HostBinding,\n} from '@angular/core';\nimport { timer, Subscription, Subject } from 'rxjs';\n\n// TODO: move to files\nexport interface NgcElementChange {\n  domRect: DOMRect;\n  element: AngularCollisionDirective;\n}\n\n// TODO: move to files\nexport interface NgcCollisionChange {\n  id: number;\n  active: boolean;\n  collidedElements: AngularCollisionDirective[];\n}\n\n@Directive({\n  selector: '[ngcAngularCollision]',\n  exportAs: 'ngcAngularCollision',\n})\nexport class AngularCollisionDirective\n  implements AfterContentChecked, OnDestroy {\n  @Input() public disableInterval: boolean; // TODO add to config\n  @Input() public intervalTime: number = 100; // TODO add to config\n  @Input() public customEvents: string[];\n\n  @Output() public rectangleChange: EventEmitter = new EventEmitter();\n  @Output() public collisionActiveChange: EventEmitter = new EventEmitter();\n\n  @HostBinding('class.collision') public collisionActive: boolean;\n\n  public rectangleChange$: Subject = new Subject();\n  public destroy$: Subject = new Subject();\n  public id: number;\n\n  private timerSubscription: Subscription;\n  private active: boolean = false;\n  private static uid: number = 0;\n\n  constructor(public element: ElementRef) {\n    this.id = AngularCollisionDirective.uid++;\n  }\n\n  public ngAfterContentChecked(): void {\n    if (this.active) {\n      this.checkPosition();\n    }\n  }\n\n  public ngOnDestroy(): void {\n    this.unsubscribe();\n    this.destroy$.next(this.id);\n  }\n\n  /**\n   * Update collision status\n   *\n   * @param active\n   * @param collidedIds\n   */\n  public updateCollisionState(\n    active: boolean,\n    collidedElements: AngularCollisionDirective[]\n  ): void {\n    this.collisionActive = active;\n    this.collisionActiveChange.emit({ id: this.id, active, collidedElements });\n  }\n\n  /**\n   * Check and emit element position\n   */\n  public checkPosition(): void {\n    const domRect: DOMRect = this.element.nativeElement.getBoundingClientRect();\n\n    this.rectangleChange$.next({ domRect, element: this });\n    this.rectangleChange.emit({ domRect, element: this });\n  }\n\n  /**\n   * Start tracking element\n   */\n  public startTracking(): void {\n    this.active = true;\n\n    if (!this.disableInterval) {\n      this.timerSubscription = timer(0, this.intervalTime).subscribe(() => {\n        this.checkPosition();\n      });\n    }\n  }\n\n  /**\n   * Stop tracking element\n   */\n  public stopTracking(): void {\n    this.active = false;\n    this.updateCollisionState(false, []);\n    this.unsubscribe();\n  }\n\n  /**\n   * Unsubscribe timer observable\n   */\n  public unsubscribe(): void {\n    if (this.timerSubscription && !this.timerSubscription.closed) {\n      this.timerSubscription.unsubscribe();\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgcTrackedElement.html":{"url":"interfaces/NgcTrackedElement.html","title":"interface - NgcTrackedElement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgcTrackedElement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-collision/src/lib/angular-collision.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        subscription\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subscription\n                                    \n                                \n                                \n                                    \n                                        subscription:     Subscription\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Subscription\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, OnDestroy, Optional, QueryList } from '@angular/core';\nimport { takeUntil, throttleTime } from 'rxjs/operators';\nimport { Subject, Subscription } from 'rxjs';\nimport {\n  AngularCollisionDirective,\n  NgcElementChange,\n} from './angular-collision.directive';\n\nexport class NgcConfig {}\n\nexport interface NgcTrackedElement {\n  id: number;\n  subscription: Subscription;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AngularCollisionService implements OnDestroy {\n  /**\n   *  Tracked elements ids\n   */\n  public trackedElements: NgcTrackedElement[] = [];\n\n  /**\n   *  Map of tracked elements positions\n   */\n  public trackedElementsPositions: Map = new Map();\n\n  /**\n   *  Observable wrapper of tracked elements positions\n   */\n  public trackedElementsPositions$: Subject\n  > = new Subject();\n\n  public trackedElementsPositionSubscription: Subscription;\n\n  constructor(@Optional() config?: NgcConfig) {\n    this.trackedElementsPositionSubscription = this.trackedElementsPositions$\n      .pipe(throttleTime(100))\n      .subscribe((elementsMap: Map) => {\n        // TODO work on performance\n        elementsMap.forEach((element: NgcElementChange, id: number) => {\n          const collisions: AngularCollisionDirective[] = [];\n\n          elementsMap.forEach(\n            (innerElement: NgcElementChange, innerId: number) => {\n              if (\n                id !== innerId &&\n                this.checkElementsCollision(\n                  element.domRect,\n                  innerElement.domRect\n                )\n              ) {\n                collisions.push(innerElement.element);\n              }\n            }\n          );\n\n          element.element.updateCollisionState(\n            collisions.length > 0,\n            collisions\n          );\n        });\n      });\n  }\n\n  public ngOnDestroy(): void {\n    if (!this.trackedElementsPositionSubscription.closed) {\n      this.trackedElementsPositionSubscription.unsubscribe();\n    }\n  }\n\n  /**\n   * Start tracking element / elements\n   *\n   * @param elements\n   */\n  public register(\n    elements:\n      | QueryList\n      | AngularCollisionDirective\n      | AngularCollisionDirective[]\n  ): void {\n    if (Array.isArray(elements) || elements instanceof QueryList) {\n      elements.forEach((element) => {\n        this.addTrackedElement(element);\n      });\n    } else {\n      this.addTrackedElement(elements);\n    }\n  }\n\n  /**\n   * Stop tracking element / elements\n   *\n   * @param elements\n   */\n  public remove(\n    elements:\n      | QueryList\n      | AngularCollisionDirective\n      | AngularCollisionDirective[]\n  ): void {\n    if (Array.isArray(elements) || elements instanceof QueryList) {\n      elements.forEach((element) => {\n        this.removeTrackedElement(element);\n      });\n    } else {\n      this.removeTrackedElement(elements);\n    }\n  }\n\n  /**\n   * Checks collisions between two elements\n   *\n   * @param first\n   * @param second\n   */\n  private checkElementsCollision(first: DOMRect, second: DOMRect): boolean {\n    return (\n      ((first.top = second.top) ||\n        (first.bottom = second.top) ||\n        (first.top = second.bottom)) &&\n      ((first.left >= second.left && first.left = second.left) ||\n        (first.left = second.right))\n    );\n  }\n\n  /**\n   * Init tracking of element\n   *\n   * @param element\n   */\n  private addTrackedElement(element: AngularCollisionDirective): void {\n    if (!this.trackedElements.some((el) => el.id == element.id)) {\n      element.startTracking();\n      const subscription = element.rectangleChange$\n        .pipe(takeUntil(element.destroy$))\n        .subscribe((change: NgcElementChange) => {\n          this.trackedElementsPositions.set(change.element.id, change);\n          this.trackedElementsPositions$.next(this.trackedElementsPositions);\n        });\n      this.trackedElements.push({ id: element.id, subscription });\n    }\n  }\n\n  /**\n   * Finish tracking of element\n   *\n   * @param element\n   */\n  private removeTrackedElement(element: AngularCollisionDirective): void {\n    element.stopTracking();\n\n    this.trackedElementsPositions.delete(element.id);\n    this.trackedElementsPositions$.next(this.trackedElementsPositions);\n\n    const foundElement = this.trackedElements.find(\n      (trackedElement) => trackedElement.id === element.id\n    );\n\n    if (foundElement?.subscription && !foundElement.subscription.closed) {\n      foundElement.subscription.unsubscribe();\n    }\n\n    this.trackedElements = this.trackedElements.filter(\n      (trackedElement) => trackedElement.id !== element.id\n    );\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/angular-collision/src/lib/angular-collision.directive.ts\n            \n            directive\n            AngularCollisionDirective\n            \n                22 %\n                (5/22)\n            \n        \n        \n            \n                \n                projects/angular-collision/src/lib/angular-collision.directive.ts\n            \n            interface\n            NgcCollisionChange\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/angular-collision/src/lib/angular-collision.directive.ts\n            \n            interface\n            NgcElementChange\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/angular-collision/src/lib/angular-collision.service.ts\n            \n            class\n            NgcConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular-collision/src/lib/angular-collision.service.ts\n            \n            injectable\n            AngularCollisionService\n            \n                66 %\n                (8/12)\n            \n        \n        \n            \n                \n                projects/angular-collision/src/lib/angular-collision.service.ts\n            \n            interface\n            NgcTrackedElement\n            \n                0 %\n                (0/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~10.1.5\n        \n            @angular/common : ~10.1.5\n        \n            @angular/compiler : ~10.1.5\n        \n            @angular/core : ~10.1.5\n        \n            @angular/forms : ~10.1.5\n        \n            @angular/platform-browser : ~10.1.5\n        \n            @angular/platform-browser-dynamic : ~10.1.5\n        \n            @angular/router : ~10.1.5\n        \n            @angular/cdk : ^10.2.4\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNgCollision\nAngular 10 library for elements collision detection\nAuto-generated documentation\nRunning demo app\nng serve demo-app\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AngularCollisionModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AngularCollisionModule\n\n\n\ncluster_AngularCollisionModule_declarations\n\n\n\ncluster_AngularCollisionModule_exports\n\n\n\n\nAngularCollisionDirective\n\nAngularCollisionDirective\n\n\n\nAngularCollisionModule\n\nAngularCollisionModule\n\nAngularCollisionModule -->\n\nAngularCollisionDirective->AngularCollisionModule\n\n\n\n\n\nAngularCollisionDirective \n\nAngularCollisionDirective \n\nAngularCollisionDirective  -->\n\nAngularCollisionModule->AngularCollisionDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
