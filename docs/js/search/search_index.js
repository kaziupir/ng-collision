var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/directives/AngularCollisionDirective.html",[0,0.716,1,0.439]],["body/directives/AngularCollisionDirective.html",[0,0.824,1,0.629,2,1.079,3,0.448,4,0.275,5,0.212,6,0.83,7,1.354,8,0.53,9,0.864,10,1.353,11,1.353,12,1.094,13,1.079,14,1.069,15,1.353,16,0.275,17,0.564,18,1.979,19,1.353,20,1.353,21,1.353,22,1.353,23,1.353,24,1.094,25,1.353,26,1.759,27,1.925,28,1.718,29,1.561,30,1.273,31,1.842,32,1.069,33,1.56,34,1.56,35,1.759,36,1.261,37,1.56,38,1.56,39,1.842,40,1.353,41,1.759,42,1.094,43,1.094,44,1.759,45,1.353,46,1.759,47,1.759,48,0.656,49,1.079,50,1.718,51,1.023,52,0.654,53,2.064,54,1.759,55,1.094,56,0.085,57,1.094,58,0.799,59,0.907,60,1.079,61,1.522,62,1.079,63,0.864,64,1.261,65,1.637,66,1.261,67,1.107,68,1.842,69,1.328,70,0.701,71,1.079,72,0.864,73,1.942,74,1.079,75,2.025,76,1.57,77,1.079,78,1.079,79,1.079,80,1.069,81,1.069,82,2.025,83,1.925,84,1.079,85,1.069,86,1.56,87,1.079,88,1.079,89,1.079,90,0.864,91,1.261,92,1.079,93,0.864,94,1.079,95,1.353,96,1.445,97,1.079,98,1.718,99,1.079,100,1.069,101,1.069,102,1.942,103,1.094,104,1.079,105,1.85,106,1.328,107,1.079,108,1.079,109,1.079,110,0.887,111,1.079,112,0.864,113,1.079,114,1.353,115,1.079,116,1.079,117,1.069,118,1.56,119,1.079,120,1.079,121,1.069,122,1.079,123,1.069,124,1.718,125,0.714,126,1.353,127,0.656,128,0.346,129,0.346,130,0.43,131,0.53,132,1.069,133,0.656,134,0.656,135,1.57,136,0.656,137,0.567,138,0.346,139,0.346,140,0.53,141,0.43,142,0.656,143,0.157,144,0.656,145,0.656,146,0.656,147,1.069,148,0.656,149,1.069,150,0.656,151,1.069,152,0.656,153,1.353,154,0.656,155,0.656,156,0.656,157,0.656,158,0.656,159,1.353,160,1.069,161,1.069,162,0.656,163,0.864,164,0.656,165,0.656,166,0.656,167,0.656,168,0.656,169,0.656,170,0.656,171,0.53,172,0.656,173,0.656,174,0.656,175,1.069,176,0.656,177,0.656,178,0.656,179,0.656,180,0.656,181,0.02,182,0.032,183,0.02]],["title/modules/AngularCollisionModule.html",[184,1.095,185,1.095]],["body/modules/AngularCollisionModule.html",[1,0.881,3,0.7,4,0.7,5,0.541,6,0.685,7,1.117,24,1.71,32,1.669,51,1.522,52,1.056,53,1.35,55,1.35,56,0.084,57,1.35,58,0.541,59,0.882,82,1.669,125,1.227,128,0.882,130,1.094,131,1.35,137,0.7,143,0.399,181,0.05,182,0.063,183,0.05,184,1.35,185,2.139,186,1.669,187,1.35,188,2.097,189,2.918,190,2.097,191,2.658,192,2.918,193,2.097,194,2.097,195,2.097,196,2.658,197,2.097,198,2.097,199,2.747,200,3.481,201,2.747,202,2.747,203,3.822,204,3.822,205,1.669,206,2.097,207,2.097,208,2.747,209,2.747]],["title/injectables/AngularCollisionService.html",[210,1.095,211,1.355]],["body/injectables/AngularCollisionService.html",[1,0.827,3,0.336,4,0.336,5,0.259,6,0.768,7,1.253,9,0.647,12,1.014,16,0.336,17,0.662,18,1.81,26,1.684,29,1.555,30,1.013,32,1.254,36,1.414,48,1.545,53,1.887,55,1.535,56,0.085,57,1.535,58,0.725,59,1.003,61,0.822,67,0.662,68,1.545,69,1.013,82,2.013,83,1.852,90,1.014,91,1.761,93,1.014,96,0.822,105,1.535,106,1.146,110,1.244,112,0.647,125,1.003,128,0.423,129,0.423,130,0.525,135,1.627,137,0.336,139,0.924,140,1.414,143,0.191,163,1.627,171,1.249,181,0.024,182,0.037,183,0.024,205,0.801,206,1.006,207,1.006,210,1.014,211,1.254,212,1.318,213,1.006,214,2.543,215,3.313,216,2.543,217,2.064,218,2.064,219,2.543,220,2.543,221,2.064,222,2.064,223,2.064,224,1.318,225,2.064,226,2.064,227,2.877,228,1.318,229,2.064,230,2.064,231,2.064,232,3.209,233,2.064,234,1.318,235,1.318,236,3.685,237,1.318,238,1.318,239,1.318,240,2.064,241,1.318,242,2.064,243,1.249,244,1.318,245,2.104,246,3.463,247,1.318,248,2.877,249,1.318,250,2.064,251,1.318,252,1.318,253,1.318,254,1.318,255,1.318,256,1.318,257,1.318,258,1.318,259,1.318,260,1.318,261,1.318,262,1.318,263,1.318,264,1.318,265,1.318,266,1.318,267,2.064,268,1.318,269,1.318,270,1.318,271,1.318,272,1.318,273,1.318,274,1.318,275,1.318,276,2.064,277,2.064,278,2.064,279,1.318,280,1.318,281,1.318,282,1.318,283,2.064,284,2.064,285,1.318,286,1.318,287,2.543,288,2.064,289,1.318,290,1.318,291,1.318,292,2.877,293,1.318,294,1.318,295,1.318,296,1.318,297,1.318,298,1.318,299,2.064,300,1.318,301,1.318,302,1.318,303,1.318,304,1.318,305,2.064,306,2.064,307,1.318,308,1.318,309,1.318,310,1.318,311,1.318]],["title/interfaces/NgcCollisionChange.html",[138,0.439,141,0.888]],["body/interfaces/NgcCollisionChange.html",[0,0.92,1,0.704,3,0.73,4,0.407,5,0.315,6,0.315,7,0.513,8,0.785,9,0.785,10,1.454,11,1.454,12,1.175,14,0.971,15,1.454,16,0.407,17,0.768,18,1.821,19,0.971,20,0.971,21,0.971,22,0.971,23,0.971,24,0.785,25,0.971,26,1.696,27,1.821,28,1.454,29,1.552,30,1.476,31,1.454,33,0.971,34,0.971,36,0.785,37,0.971,38,0.971,39,1.454,40,0.971,42,0.785,43,0.785,45,0.971,50,1.454,51,0.953,52,0.609,56,0.085,58,0.564,59,0.768,61,1.552,63,0.785,64,1.175,65,1.563,66,1.175,67,1.19,69,0.637,70,0.637,72,0.785,73,2.07,75,2.173,76,1.408,80,0.971,81,0.971,83,1.872,85,0.971,86,1.454,90,0.785,91,1.175,93,0.785,95,1.454,96,1.424,98,2.173,100,0.971,101,0.971,102,2.368,103,1.175,105,1.821,106,1.357,110,0.953,112,0.785,114,1.454,117,0.971,118,1.454,121,0.971,123,0.971,124,1.934,125,0.92,126,1.742,127,0.971,128,0.513,129,0.513,130,0.637,131,0.785,132,1.742,133,0.971,134,0.971,135,1.821,136,0.971,137,0.73,138,0.471,139,0.513,140,1.175,141,0.953,142,0.971,143,0.232,144,0.971,145,0.971,146,0.971,147,1.454,148,0.971,149,1.454,150,0.971,151,1.454,152,0.971,153,1.742,154,0.971,155,0.971,156,0.971,157,0.971,158,0.971,159,1.742,160,1.454,161,1.454,162,0.971,163,1.175,164,0.971,165,0.971,166,0.971,167,0.971,168,0.971,169,0.971,170,0.971,171,0.785,172,0.971,173,0.971,174,0.971,175,1.454,176,0.971,177,0.971,178,0.971,179,0.971,180,0.971,181,0.029,182,0.043,183,0.029,312,0.785,313,0.785]],["title/classes/NgcConfig.html",[52,0.568,143,0.324]],["body/classes/NgcConfig.html",[3,0.707,4,0.707,5,0.546,6,0.794,16,0.707,17,1.125,26,1.692,42,1.982,43,2.044,48,2.13,51,1.106,52,0.893,53,1.887,55,1.364,56,0.083,57,1.364,58,0.756,59,1.125,61,1.607,63,1.722,64,1.982,65,1.982,66,1.982,67,1.295,68,2.13,69,1.396,70,1.396,72,1.722,103,1.722,137,0.707,143,0.403,181,0.05,182,0.064,183,0.05,184,1.364,313,1.364,314,2.778,315,2.451,316,2.121,317,2.778,318,2.778,319,2.778,320,2.778]],["title/interfaces/NgcElementChange.html",[138,0.439,139,0.716]],["body/interfaces/NgcElementChange.html",[0,0.923,1,0.705,3,0.612,4,0.409,5,0.316,6,0.316,7,0.516,8,0.789,9,0.789,10,1.459,11,1.459,12,1.18,14,0.976,15,1.459,16,0.409,17,0.771,18,1.824,19,0.976,20,0.976,21,0.976,22,0.976,23,0.976,24,0.789,25,0.976,26,1.697,27,1.824,28,1.459,29,1.645,30,1.271,31,1.459,33,0.976,34,0.976,36,0.789,37,0.976,38,0.976,39,1.459,40,0.976,42,0.789,43,0.789,45,0.976,50,1.459,51,0.957,52,0.612,56,0.085,58,0.472,59,0.771,61,1.479,63,0.789,64,1.18,65,1.567,66,1.18,67,1.096,69,0.64,70,0.64,72,0.789,73,2.075,75,2.177,76,1.413,80,0.976,81,0.976,83,1.875,85,0.976,86,1.459,90,0.789,91,1.18,93,0.789,95,1.459,96,1.427,98,1.747,100,0.976,101,0.976,102,2.177,103,1.18,105,1.824,106,1.36,110,0.957,112,0.789,114,1.459,117,0.976,118,1.459,121,0.976,123,0.976,124,1.938,125,0.923,126,1.747,127,0.976,128,0.516,129,0.516,130,0.64,131,0.789,132,1.747,133,1.459,134,1.459,135,2.029,136,1.459,137,0.732,138,0.472,139,0.771,140,0.789,141,0.64,142,0.976,143,0.233,144,0.976,145,0.976,146,0.976,147,1.459,148,0.976,149,1.459,150,0.976,151,1.459,152,0.976,153,1.747,154,0.976,155,0.976,156,0.976,157,0.976,158,0.976,159,1.747,160,1.459,161,1.459,162,0.976,163,1.18,164,0.976,165,0.976,166,0.976,167,0.976,168,0.976,169,0.976,170,0.976,171,0.789,172,0.976,173,0.976,174,0.976,175,1.459,176,0.976,177,0.976,178,0.976,179,0.976,180,0.976,181,0.029,182,0.044,183,0.029,312,0.789,313,0.789]],["title/interfaces/NgcTrackedElement.html",[138,0.439,243,1.095]],["body/interfaces/NgcTrackedElement.html",[3,0.763,4,0.763,5,0.589,6,0.589,16,0.763,17,1.179,29,1.724,30,1.724,56,0.083,58,0.723,67,1.276,76,1.805,96,1.463,110,1.788,125,0.961,129,0.961,137,0.763,138,0.589,181,0.054,182,0.067,183,0.054,243,1.805,245,2.415,312,1.471,313,1.471,315,1.82,321,2.287,322,2.805,323,3.674]],["title/coverage.html",[324,2.317]],["body/coverage.html",[0,0.99,1,0.607,5,0.607,6,0.857,7,1.343,8,1.977,52,0.785,56,0.081,58,0.607,70,1.228,106,1.228,138,0.792,139,0.99,141,1.228,143,0.448,181,0.056,182,0.068,183,0.056,210,1.515,211,1.873,213,2.354,243,1.515,245,1.873,315,2.272,316,2.354,321,2.354,324,2.354,325,2.354,326,3.083,327,3.083,328,3.083,329,3.083,330,3.083,331,3.083,332,3.083,333,3.083,334,3.083,335,3.083,336,3.083,337,3.083,338,3.083,339,3.083,340,3.083]],["title/dependencies.html",[187,1.316,341,1.866]],["body/dependencies.html",[56,0.083,128,1.035,129,1.035,181,0.059,182,0.07,183,0.059,187,1.584,342,3.225,343,4.486,344,3.225,345,3.225,346,3.225,347,3.842,348,2.933,349,3.225,350,3.225,351,2.462,352,3.225,353,3.225,354,3.225,355,3.225,356,3.225,357,3.225]],["title/index.html",[16,0.475,358,1.866,359,1.866]],["body/index.html",[27,1.451,56,0.072,181,0.054,182,0.066,183,0.054,205,1.794,232,2.255,322,2.781,325,2.781,351,2.255,360,2.953,361,2.953,362,2.953,363,3.642,364,3.642,365,3.949,366,3.642,367,3.642,368,4.123,369,2.953,370,2.953,371,2.953,372,2.953,373,2.953,374,3.642,375,3.642,376,2.953,377,2.953,378,2.953,379,4.123,380,2.953,381,4.235,382,2.953,383,2.953,384,2.953,385,2.953,386,2.953,387,2.953,388,2.953,389,2.953,390,2.953,391,3.642,392,4.123,393,2.953,394,3.642,395,3.642,396,2.953,397,4.123,398,2.953,399,2.953]],["title/modules.html",[186,1.844]],["body/modules.html",[56,0.074,181,0.064,182,0.074,183,0.064,185,1.735,186,2.146,348,2.696,400,3.532,401,3.532,402,3.532]],["title/overview.html",[403,2.317]],["body/overview.html",[0,1.038,1,0.876,56,0.077,143,0.47,181,0.059,182,0.07,183,0.059,184,1.89,185,2.134,187,1.588,188,2.468,189,2.468,190,2.468,191,2.468,192,2.468,193,2.468,194,2.468,195,2.468,196,2.938,197,2.468,198,2.468,210,1.588,312,1.588,403,2.468,404,4.252,405,3.233]]],"invertedIndex":[["",{"_index":56,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["0",{"_index":112,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["0.10.2",{"_index":357,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":404,"title":{},"body":{"overview.html":{}}}],["1/3",{"_index":333,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":331,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":361,"title":{},"body":{"index.html":{}}}],["10.1.5",{"_index":343,"title":{},"body":{"dependencies.html":{}}}],["10.2.4",{"_index":352,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":70,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"coverage.html":{}}}],["14/27",{"_index":329,"title":{},"body":{"coverage.html":{}}}],["2.0.0",{"_index":355,"title":{},"body":{"dependencies.html":{}}}],["25",{"_index":330,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":405,"title":{},"body":{"overview.html":{}}}],["3/3",{"_index":338,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":337,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":332,"title":{},"body":{"coverage.html":{}}}],["51",{"_index":328,"title":{},"body":{"coverage.html":{}}}],["6.6.0",{"_index":353,"title":{},"body":{"dependencies.html":{}}}],["66",{"_index":334,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":336,"title":{},"body":{"coverage.html":{}}}],["8/12",{"_index":335,"title":{},"body":{"coverage.html":{}}}],["_active",{"_index":19,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["_collision",{"_index":20,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["_disableinterval",{"_index":21,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["_intervaltime",{"_index":22,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["_timersubscription",{"_index":23,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["_uid",{"_index":25,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["active",{"_index":102,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["addtrackedelement",{"_index":217,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["addtrackedelement(element",{"_index":223,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["aftercontentchecked",{"_index":11,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["angular",{"_index":205,"title":{},"body":{"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"index.html":{}}}],["angular/animations",{"_index":342,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":351,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["angular/common",{"_index":344,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler",{"_index":345,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":128,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":346,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":347,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":350,"title":{},"body":{"dependencies.html":{}}}],["angularcollisiondirective",{"_index":1,"title":{"directives/AngularCollisionDirective.html":{}},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"coverage.html":{},"overview.html":{}}}],["angularcollisiondirective._uid",{"_index":148,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["angularcollisionmodule",{"_index":185,"title":{"modules/AngularCollisionModule.html":{}},"body":{"modules/AngularCollisionModule.html":{},"modules.html":{},"overview.html":{}}}],["angularcollisionservice",{"_index":211,"title":{"injectables/AngularCollisionService.html":{}},"body":{"injectables/AngularCollisionService.html":{},"coverage.html":{}}}],["app",{"_index":367,"title":{},"body":{"index.html":{}}}],["array.isarray(elements",{"_index":276,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["artifacts",{"_index":383,"title":{},"body":{"index.html":{}}}],["auto",{"_index":363,"title":{},"body":{"index.html":{}}}],["between",{"_index":230,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["boolean",{"_index":61,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{}}}],["bootstrap",{"_index":190,"title":{},"body":{"modules/AngularCollisionModule.html":{},"overview.html":{}}}],["browse",{"_index":402,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":348,"title":{},"body":{"dependencies.html":{},"modules.html":{}}}],["build",{"_index":381,"title":{},"body":{"index.html":{}}}],["change",{"_index":298,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["changed",{"_index":134,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["changes",{"_index":76,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["changes.disableinterval",{"_index":157,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["changes.disableinterval.currentvalue",{"_index":158,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["changes.intervaltime",{"_index":155,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["changes.intervaltime.currentvalue",{"_index":156,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["check",{"_index":80,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["checkelementscollision",{"_index":218,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["checkelementscollision(first",{"_index":226,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["checking",{"_index":66,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{}}}],["checkposition",{"_index":33,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["checks",{"_index":229,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["class",{"_index":143,"title":{"classes/NgcConfig.html":{}},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"coverage.html":{},"overview.html":{}}}],["class.collision",{"_index":47,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["classes",{"_index":314,"title":{},"body":{"classes/NgcConfig.html":{}}}],["cluster_angularcollisionmodule",{"_index":193,"title":{},"body":{"modules/AngularCollisionModule.html":{},"overview.html":{}}}],["cluster_angularcollisionmodule_declarations",{"_index":195,"title":{},"body":{"modules/AngularCollisionModule.html":{},"overview.html":{}}}],["cluster_angularcollisionmodule_exports",{"_index":194,"title":{},"body":{"modules/AngularCollisionModule.html":{},"overview.html":{}}}],["collidedelements",{"_index":98,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["collidedids",{"_index":164,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["collision",{"_index":27,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"index.html":{}}}],["collision.directive",{"_index":206,"title":{},"body":{"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{}}}],["collision.directive.ts",{"_index":8,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"coverage.html":{}}}],["collision.directive.ts:108",{"_index":87,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:118",{"_index":84,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:124",{"_index":88,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:135",{"_index":99,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:155",{"_index":79,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:165",{"_index":89,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:178",{"_index":92,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:187",{"_index":94,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:43",{"_index":62,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:48",{"_index":71,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:53",{"_index":77,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:60",{"_index":74,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:64",{"_index":78,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:69",{"_index":122,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:74",{"_index":116,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:79",{"_index":120,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:84",{"_index":113,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:89",{"_index":115,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:91",{"_index":107,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:92",{"_index":111,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:93",{"_index":104,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:94",{"_index":109,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:95",{"_index":108,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:96",{"_index":54,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:98",{"_index":119,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.module.ts",{"_index":199,"title":{},"body":{"modules/AngularCollisionModule.html":{}}}],["collision.module.ts:10",{"_index":202,"title":{},"body":{"modules/AngularCollisionModule.html":{}}}],["collision.service.ts",{"_index":213,"title":{},"body":{"injectables/AngularCollisionService.html":{},"coverage.html":{}}}],["collision.service.ts:115",{"_index":228,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["collision.service.ts:131",{"_index":224,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["collision.service.ts:149",{"_index":241,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["collision.service.ts:17",{"_index":244,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["collision.service.ts:22",{"_index":247,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["collision.service.ts:27",{"_index":249,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["collision.service.ts:31",{"_index":222,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["collision.service.ts:63",{"_index":234,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["collision.service.ts:74",{"_index":237,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["collision.service.ts:94",{"_index":239,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["collision/src/lib/angular",{"_index":7,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"coverage.html":{}}}],["collision/src/lib/models/ngc",{"_index":315,"title":{},"body":{"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{}}}],["collisionactive",{"_index":145,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["collisionactivechange",{"_index":45,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["collisions",{"_index":140,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["collisions.length",{"_index":273,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["collisions.push(innerelement.element",{"_index":271,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["commit",{"_index":376,"title":{},"body":{"index.html":{}}}],["compodoc",{"_index":380,"title":{},"body":{"index.html":{}}}],["config",{"_index":51,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{}}}],["config.disableinterval",{"_index":154,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["config.intervaltime",{"_index":152,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["config.model",{"_index":131,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["config.model.ts",{"_index":316,"title":{},"body":{"classes/NgcConfig.html":{},"coverage.html":{}}}],["config.model.ts:13",{"_index":320,"title":{},"body":{"classes/NgcConfig.html":{}}}],["config.model.ts:4",{"_index":318,"title":{},"body":{"classes/NgcConfig.html":{}}}],["config.model.ts:9",{"_index":319,"title":{},"body":{"classes/NgcConfig.html":{}}}],["const",{"_index":171,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["constructor",{"_index":48,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{}}}],["constructor(disableinterval",{"_index":317,"title":{},"body":{"classes/NgcConfig.html":{}}}],["constructor(element",{"_index":49,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["constructor(public",{"_index":146,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["containing",{"_index":133,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["coverage",{"_index":324,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["declarations",{"_index":189,"title":{},"body":{"modules/AngularCollisionModule.html":{},"overview.html":{}}}],["default",{"_index":68,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{}}}],["defined",{"_index":53,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{}}}],["demo",{"_index":366,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":187,"title":{"dependencies.html":{}},"body":{"modules/AngularCollisionModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":313,"title":{},"body":{"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["destroy",{"_index":28,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["detection",{"_index":362,"title":{},"body":{"index.html":{}}}],["directive",{"_index":0,"title":{"directives/AngularCollisionDirective.html":{}},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"coverage.html":{},"overview.html":{}}}],["directives",{"_index":2,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["directory",{"_index":386,"title":{},"body":{"index.html":{}}}],["disable",{"_index":63,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{}}}],["disableinterval",{"_index":42,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{}}}],["dist",{"_index":385,"title":{},"body":{"index.html":{}}}],["docs",{"_index":375,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":325,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["domrect",{"_index":135,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["drag",{"_index":370,"title":{},"body":{"index.html":{}}}],["drop",{"_index":371,"title":{},"body":{"index.html":{}}}],["dynamic",{"_index":349,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":398,"title":{},"body":{"index.html":{}}}],["el.id",{"_index":291,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["element",{"_index":29,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["element's",{"_index":75,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["element.domrect",{"_index":269,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["element.element.updatecollisionstate",{"_index":272,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["element.id",{"_index":292,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["element.interface",{"_index":254,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["element.interface.ts",{"_index":321,"title":{},"body":{"interfaces/NgcTrackedElement.html":{},"coverage.html":{}}}],["element.rectanglechange",{"_index":294,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["element.starttracking",{"_index":293,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["element.stoptracking",{"_index":301,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["elementref",{"_index":50,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["elements",{"_index":232,"title":{},"body":{"injectables/AngularCollisionService.html":{},"index.html":{}}}],["elements.foreach((element",{"_index":278,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["elementsmap.foreach",{"_index":265,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["elementsmap.foreach((element",{"_index":264,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["emit",{"_index":81,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["emits",{"_index":117,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["end",{"_index":397,"title":{},"body":{"index.html":{}}}],["eventemitter",{"_index":73,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["execute",{"_index":394,"title":{},"body":{"index.html":{}}}],["export",{"_index":137,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["exportas",{"_index":142,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["exports",{"_index":192,"title":{},"body":{"modules/AngularCollisionModule.html":{},"overview.html":{}}}],["expressionchangedafterithasbeencheckederror",{"_index":166,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["false",{"_index":103,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{}}}],["file",{"_index":5,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{}}}],["finish",{"_index":242,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["first",{"_index":233,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["first.bottom",{"_index":285,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["first.left",{"_index":287,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["first.top",{"_index":283,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["fix",{"_index":165,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["flag",{"_index":389,"title":{},"body":{"index.html":{}}}],["forroot",{"_index":200,"title":{},"body":{"modules/AngularCollisionModule.html":{}}}],["forroot(config",{"_index":201,"title":{},"body":{"modules/AngularCollisionModule.html":{}}}],["foundelement",{"_index":303,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["foundelement.subscription.closed",{"_index":308,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["foundelement.subscription.unsubscribe",{"_index":309,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["foundelement?.subscription",{"_index":307,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["generate",{"_index":374,"title":{},"body":{"index.html":{}}}],["generated",{"_index":364,"title":{},"body":{"index.html":{}}}],["getting",{"_index":358,"title":{"index.html":{}},"body":{}}],["hostbinding",{"_index":127,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["hostbinding('class.collision",{"_index":144,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["hostbindings",{"_index":46,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["id",{"_index":30,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["identifier",{"_index":326,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":9,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["import",{"_index":125,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["index",{"_index":16,"title":{"index.html":{}},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["info",{"_index":3,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["init",{"_index":225,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["injectable",{"_index":210,"title":{"injectables/AngularCollisionService.html":{}},"body":{"injectables/AngularCollisionService.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":212,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["innerelement",{"_index":266,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["innerelement.domrect",{"_index":270,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["innerid",{"_index":267,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["input",{"_index":126,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["inputs",{"_index":41,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["instance",{"_index":118,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["instanceof",{"_index":277,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["interface",{"_index":138,"title":{"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{}}}],["interfaces",{"_index":312,"title":{},"body":{"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"overview.html":{}}}],["interval",{"_index":64,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{}}}],["intervaltime",{"_index":43,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{}}}],["itself",{"_index":136,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["karma",{"_index":396,"title":{},"body":{"index.html":{}}}],["legend",{"_index":188,"title":{},"body":{"modules/AngularCollisionModule.html":{},"overview.html":{}}}],["library",{"_index":322,"title":{},"body":{"interfaces/NgcTrackedElement.html":{},"index.html":{}}}],["made",{"_index":372,"title":{},"body":{"index.html":{}}}],["manually",{"_index":377,"title":{},"body":{"index.html":{}}}],["map",{"_index":246,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["matching",{"_index":182,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["metadata",{"_index":13,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["methods",{"_index":32,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{}}}],["models/ngc",{"_index":130,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["module",{"_index":184,"title":{"modules/AngularCollisionModule.html":{}},"body":{"modules/AngularCollisionModule.html":{},"classes/NgcConfig.html":{},"overview.html":{}}}],["modules",{"_index":186,"title":{"modules.html":{}},"body":{"modules/AngularCollisionModule.html":{},"modules.html":{}}}],["modulewithproviders",{"_index":203,"title":{},"body":{"modules/AngularCollisionModule.html":{}}}],["name",{"_index":57,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{}}}],["new",{"_index":106,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"coverage.html":{}}}],["ng",{"_index":368,"title":{},"body":{"index.html":{}}}],["ngaftercontentchecked",{"_index":34,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["ngcangularcollision",{"_index":15,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["ngccollisionchange",{"_index":141,"title":{"interfaces/NgcCollisionChange.html":{}},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"coverage.html":{}}}],["ngcconfig",{"_index":52,"title":{"classes/NgcConfig.html":{}},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"coverage.html":{}}}],["ngcelementchange",{"_index":139,"title":{"interfaces/NgcElementChange.html":{}},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"coverage.html":{}}}],["ngcollision",{"_index":360,"title":{},"body":{"index.html":{}}}],["ngctrackedelement",{"_index":243,"title":{"interfaces/NgcTrackedElement.html":{}},"body":{"injectables/AngularCollisionService.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{}}}],["ngmodule",{"_index":204,"title":{},"body":{"modules/AngularCollisionModule.html":{}}}],["ngonchanges",{"_index":35,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["ngonchanges(changes",{"_index":85,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["ngondestroy",{"_index":36,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["npm",{"_index":378,"title":{},"body":{"index.html":{}}}],["number",{"_index":67,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["object",{"_index":132,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["observable",{"_index":96,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["onchanges",{"_index":10,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["ondestroy",{"_index":12,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["optional",{"_index":59,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{}}}],["out",{"_index":198,"title":{},"body":{"modules/AngularCollisionModule.html":{},"overview.html":{}}}],["output",{"_index":124,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["outputs",{"_index":44,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["overview",{"_index":403,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":341,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":163,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["parameters",{"_index":55,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{}}}],["part",{"_index":373,"title":{},"body":{"index.html":{}}}],["performance",{"_index":263,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["pipe(takeuntil(element.destroy",{"_index":295,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["pipe(throttletime(100",{"_index":259,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["position",{"_index":65,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{}}}],["positions",{"_index":248,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["private",{"_index":18,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["prod",{"_index":388,"title":{},"body":{"index.html":{}}}],["production",{"_index":390,"title":{},"body":{"index.html":{}}}],["project",{"_index":382,"title":{},"body":{"index.html":{}}}],["projects/angular",{"_index":6,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{}}}],["promise.resolve().then",{"_index":167,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["properties",{"_index":17,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["protractor",{"_index":399,"title":{},"body":{"index.html":{}}}],["provide",{"_index":208,"title":{},"body":{"modules/AngularCollisionModule.html":{}}}],["providedin",{"_index":255,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["providers",{"_index":191,"title":{},"body":{"modules/AngularCollisionModule.html":{},"overview.html":{}}}],["public",{"_index":26,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{}}}],["querylist",{"_index":236,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["rectanglechange",{"_index":31,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["register",{"_index":219,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["register(elements",{"_index":235,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["remove",{"_index":220,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["remove(elements",{"_index":238,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["removetrackedelement",{"_index":221,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["removetrackedelement(element",{"_index":240,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["reset",{"_index":197,"title":{},"body":{"modules/AngularCollisionModule.html":{},"overview.html":{}}}],["result",{"_index":181,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["results",{"_index":183,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["return",{"_index":207,"title":{},"body":{"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{}}}],["returns",{"_index":82,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{}}}],["root",{"_index":256,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["run",{"_index":379,"title":{},"body":{"index.html":{}}}],["running",{"_index":365,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":129,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":253,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["same",{"_index":123,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["second",{"_index":227,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["second.bottom",{"_index":286,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["second.left",{"_index":288,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["second.right",{"_index":289,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["second.top",{"_index":284,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["selector",{"_index":14,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["serve",{"_index":369,"title":{},"body":{"index.html":{}}}],["service",{"_index":323,"title":{},"body":{"interfaces/NgcTrackedElement.html":{}}}],["simplechanges",{"_index":86,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["source",{"_index":4,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["start",{"_index":90,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["started",{"_index":359,"title":{"index.html":{}},"body":{}}],["starttracking",{"_index":37,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["statements",{"_index":327,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":24,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["status",{"_index":101,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["stop",{"_index":93,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["stoptracking",{"_index":38,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["stored",{"_index":384,"title":{},"body":{"index.html":{}}}],["subject",{"_index":105,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["subscribe((change",{"_index":296,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["subscribe((elementsmap",{"_index":260,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["subscription",{"_index":110,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["support",{"_index":400,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":401,"title":{},"body":{"modules.html":{}}}],["table",{"_index":340,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":339,"title":{},"body":{"coverage.html":{}}}],["takeuntil",{"_index":251,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["test",{"_index":393,"title":{},"body":{"index.html":{}}}],["tests",{"_index":392,"title":{},"body":{"index.html":{}}}],["this._active",{"_index":159,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this._collision$.asobservable",{"_index":150,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this._collision$.next(active",{"_index":169,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this._disableinterval",{"_index":153,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this._intervaltime",{"_index":151,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this._intervaltime).subscribe",{"_index":177,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this._timersubscription",{"_index":175,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this._timersubscription.closed",{"_index":179,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this._timersubscription.unsubscribe",{"_index":180,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.addtrackedelement(element",{"_index":279,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["this.addtrackedelement(elements",{"_index":280,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["this.checkelementscollision",{"_index":268,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["this.checkposition",{"_index":160,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.collision",{"_index":149,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.collisionactive",{"_index":168,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.collisionactivechange.emit",{"_index":170,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.destroy$.next(this.id",{"_index":162,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.element.nativeelement.getboundingclientrect",{"_index":172,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.id",{"_index":147,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.rectanglechange$.next",{"_index":173,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.rectanglechange.emit",{"_index":174,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.removetrackedelement(element",{"_index":281,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["this.removetrackedelement(elements",{"_index":282,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["this.trackedelements",{"_index":310,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["this.trackedelements.filter",{"_index":311,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["this.trackedelements.find",{"_index":304,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["this.trackedelements.push",{"_index":300,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["this.trackedelements.some((el",{"_index":290,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["this.trackedelementspositions",{"_index":258,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["this.trackedelementspositions$.next(this.trackedelementspositions",{"_index":299,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["this.trackedelementspositions.delete(element.id",{"_index":302,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["this.trackedelementspositions.set(change.element.id",{"_index":297,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["this.trackedelementspositionsubscription",{"_index":257,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["this.trackedelementspositionsubscription.closed",{"_index":274,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["this.trackedelementspositionsubscription.unsubscribe",{"_index":275,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["this.unsubscribe",{"_index":161,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.updatecollisionstate(false",{"_index":178,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["throttletime",{"_index":252,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["time",{"_index":72,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{}}}],["timer",{"_index":95,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["timer(0",{"_index":176,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["todo",{"_index":261,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["tracked",{"_index":245,"title":{},"body":{"injectables/AngularCollisionService.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{}}}],["trackedelement",{"_index":305,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["trackedelement.id",{"_index":306,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["trackedelements",{"_index":214,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["trackedelementspositions",{"_index":215,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["trackedelementspositionsubscription",{"_index":216,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["tracking",{"_index":91,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["true",{"_index":114,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["tslib",{"_index":354,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":231,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["type",{"_index":58,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{}}}],["unique",{"_index":121,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["unit",{"_index":391,"title":{},"body":{"index.html":{}}}],["unsubscribe",{"_index":39,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["update",{"_index":100,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["updatecollisionstate",{"_index":40,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["updatecollisionstate(active",{"_index":97,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["use",{"_index":387,"title":{},"body":{"index.html":{}}}],["usevalue",{"_index":209,"title":{},"body":{"modules/AngularCollisionModule.html":{}}}],["value",{"_index":69,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{}}}],["via",{"_index":395,"title":{},"body":{"index.html":{}}}],["void",{"_index":83,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["work",{"_index":262,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["wrapper",{"_index":250,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["yes",{"_index":60,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["zone.js",{"_index":356,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":196,"title":{},"body":{"modules/AngularCollisionModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"directives/AngularCollisionDirective.html":{"url":"directives/AngularCollisionDirective.html","title":"directive - AngularCollisionDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  AngularCollisionDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-collision/src/lib/angular-collision.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            OnChanges\n                            AfterContentChecked\n                            OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [ngcAngularCollision]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _active\n                            \n                            \n                                    Private\n                                _collision$\n                            \n                            \n                                    Private\n                                _disableInterval\n                            \n                            \n                                    Private\n                                _intervalTime\n                            \n                            \n                                    Private\n                                _timerSubscription\n                            \n                            \n                                    Private\n                                    Static\n                                _uid\n                            \n                            \n                                    Public\n                                collision\n                            \n                            \n                                    Public\n                                collision$\n                            \n                            \n                                    Public\n                                destroy$\n                            \n                            \n                                    Public\n                                element\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                rectangleChange$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                checkPosition\n                            \n                            \n                                    Public\n                                ngAfterContentChecked\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                startTracking\n                            \n                            \n                                    Public\n                                stopTracking\n                            \n                            \n                                    Public\n                                unsubscribe\n                            \n                            \n                                    Public\n                                updateCollisionState\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disableInterval\n                            \n                            \n                                intervalTime\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                collisionActiveChange\n                            \n                            \n                                rectangleChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class.collision\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(element: ElementRef, config?: NgcConfig)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:96\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        NgcConfig\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        disableInterval\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:43\n                            \n                        \n                \n                    \n                        Disable interval position checking\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        intervalTime\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 100\n                    \n                \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:48\n                            \n                        \n                \n                    \n                        Interval time for position checking\n\n                    \n                \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        collisionActiveChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:60\n                            \n                        \n                \n                    \n                        Element's collision changes\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        rectangleChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:53\n                            \n                        \n                \n                    \n                        Element's position changes\n\n                    \n                \n            \n        \n\n            \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class.collision\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:64\n                            \n                        \n\n\n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            checkPosition\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkPosition()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:155\n                \n            \n\n\n            \n                \n                    Check and emit element position\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngAfterContentChecked\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterContentChecked()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            startTracking\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    startTracking()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:165\n                \n            \n\n\n            \n                \n                    Start tracking element\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            stopTracking\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    stopTracking()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:178\n                \n            \n\n\n            \n                \n                    Stop tracking element\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            unsubscribe\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    unsubscribe()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:187\n                \n            \n\n\n            \n                \n                    Unsubscribe timer observable\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateCollisionState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateCollisionState(active: boolean, collidedElements: AngularCollisionDirective[])\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:135\n                \n            \n\n\n            \n                \n                    Update collision status\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    active\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    collidedElements\n                                    \n                                            AngularCollisionDirective[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _active\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:93\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _collision$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:91\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _disableInterval\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:95\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _intervalTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:94\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _timerSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:92\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            _uid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:96\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            collision\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:84\n                            \n                        \n\n                \n                    \n                        True if element has any collision\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            collision$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:89\n                            \n                        \n\n                \n                    \n                        Observable of collision value\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            destroy$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:74\n                            \n                        \n\n                \n                    \n                        Observable that emits on instance destroy\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            element\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:98\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:79\n                            \n                        \n\n                \n                    \n                        Unique id for directive instance\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rectangleChange$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:69\n                            \n                        \n\n                \n                    \n                        Element's collision changes as observable, same as output\n\n                    \n                \n\n            \n        \n\n\n\n    \n\n\n    \n        import {\n  Directive,\n  AfterContentChecked,\n  ElementRef,\n  Output,\n  EventEmitter,\n  OnDestroy,\n  Input,\n  HostBinding,\n  Optional,\n  OnChanges,\n  SimpleChanges,\n} from '@angular/core';\nimport { timer, Subscription, Subject, Observable } from 'rxjs';\nimport { NgcConfig } from './models/ngc-config.model';\n\n/**\n * Object containing changed element's domRect and element itself\n */\nexport interface NgcElementChange {\n  domRect: DOMRect;\n  element: AngularCollisionDirective;\n}\n\n/**\n * Object with info about element's collisions\n */\nexport interface NgcCollisionChange {\n  id: number;\n  active: boolean;\n  collidedElements: AngularCollisionDirective[];\n}\n\n@Directive({\n  selector: '[ngcAngularCollision]',\n  exportAs: 'ngcAngularCollision',\n})\nexport class AngularCollisionDirective\n  implements OnChanges, AfterContentChecked, OnDestroy {\n  /**\n   * Disable interval position checking\n   */\n  @Input() public disableInterval: boolean;\n\n  /**\n   * Interval time for position checking\n   */\n  @Input() public intervalTime: number = 100;\n\n  /**\n   * Element's position changes\n   */\n  @Output() public rectangleChange: EventEmitter = new EventEmitter();\n\n  /**\n   * Element's collision changes\n   */\n  @Output() public collisionActiveChange: EventEmitter = new EventEmitter();\n\n  @HostBinding('class.collision') private collisionActive: boolean;\n\n  /**\n   * Element's collision changes as observable, same as output\n   */\n  public rectangleChange$: Subject = new Subject();\n\n  /**\n   * Observable that emits on instance destroy\n   */\n  public destroy$: Subject = new Subject();\n\n  /**\n   * Unique id for directive instance\n   */\n  public id: number;\n\n  /**\n   * True if element has any collision\n   */\n  public collision: boolean;\n\n  /**\n   * Observable of collision value\n   */\n  public collision$: Observable;\n\n  private _collision$: Subject = new Subject();\n  private _timerSubscription: Subscription;\n  private _active: boolean = false;\n  private _intervalTime: number;\n  private _disableInterval: boolean;\n  private static _uid: number = 0;\n\n  constructor(public element: ElementRef, @Optional() config?: NgcConfig) {\n    this.id = AngularCollisionDirective._uid++;\n    this.collision$ = this._collision$.asObservable();\n\n    if (config) {\n      this._intervalTime = config.intervalTime;\n      this._disableInterval = config.disableInterval;\n    }\n  }\n\n  public ngOnChanges(changes: SimpleChanges): void {\n    if (changes.intervalTime) {\n      this._intervalTime = changes.intervalTime.currentValue;\n    }\n\n    if (changes.disableInterval) {\n      this._disableInterval = changes.disableInterval.currentValue;\n    }\n  }\n\n  public ngAfterContentChecked(): void {\n    if (this._active) {\n      this.checkPosition();\n    }\n  }\n\n  public ngOnDestroy(): void {\n    this.unsubscribe();\n    this.destroy$.next(this.id);\n  }\n\n  /**\n   * Update collision status\n   *\n   * @param active\n   * @param collidedIds\n   */\n  public updateCollisionState(\n    active: boolean,\n    collidedElements: AngularCollisionDirective[]\n  ): void {\n    // Fix for ExpressionChangedAfterItHasBeenCheckedError\n    Promise.resolve().then(() => {\n      this.collisionActive = active;\n      this.collision = active;\n      this._collision$.next(active);\n      this.collisionActiveChange.emit({\n        id: this.id,\n        active,\n        collidedElements,\n      });\n    });\n  }\n\n  /**\n   * Check and emit element position\n   */\n  public checkPosition(): void {\n    const domRect: DOMRect = this.element.nativeElement.getBoundingClientRect();\n\n    this.rectangleChange$.next({ domRect, element: this });\n    this.rectangleChange.emit({ domRect, element: this });\n  }\n\n  /**\n   * Start tracking element\n   */\n  public startTracking(): void {\n    this._active = true;\n\n    if (!this._disableInterval) {\n      this._timerSubscription = timer(0, this._intervalTime).subscribe(() => {\n        this.checkPosition();\n      });\n    }\n  }\n\n  /**\n   * Stop tracking element\n   */\n  public stopTracking(): void {\n    this._active = false;\n    this.updateCollisionState(false, []);\n    this.unsubscribe();\n  }\n\n  /**\n   * Unsubscribe timer observable\n   */\n  public unsubscribe(): void {\n    if (this._timerSubscription && !this._timerSubscription.closed) {\n      this._timerSubscription.unsubscribe();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AngularCollisionModule.html":{"url":"modules/AngularCollisionModule.html","title":"module - AngularCollisionModule","body":"\n                   \n\n\n\n\n    Modules\n    AngularCollisionModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AngularCollisionModule\n\n\n\ncluster_AngularCollisionModule_exports\n\n\n\ncluster_AngularCollisionModule_declarations\n\n\n\n\nAngularCollisionDirective\n\nAngularCollisionDirective\n\n\n\nAngularCollisionModule\n\nAngularCollisionModule\n\nAngularCollisionModule -->\n\nAngularCollisionDirective->AngularCollisionModule\n\n\n\n\n\nAngularCollisionDirective \n\nAngularCollisionDirective \n\nAngularCollisionDirective  -->\n\nAngularCollisionModule->AngularCollisionDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/angular-collision/src/lib/angular-collision.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AngularCollisionDirective\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AngularCollisionDirective\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(config: NgcConfig)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.module.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                NgcConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { AngularCollisionDirective } from './angular-collision.directive';\nimport { NgcConfig } from './models/ngc-config.model';\n\n@NgModule({\n  declarations: [AngularCollisionDirective],\n  exports: [AngularCollisionDirective],\n})\nexport class AngularCollisionModule {\n  static forRoot(\n    config: NgcConfig\n  ): ModuleWithProviders {\n    return {\n      ngModule: AngularCollisionModule,\n      providers: [{ provide: NgcConfig, useValue: config }],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AngularCollisionService.html":{"url":"injectables/AngularCollisionService.html","title":"injectable - AngularCollisionService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AngularCollisionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-collision/src/lib/angular-collision.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                trackedElements\n                            \n                            \n                                    Public\n                                trackedElementsPositions\n                            \n                            \n                                    Public\n                                trackedElementsPositions$\n                            \n                            \n                                    Public\n                                trackedElementsPositionSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addTrackedElement\n                            \n                            \n                                    Private\n                                checkElementsCollision\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                register\n                            \n                            \n                                    Public\n                                remove\n                            \n                            \n                                    Private\n                                removeTrackedElement\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/angular-collision/src/lib/angular-collision.service.ts:31\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            addTrackedElement\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addTrackedElement(element: AngularCollisionDirective)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.service.ts:131\n                \n            \n\n\n            \n                \n                    Init tracking of element\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    element\n                                    \n                                            AngularCollisionDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            checkElementsCollision\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkElementsCollision(first: DOMRect, second: DOMRect)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.service.ts:115\n                \n            \n\n\n            \n                \n                    Checks collisions between two elements\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    first\n                                    \n                                            DOMRect\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    second\n                                    \n                                            DOMRect\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            register\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    register(elements: QueryList | AngularCollisionDirective | AngularCollisionDirective[])\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.service.ts:74\n                \n            \n\n\n            \n                \n                    Start tracking element / elements\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    elements\n                                    \n                                            QueryList | AngularCollisionDirective | AngularCollisionDirective[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(elements: QueryList | AngularCollisionDirective | AngularCollisionDirective[])\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.service.ts:94\n                \n            \n\n\n            \n                \n                    Stop tracking element / elements\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    elements\n                                    \n                                            QueryList | AngularCollisionDirective | AngularCollisionDirective[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            removeTrackedElement\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeTrackedElement(element: AngularCollisionDirective)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.service.ts:149\n                \n            \n\n\n            \n                \n                    Finish tracking of element\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    element\n                                    \n                                            AngularCollisionDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            trackedElements\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgcTrackedElement[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.service.ts:17\n                            \n                        \n\n                \n                    \n                        Tracked elements\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            trackedElementsPositions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Map\n\n                        \n                    \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.service.ts:22\n                            \n                        \n\n                \n                    \n                        Map of tracked elements positions\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            trackedElementsPositions$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Subject>\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.service.ts:27\n                            \n                        \n\n                \n                    \n                        Observable wrapper of tracked elements positions\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            trackedElementsPositionSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.service.ts:31\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, OnDestroy, QueryList } from '@angular/core';\nimport { takeUntil, throttleTime } from 'rxjs/operators';\nimport { Subject, Subscription } from 'rxjs';\nimport {\n  AngularCollisionDirective,\n  NgcElementChange,\n} from './angular-collision.directive';\nimport { NgcTrackedElement } from './models/ngc-tracked-element.interface';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AngularCollisionService implements OnDestroy {\n  /**\n   *  Tracked elements\n   */\n  public trackedElements: NgcTrackedElement[] = [];\n\n  /**\n   *  Map of tracked elements positions\n   */\n  public trackedElementsPositions: Map = new Map();\n\n  /**\n   *  Observable wrapper of tracked elements positions\n   */\n  public trackedElementsPositions$: Subject\n  > = new Subject();\n\n  public trackedElementsPositionSubscription: Subscription;\n\n  constructor() {\n    this.trackedElementsPositionSubscription = this.trackedElementsPositions$\n      .pipe(throttleTime(100))\n      .subscribe((elementsMap: Map) => {\n        // TODO work on performance\n        elementsMap.forEach((element: NgcElementChange, id: number) => {\n          const collisions: AngularCollisionDirective[] = [];\n\n          elementsMap.forEach(\n            (innerElement: NgcElementChange, innerId: number) => {\n              if (\n                id !== innerId &&\n                this.checkElementsCollision(\n                  element.domRect,\n                  innerElement.domRect\n                )\n              ) {\n                collisions.push(innerElement.element);\n              }\n            }\n          );\n\n          element.element.updateCollisionState(\n            collisions.length > 0,\n            collisions\n          );\n        });\n      });\n  }\n\n  public ngOnDestroy(): void {\n    if (!this.trackedElementsPositionSubscription.closed) {\n      this.trackedElementsPositionSubscription.unsubscribe();\n    }\n  }\n\n  /**\n   * Start tracking element / elements\n   *\n   * @param elements\n   */\n  public register(\n    elements:\n      | QueryList\n      | AngularCollisionDirective\n      | AngularCollisionDirective[]\n  ): void {\n    if (Array.isArray(elements) || elements instanceof QueryList) {\n      elements.forEach((element) => {\n        this.addTrackedElement(element);\n      });\n    } else {\n      this.addTrackedElement(elements);\n    }\n  }\n\n  /**\n   * Stop tracking element / elements\n   *\n   * @param elements\n   */\n  public remove(\n    elements:\n      | QueryList\n      | AngularCollisionDirective\n      | AngularCollisionDirective[]\n  ): void {\n    if (Array.isArray(elements) || elements instanceof QueryList) {\n      elements.forEach((element) => {\n        this.removeTrackedElement(element);\n      });\n    } else {\n      this.removeTrackedElement(elements);\n    }\n  }\n\n  /**\n   * Checks collisions between two elements\n   *\n   * @param first\n   * @param second\n   */\n  private checkElementsCollision(first: DOMRect, second: DOMRect): boolean {\n    return (\n      ((first.top = second.top) ||\n        (first.bottom = second.top) ||\n        (first.top = second.bottom)) &&\n      ((first.left >= second.left && first.left = second.left) ||\n        (first.left = second.right))\n    );\n  }\n\n  /**\n   * Init tracking of element\n   *\n   * @param element\n   */\n  private addTrackedElement(element: AngularCollisionDirective): void {\n    if (!this.trackedElements.some((el) => el.id == element.id)) {\n      element.startTracking();\n      const subscription = element.rectangleChange$\n        .pipe(takeUntil(element.destroy$))\n        .subscribe((change: NgcElementChange) => {\n          this.trackedElementsPositions.set(change.element.id, change);\n          this.trackedElementsPositions$.next(this.trackedElementsPositions);\n        });\n      this.trackedElements.push({ id: element.id, subscription });\n    }\n  }\n\n  /**\n   * Finish tracking of element\n   *\n   * @param element\n   */\n  private removeTrackedElement(element: AngularCollisionDirective): void {\n    element.stopTracking();\n\n    this.trackedElementsPositions.delete(element.id);\n    this.trackedElementsPositions$.next(this.trackedElementsPositions);\n\n    const foundElement = this.trackedElements.find(\n      (trackedElement) => trackedElement.id === element.id\n    );\n\n    if (foundElement?.subscription && !foundElement.subscription.closed) {\n      foundElement.subscription.unsubscribe();\n    }\n\n    this.trackedElements = this.trackedElements.filter(\n      (trackedElement) => trackedElement.id !== element.id\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgcCollisionChange.html":{"url":"interfaces/NgcCollisionChange.html","title":"interface - NgcCollisionChange","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgcCollisionChange\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-collision/src/lib/angular-collision.directive.ts\n        \n\n            \n                Description\n            \n            \n                Object with info about element's collisions\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        active\n                                \n                                \n                                        collidedElements\n                                \n                                \n                                        id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        active\n                                    \n                                \n                                \n                                    \n                                        active:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        collidedElements\n                                    \n                                \n                                \n                                    \n                                        collidedElements:     AngularCollisionDirective[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     AngularCollisionDirective[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Directive,\n  AfterContentChecked,\n  ElementRef,\n  Output,\n  EventEmitter,\n  OnDestroy,\n  Input,\n  HostBinding,\n  Optional,\n  OnChanges,\n  SimpleChanges,\n} from '@angular/core';\nimport { timer, Subscription, Subject, Observable } from 'rxjs';\nimport { NgcConfig } from './models/ngc-config.model';\n\n/**\n * Object containing changed element's domRect and element itself\n */\nexport interface NgcElementChange {\n  domRect: DOMRect;\n  element: AngularCollisionDirective;\n}\n\n/**\n * Object with info about element's collisions\n */\nexport interface NgcCollisionChange {\n  id: number;\n  active: boolean;\n  collidedElements: AngularCollisionDirective[];\n}\n\n@Directive({\n  selector: '[ngcAngularCollision]',\n  exportAs: 'ngcAngularCollision',\n})\nexport class AngularCollisionDirective\n  implements OnChanges, AfterContentChecked, OnDestroy {\n  /**\n   * Disable interval position checking\n   */\n  @Input() public disableInterval: boolean;\n\n  /**\n   * Interval time for position checking\n   */\n  @Input() public intervalTime: number = 100;\n\n  /**\n   * Element's position changes\n   */\n  @Output() public rectangleChange: EventEmitter = new EventEmitter();\n\n  /**\n   * Element's collision changes\n   */\n  @Output() public collisionActiveChange: EventEmitter = new EventEmitter();\n\n  @HostBinding('class.collision') private collisionActive: boolean;\n\n  /**\n   * Element's collision changes as observable, same as output\n   */\n  public rectangleChange$: Subject = new Subject();\n\n  /**\n   * Observable that emits on instance destroy\n   */\n  public destroy$: Subject = new Subject();\n\n  /**\n   * Unique id for directive instance\n   */\n  public id: number;\n\n  /**\n   * True if element has any collision\n   */\n  public collision: boolean;\n\n  /**\n   * Observable of collision value\n   */\n  public collision$: Observable;\n\n  private _collision$: Subject = new Subject();\n  private _timerSubscription: Subscription;\n  private _active: boolean = false;\n  private _intervalTime: number;\n  private _disableInterval: boolean;\n  private static _uid: number = 0;\n\n  constructor(public element: ElementRef, @Optional() config?: NgcConfig) {\n    this.id = AngularCollisionDirective._uid++;\n    this.collision$ = this._collision$.asObservable();\n\n    if (config) {\n      this._intervalTime = config.intervalTime;\n      this._disableInterval = config.disableInterval;\n    }\n  }\n\n  public ngOnChanges(changes: SimpleChanges): void {\n    if (changes.intervalTime) {\n      this._intervalTime = changes.intervalTime.currentValue;\n    }\n\n    if (changes.disableInterval) {\n      this._disableInterval = changes.disableInterval.currentValue;\n    }\n  }\n\n  public ngAfterContentChecked(): void {\n    if (this._active) {\n      this.checkPosition();\n    }\n  }\n\n  public ngOnDestroy(): void {\n    this.unsubscribe();\n    this.destroy$.next(this.id);\n  }\n\n  /**\n   * Update collision status\n   *\n   * @param active\n   * @param collidedIds\n   */\n  public updateCollisionState(\n    active: boolean,\n    collidedElements: AngularCollisionDirective[]\n  ): void {\n    // Fix for ExpressionChangedAfterItHasBeenCheckedError\n    Promise.resolve().then(() => {\n      this.collisionActive = active;\n      this.collision = active;\n      this._collision$.next(active);\n      this.collisionActiveChange.emit({\n        id: this.id,\n        active,\n        collidedElements,\n      });\n    });\n  }\n\n  /**\n   * Check and emit element position\n   */\n  public checkPosition(): void {\n    const domRect: DOMRect = this.element.nativeElement.getBoundingClientRect();\n\n    this.rectangleChange$.next({ domRect, element: this });\n    this.rectangleChange.emit({ domRect, element: this });\n  }\n\n  /**\n   * Start tracking element\n   */\n  public startTracking(): void {\n    this._active = true;\n\n    if (!this._disableInterval) {\n      this._timerSubscription = timer(0, this._intervalTime).subscribe(() => {\n        this.checkPosition();\n      });\n    }\n  }\n\n  /**\n   * Stop tracking element\n   */\n  public stopTracking(): void {\n    this._active = false;\n    this.updateCollisionState(false, []);\n    this.unsubscribe();\n  }\n\n  /**\n   * Unsubscribe timer observable\n   */\n  public unsubscribe(): void {\n    if (this._timerSubscription && !this._timerSubscription.closed) {\n      this._timerSubscription.unsubscribe();\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NgcConfig.html":{"url":"classes/NgcConfig.html","title":"class - NgcConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NgcConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-collision/src/lib/models/ngc-config.model.ts\n        \n\n            \n                Description\n            \n            \n                Optional module config\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                disableInterval\n                            \n                            \n                                    Public\n                                intervalTime\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(disableInterval: boolean, intervalTime: number)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-collision/src/lib/models/ngc-config.model.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        disableInterval\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        intervalTime\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            disableInterval\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/models/ngc-config.model.ts:9\n                            \n                        \n\n                \n                    \n                        Disable interval position checking\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            intervalTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 100\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/models/ngc-config.model.ts:13\n                            \n                        \n\n                \n                    \n                        Interval time for position checking\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class NgcConfig {\n  constructor(\n    /**\n     * Disable interval position checking\n     */\n    public disableInterval: boolean = false,\n    /**\n     * Interval time for position checking\n     */\n    public intervalTime: number = 100\n  ) {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgcElementChange.html":{"url":"interfaces/NgcElementChange.html","title":"interface - NgcElementChange","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgcElementChange\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-collision/src/lib/angular-collision.directive.ts\n        \n\n            \n                Description\n            \n            \n                Object containing changed element's domRect and element itself\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        domRect\n                                \n                                \n                                        element\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        domRect\n                                    \n                                \n                                \n                                    \n                                        domRect:     DOMRect\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DOMRect\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        element\n                                    \n                                \n                                \n                                    \n                                        element:     AngularCollisionDirective\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     AngularCollisionDirective\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Directive,\n  AfterContentChecked,\n  ElementRef,\n  Output,\n  EventEmitter,\n  OnDestroy,\n  Input,\n  HostBinding,\n  Optional,\n  OnChanges,\n  SimpleChanges,\n} from '@angular/core';\nimport { timer, Subscription, Subject, Observable } from 'rxjs';\nimport { NgcConfig } from './models/ngc-config.model';\n\n/**\n * Object containing changed element's domRect and element itself\n */\nexport interface NgcElementChange {\n  domRect: DOMRect;\n  element: AngularCollisionDirective;\n}\n\n/**\n * Object with info about element's collisions\n */\nexport interface NgcCollisionChange {\n  id: number;\n  active: boolean;\n  collidedElements: AngularCollisionDirective[];\n}\n\n@Directive({\n  selector: '[ngcAngularCollision]',\n  exportAs: 'ngcAngularCollision',\n})\nexport class AngularCollisionDirective\n  implements OnChanges, AfterContentChecked, OnDestroy {\n  /**\n   * Disable interval position checking\n   */\n  @Input() public disableInterval: boolean;\n\n  /**\n   * Interval time for position checking\n   */\n  @Input() public intervalTime: number = 100;\n\n  /**\n   * Element's position changes\n   */\n  @Output() public rectangleChange: EventEmitter = new EventEmitter();\n\n  /**\n   * Element's collision changes\n   */\n  @Output() public collisionActiveChange: EventEmitter = new EventEmitter();\n\n  @HostBinding('class.collision') private collisionActive: boolean;\n\n  /**\n   * Element's collision changes as observable, same as output\n   */\n  public rectangleChange$: Subject = new Subject();\n\n  /**\n   * Observable that emits on instance destroy\n   */\n  public destroy$: Subject = new Subject();\n\n  /**\n   * Unique id for directive instance\n   */\n  public id: number;\n\n  /**\n   * True if element has any collision\n   */\n  public collision: boolean;\n\n  /**\n   * Observable of collision value\n   */\n  public collision$: Observable;\n\n  private _collision$: Subject = new Subject();\n  private _timerSubscription: Subscription;\n  private _active: boolean = false;\n  private _intervalTime: number;\n  private _disableInterval: boolean;\n  private static _uid: number = 0;\n\n  constructor(public element: ElementRef, @Optional() config?: NgcConfig) {\n    this.id = AngularCollisionDirective._uid++;\n    this.collision$ = this._collision$.asObservable();\n\n    if (config) {\n      this._intervalTime = config.intervalTime;\n      this._disableInterval = config.disableInterval;\n    }\n  }\n\n  public ngOnChanges(changes: SimpleChanges): void {\n    if (changes.intervalTime) {\n      this._intervalTime = changes.intervalTime.currentValue;\n    }\n\n    if (changes.disableInterval) {\n      this._disableInterval = changes.disableInterval.currentValue;\n    }\n  }\n\n  public ngAfterContentChecked(): void {\n    if (this._active) {\n      this.checkPosition();\n    }\n  }\n\n  public ngOnDestroy(): void {\n    this.unsubscribe();\n    this.destroy$.next(this.id);\n  }\n\n  /**\n   * Update collision status\n   *\n   * @param active\n   * @param collidedIds\n   */\n  public updateCollisionState(\n    active: boolean,\n    collidedElements: AngularCollisionDirective[]\n  ): void {\n    // Fix for ExpressionChangedAfterItHasBeenCheckedError\n    Promise.resolve().then(() => {\n      this.collisionActive = active;\n      this.collision = active;\n      this._collision$.next(active);\n      this.collisionActiveChange.emit({\n        id: this.id,\n        active,\n        collidedElements,\n      });\n    });\n  }\n\n  /**\n   * Check and emit element position\n   */\n  public checkPosition(): void {\n    const domRect: DOMRect = this.element.nativeElement.getBoundingClientRect();\n\n    this.rectangleChange$.next({ domRect, element: this });\n    this.rectangleChange.emit({ domRect, element: this });\n  }\n\n  /**\n   * Start tracking element\n   */\n  public startTracking(): void {\n    this._active = true;\n\n    if (!this._disableInterval) {\n      this._timerSubscription = timer(0, this._intervalTime).subscribe(() => {\n        this.checkPosition();\n      });\n    }\n  }\n\n  /**\n   * Stop tracking element\n   */\n  public stopTracking(): void {\n    this._active = false;\n    this.updateCollisionState(false, []);\n    this.unsubscribe();\n  }\n\n  /**\n   * Unsubscribe timer observable\n   */\n  public unsubscribe(): void {\n    if (this._timerSubscription && !this._timerSubscription.closed) {\n      this._timerSubscription.unsubscribe();\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgcTrackedElement.html":{"url":"interfaces/NgcTrackedElement.html","title":"interface - NgcTrackedElement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgcTrackedElement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-collision/src/lib/models/ngc-tracked-element.interface.ts\n        \n\n            \n                Description\n            \n            \n                Tracked element in library service\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        subscription\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Element id\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subscription\n                                    \n                                \n                                \n                                    \n                                        subscription:     Subscription\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Subscription\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Element changes observable subscription\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Subscription } from 'rxjs';\n\n/**\n * Tracked element in library service\n */\nexport interface NgcTrackedElement {\n  /**\n   * Element id\n   */\n  id: number;\n\n  /**\n   * Element changes observable subscription\n   */\n  subscription: Subscription;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/angular-collision/src/lib/angular-collision.directive.ts\n            \n            directive\n            AngularCollisionDirective\n            \n                51 %\n                (14/27)\n            \n        \n        \n            \n                \n                projects/angular-collision/src/lib/angular-collision.directive.ts\n            \n            interface\n            NgcCollisionChange\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                projects/angular-collision/src/lib/angular-collision.directive.ts\n            \n            interface\n            NgcElementChange\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                projects/angular-collision/src/lib/angular-collision.service.ts\n            \n            injectable\n            AngularCollisionService\n            \n                66 %\n                (8/12)\n            \n        \n        \n            \n                \n                projects/angular-collision/src/lib/models/ngc-config.model.ts\n            \n            class\n            NgcConfig\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                projects/angular-collision/src/lib/models/ngc-tracked-element.interface.ts\n            \n            interface\n            NgcTrackedElement\n            \n                100 %\n                (3/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~10.1.5\n        \n            @angular/common : ~10.1.5\n        \n            @angular/compiler : ~10.1.5\n        \n            @angular/core : ~10.1.5\n        \n            @angular/forms : ~10.1.5\n        \n            @angular/platform-browser : ~10.1.5\n        \n            @angular/platform-browser-dynamic : ~10.1.5\n        \n            @angular/router : ~10.1.5\n        \n            @angular/cdk : ^10.2.4\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNgCollision\nAngular 10 library for elements collision detection\nAuto-generated documentation\nRunning demo app\nng serve demo-app\nDrag & drop made with angular/cdk. Not a part of library.\nGenerate docs\nDocumentation is auto-generated every commit.\nYou can also generate docs manually by:\nnpm run compodoc\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AngularCollisionModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AngularCollisionModule\n\n\n\ncluster_AngularCollisionModule_declarations\n\n\n\ncluster_AngularCollisionModule_exports\n\n\n\n\nAngularCollisionDirective\n\nAngularCollisionDirective\n\n\n\nAngularCollisionModule\n\nAngularCollisionModule\n\nAngularCollisionModule -->\n\nAngularCollisionDirective->AngularCollisionModule\n\n\n\n\n\nAngularCollisionDirective \n\nAngularCollisionDirective \n\nAngularCollisionDirective  -->\n\nAngularCollisionModule->AngularCollisionDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
