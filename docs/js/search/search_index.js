var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/directives/AngularCollisionDirective.html",[0,0.568,1,0.439]],["body/directives/AngularCollisionDirective.html",[0,0.676,1,0.644,2,1.142,3,0.469,4,0.291,5,0.225,6,0.837,7,1.365,8,0.561,9,0.733,10,1.406,11,1.406,12,1.136,13,1.142,14,0.904,15,1.136,16,0.291,17,0.591,18,2.001,19,1.406,20,1.406,21,1.406,22,1.406,23,1.406,24,1.136,25,1.406,26,1.425,27,1.949,28,1.769,29,1.273,30,1.304,31,1.891,32,1.119,33,1.612,34,1.612,35,1.841,36,1.304,37,1.612,38,1.612,39,1.891,40,1.406,41,1.841,42,1.136,43,1.136,44,1.841,45,1.406,46,1.841,47,1.841,48,0.694,49,1.142,50,1.769,51,0.852,52,0.676,53,2.081,54,1.841,55,1.136,56,0.085,57,0.921,58,0.807,59,0.741,60,1.142,61,1.544,62,1.142,63,0.733,64,1.057,65,1.356,66,1.057,67,0.896,68,1.891,69,1.356,70,0.733,71,1.142,72,0.904,73,1.989,74,1.142,75,2.069,76,1.304,77,1.142,78,1.142,79,1.142,80,1.119,81,1.119,82,2.069,83,1.58,84,1.142,85,1.119,86,1.612,87,1.142,88,1.142,89,1.142,90,0.904,91,1.057,92,1.142,93,0.904,94,1.142,95,1.406,96,1.47,97,1.142,98,1.769,99,1.142,100,1.119,101,1.119,102,1.989,103,1.136,104,1.142,105,1.877,106,1.093,107,1.142,108,1.142,109,1.142,110,0.921,111,1.142,112,0.733,113,1.142,114,1.406,115,1.142,116,1.142,117,1.119,118,1.612,119,1.142,120,1.142,121,1.119,122,1.142,123,1.119,124,1.769,125,0.742,126,1.406,127,0.694,128,0.366,129,0.366,130,0.455,131,0.561,132,1.119,133,0.694,134,0.694,135,1.608,136,0.694,137,0.455,138,0.362,139,0.291,140,0.455,141,0.366,142,0.694,143,0.113,144,0.694,145,0.694,146,0.561,147,1.119,148,0.694,149,1.119,150,0.694,151,1.119,152,0.694,153,1.406,154,0.694,155,0.694,156,0.694,157,0.694,158,0.694,159,1.406,160,1.119,161,1.119,162,0.694,163,0.904,164,0.694,165,0.694,166,0.694,167,0.694,168,0.694,169,0.694,170,0.694,171,0.561,172,0.694,173,0.694,174,0.694,175,1.119,176,0.694,177,0.694,178,0.694,179,0.694,180,0.694,181,0.021,182,0.033,183,0.021]],["title/modules/AngularCollisionModule.html",[184,0.888,185,0.888]],["body/modules/AngularCollisionModule.html",[1,0.884,3,0.714,4,0.714,5,0.551,6,0.693,7,1.131,24,1.731,32,1.702,51,1.238,52,1.062,53,1.376,55,1.376,56,0.084,57,1.116,58,0.551,59,0.714,82,1.702,125,1.238,128,0.899,130,1.116,131,1.376,137,0.551,143,0.277,181,0.051,182,0.064,183,0.051,184,1.116,185,1.741,186,1.702,187,1.376,188,2.139,189,2.343,190,1.702,191,2.691,192,2.944,193,2.139,194,2.139,195,2.139,196,2.691,197,2.139,198,2.139,199,2.801,200,2.691,201,2.801,202,2.801,203,3.856,204,2.944,205,1.702,206,2.139,207,2.139,208,2.801,209,2.801]],["title/injectables/AngularCollisionService.html",[210,1.095,211,1.095]],["body/injectables/AngularCollisionService.html",[1,0.834,3,0.353,4,0.353,5,0.273,6,0.778,7,1.269,9,0.552,12,1.055,16,0.353,17,0.689,18,1.838,26,1.367,29,1.269,30,1.046,32,1.305,36,1.453,48,1.596,53,1.912,55,1.572,56,0.085,57,1.274,58,0.736,59,0.815,61,0.855,67,0.547,68,1.596,69,1.046,82,2.056,83,1.523,90,1.055,91,1.452,93,1.055,96,0.855,105,1.572,106,0.949,110,1.274,112,0.552,125,1.027,128,0.445,129,0.445,130,0.552,135,1.662,137,0.273,139,0.753,140,1.178,143,0.137,163,1.662,171,1.291,181,0.025,182,0.039,183,0.025,205,0.843,206,1.059,207,1.059,210,1.055,211,1.055,212,1.387,213,1.059,214,2.627,215,3.383,216,2.627,217,2.147,218,2.147,219,2.006,220,2.006,221,2.147,222,2.147,223,2.147,224,1.387,225,2.147,226,2.147,227,2.958,228,1.387,229,2.147,230,2.147,231,1.639,232,3.235,233,1.639,234,1.387,235,1.387,236,2.857,237,1.387,238,1.387,239,1.387,240,2.147,241,1.387,242,2.147,243,1.291,244,1.387,245,2.144,246,2.694,247,1.387,248,2.958,249,1.387,250,2.147,251,1.387,252,1.387,253,1.387,254,1.387,255,1.387,256,1.059,257,1.387,258,1.387,259,1.387,260,1.387,261,1.387,262,1.387,263,1.387,264,1.387,265,1.387,266,1.387,267,2.147,268,1.387,269,1.387,270,1.387,271,1.387,272,1.387,273,1.387,274,1.387,275,1.387,276,2.147,277,2.147,278,2.147,279,1.387,280,1.387,281,1.387,282,1.387,283,2.147,284,2.147,285,1.387,286,1.387,287,2.627,288,2.147,289,1.387,290,1.387,291,1.387,292,2.958,293,1.387,294,1.387,295,1.387,296,1.387,297,1.387,298,1.059,299,2.147,300,1.387,301,1.387,302,1.387,303,1.387,304,1.387,305,2.147,306,2.147,307,1.387,308,1.387,309,1.387,310,1.387,311,1.387]],["title/interfaces/NgcCollisionChange.html",[138,0.439,141,0.716]],["body/interfaces/NgcCollisionChange.html",[0,0.75,1,0.715,3,0.75,4,0.426,5,0.329,6,0.329,7,0.537,8,0.821,9,0.666,10,1.503,11,1.503,12,1.215,14,0.821,15,1.215,16,0.426,17,0.794,18,1.848,19,1.016,20,1.016,21,1.016,22,1.016,23,1.016,24,0.821,25,1.016,26,1.376,27,1.848,28,1.503,29,1.266,30,1.498,31,1.503,33,1.016,34,1.016,36,0.821,37,1.016,38,1.016,39,1.503,40,1.016,42,0.821,43,0.821,45,1.016,50,1.503,51,0.794,52,0.63,56,0.085,58,0.579,59,0.63,61,1.571,63,0.666,64,0.985,65,1.296,66,0.985,67,0.958,69,0.666,70,0.666,72,0.821,73,2.11,75,2.209,76,1.173,80,1.016,81,1.016,83,1.538,85,1.016,86,1.503,90,0.821,91,0.985,93,0.821,95,1.503,96,1.448,98,2.209,100,1.016,101,1.016,102,2.396,103,1.215,105,1.848,106,1.114,110,0.985,112,0.666,114,1.503,117,1.016,118,1.503,121,1.016,123,1.016,124,1.977,125,0.945,126,1.789,127,1.016,128,0.537,129,0.537,130,0.666,131,0.821,132,1.789,133,1.016,134,1.016,135,1.848,136,1.016,137,0.579,138,0.487,139,0.426,140,0.985,141,0.794,142,1.016,143,0.165,144,1.016,145,1.016,146,0.821,147,1.503,148,1.016,149,1.503,150,1.016,151,1.503,152,1.016,153,1.789,154,1.016,155,1.016,156,1.016,157,1.016,158,1.016,159,1.789,160,1.503,161,1.503,162,1.016,163,1.215,164,1.016,165,1.016,166,1.016,167,1.016,168,1.016,169,1.016,170,1.016,171,0.821,172,1.016,173,1.016,174,1.016,175,1.503,176,1.016,177,1.016,178,1.016,179,1.016,180,1.016,181,0.03,182,0.045,183,0.03,312,0.821,313,0.821]],["title/classes/NgcConfig.html",[52,0.568,143,0.221]],["body/classes/NgcConfig.html",[3,0.721,4,0.721,5,0.557,6,0.799,16,0.721,17,1.139,26,1.37,42,1.995,43,2.055,48,2.156,51,0.908,52,0.904,53,1.903,55,1.39,56,0.083,57,1.127,58,0.762,59,0.904,61,1.618,63,1.413,64,1.618,65,1.618,66,1.618,67,1.035,68,2.156,69,1.413,70,1.413,72,1.743,103,1.743,137,0.557,143,0.28,181,0.051,182,0.064,183,0.051,184,1.127,313,1.39,314,2.83,315,2.468,316,2.161,317,2.83,318,2.83,319,2.83,320,2.83]],["title/interfaces/NgcElementChange.html",[138,0.439,139,0.568]],["body/interfaces/NgcElementChange.html",[0,0.752,1,0.716,3,0.632,4,0.428,5,0.331,6,0.331,7,0.539,8,0.825,9,0.669,10,1.508,11,1.508,12,1.219,14,0.825,15,1.219,16,0.428,17,0.797,18,1.851,19,1.021,20,1.021,21,1.021,22,1.021,23,1.021,24,0.825,25,1.021,26,1.377,27,1.851,28,1.508,29,1.337,30,1.299,31,1.508,33,1.021,34,1.021,36,0.825,37,1.021,38,1.021,39,1.508,40,1.021,42,0.825,43,0.825,45,1.021,50,1.508,51,0.797,52,0.632,56,0.085,58,0.488,59,0.632,61,1.501,63,0.669,64,0.989,65,1.299,66,0.989,67,0.886,69,0.669,70,0.669,72,0.825,73,2.114,75,2.213,76,1.176,80,1.021,81,1.021,83,1.54,85,1.021,86,1.508,90,0.825,91,0.989,93,0.825,95,1.508,96,1.451,98,1.794,100,1.021,101,1.021,102,2.213,103,1.219,105,1.851,106,1.117,110,0.989,112,0.669,114,1.508,117,1.021,118,1.508,121,1.021,123,1.021,124,1.981,125,0.948,126,1.794,127,1.021,128,0.539,129,0.539,130,0.669,131,0.825,132,1.794,133,1.508,134,1.508,135,2.046,136,1.508,137,0.581,138,0.488,139,0.632,140,0.669,141,0.539,142,1.021,143,0.166,144,1.021,145,1.021,146,0.825,147,1.508,148,1.021,149,1.508,150,1.021,151,1.508,152,1.021,153,1.794,154,1.021,155,1.021,156,1.021,157,1.021,158,1.021,159,1.794,160,1.508,161,1.508,162,1.021,163,1.219,164,1.021,165,1.021,166,1.021,167,1.021,168,1.021,169,1.021,170,1.021,171,0.825,172,1.021,173,1.021,174,1.021,175,1.508,176,1.021,177,1.021,178,1.021,179,1.021,180,1.021,181,0.031,182,0.045,183,0.031,312,0.825,313,0.825]],["title/interfaces/NgcTrackedElement.html",[138,0.439,243,1.095]],["body/interfaces/NgcTrackedElement.html",[3,0.774,4,0.774,5,0.598,6,0.598,16,0.774,17,1.19,29,1.394,30,1.73,56,0.084,58,0.729,67,1.019,76,1.476,96,1.476,110,1.791,125,0.975,129,0.975,137,0.598,138,0.598,181,0.055,182,0.067,183,0.055,243,1.821,245,2.43,312,1.492,313,1.492,315,1.846,321,2.319,322,2.829,323,2.829]],["title/coverage.html",[324,2.317]],["body/coverage.html",[0,0.795,1,0.614,5,0.614,6,0.86,7,1.349,8,1.988,52,0.795,56,0.081,58,0.614,70,1.243,106,1.002,138,0.796,139,0.795,141,1.002,143,0.309,181,0.057,182,0.068,183,0.057,210,1.533,211,1.533,213,2.383,243,1.533,245,1.896,315,2.289,316,2.383,321,2.383,324,2.383,325,2.383,326,3.121,327,3.121,328,3.121,329,3.121,330,3.121,331,3.121,332,3.121,333,3.121,334,3.121,335,3.121,336,3.121,337,3.121,338,3.121,339,3.121,340,3.121]],["title/dependencies.html",[187,1.316,341,1.866]],["body/dependencies.html",[56,0.084,128,1.045,129,1.045,181,0.059,182,0.07,183,0.059,187,1.599,342,3.255,343,4.493,344,3.255,345,3.255,346,3.255,347,3.863,348,2.949,349,3.255,350,3.255,351,2.485,352,3.255,353,3.255,354,3.255,355,3.255,356,3.255,357,3.255]],["title/index.html",[16,0.475,358,1.866,359,1.866]],["body/index.html",[0,0.707,9,0.78,14,0.962,15,0.962,26,1.232,27,1.886,29,1.124,51,0.629,56,0.084,57,1.283,59,0.499,63,0.78,64,0.78,65,1.572,66,1.105,67,0.892,76,0.78,83,1.395,91,0.78,106,0.629,112,1.395,137,0.546,139,0.499,140,1.105,141,0.629,143,0.319,146,0.962,181,0.036,182,0.05,183,0.036,184,0.78,185,0.78,189,1.19,190,1.19,200,1.496,204,1.496,205,1.19,211,1.363,219,2.118,220,1.496,231,1.496,232,2.674,233,1.496,236,1.496,246,2.118,256,1.496,298,1.496,322,2.118,323,1.496,325,2.118,351,1.496,360,1.959,361,1.959,362,2.774,363,2.774,364,2.774,365,2.774,366,2.774,367,2.774,368,1.959,369,1.959,370,3.221,371,1.959,372,1.959,373,1.959,374,1.959,375,1.959,376,1.959,377,1.959,378,1.959,379,1.959,380,1.959,381,3.503,382,3.503,383,1.959,384,1.959,385,1.959,386,1.959,387,1.959,388,1.959,389,1.959,390,1.959,391,1.959,392,2.774,393,1.959,394,1.959,395,1.959,396,1.959,397,3.221,398,1.959,399,1.959,400,1.959,401,1.959,402,1.959,403,1.959,404,3.221,405,2.774,406,3.221,407,1.959,408,1.959,409,1.959,410,1.959,411,1.959,412,2.774,413,3.221,414,1.959,415,1.959,416,1.959,417,1.959,418,1.959,419,1.959,420,1.959,421,1.959,422,1.959,423,3.221,424,1.959,425,1.959,426,1.959,427,1.959,428,1.959,429,1.959,430,1.959,431,1.959,432,1.959,433,2.774,434,1.959,435,2.774,436,1.959,437,1.959,438,1.959,439,1.959,440,1.959,441,1.959,442,3.221,443,2.774,444,3.503,445,1.959,446,1.959,447,1.959,448,1.959,449,1.959,450,2.774,451,2.774,452,1.959,453,1.959,454,1.959,455,3.503,456,1.959,457,3.697,458,1.959,459,1.959,460,1.959,461,1.959,462,1.959,463,1.959,464,1.959,465,1.959,466,1.959,467,2.774,468,3.503,469,1.959,470,2.774,471,2.774,472,1.959,473,3.503,474,1.959,475,1.959]],["title/modules.html",[186,1.844]],["body/modules.html",[56,0.074,181,0.064,182,0.074,183,0.064,185,1.411,186,2.152,348,2.703,476,3.541,477,3.541,478,3.541]],["title/overview.html",[479,2.317]],["body/overview.html",[0,0.831,1,0.878,56,0.077,143,0.323,181,0.059,182,0.07,183,0.059,184,1.541,185,1.734,187,1.603,188,2.491,189,1.982,190,1.982,191,2.491,192,2.491,193,2.491,194,2.491,195,2.491,196,2.953,197,2.491,198,2.491,210,1.603,312,1.603,479,2.491,480,4.264,481,3.262]]],"invertedIndex":[["",{"_index":56,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["0",{"_index":112,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"index.html":{}}}],["0.10.2",{"_index":357,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":480,"title":{},"body":{"overview.html":{}}}],["1.0",{"_index":381,"title":{},"body":{"index.html":{}}}],["1/3",{"_index":333,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":331,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":361,"title":{},"body":{"index.html":{}}}],["10.1.5",{"_index":343,"title":{},"body":{"dependencies.html":{}}}],["10.2.4",{"_index":352,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":70,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"coverage.html":{}}}],["10000",{"_index":429,"title":{},"body":{"index.html":{}}}],["100px",{"_index":405,"title":{},"body":{"index.html":{}}}],["14/27",{"_index":329,"title":{},"body":{"coverage.html":{}}}],["150px",{"_index":397,"title":{},"body":{"index.html":{}}}],["2.0.0",{"_index":355,"title":{},"body":{"dependencies.html":{}}}],["25",{"_index":330,"title":{},"body":{"coverage.html":{}}}],["250px",{"_index":410,"title":{},"body":{"index.html":{}}}],["2px",{"_index":399,"title":{},"body":{"index.html":{}}}],["3",{"_index":481,"title":{},"body":{"overview.html":{}}}],["3/3",{"_index":338,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":337,"title":{},"body":{"coverage.html":{}}}],["300px",{"_index":411,"title":{},"body":{"index.html":{}}}],["33",{"_index":332,"title":{},"body":{"coverage.html":{}}}],["50px",{"_index":408,"title":{},"body":{"index.html":{}}}],["51",{"_index":328,"title":{},"body":{"coverage.html":{}}}],["6.6.0",{"_index":353,"title":{},"body":{"dependencies.html":{}}}],["66",{"_index":334,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":336,"title":{},"body":{"coverage.html":{}}}],["8/12",{"_index":335,"title":{},"body":{"coverage.html":{}}}],["__one",{"_index":403,"title":{},"body":{"index.html":{}}}],["__three",{"_index":409,"title":{},"body":{"index.html":{}}}],["__two",{"_index":407,"title":{},"body":{"index.html":{}}}],["_active",{"_index":19,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["_collision",{"_index":20,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["_disableinterval",{"_index":21,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["_intervaltime",{"_index":22,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["_timersubscription",{"_index":23,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["_uid",{"_index":25,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["active",{"_index":102,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["add",{"_index":366,"title":{},"body":{"index.html":{}}}],["addtrackedelement",{"_index":217,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["addtrackedelement(element",{"_index":223,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["aftercontentchecked",{"_index":11,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["afterviewinit",{"_index":418,"title":{},"body":{"index.html":{}}}],["angular",{"_index":205,"title":{},"body":{"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"index.html":{}}}],["angular/animations",{"_index":342,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":351,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["angular/common",{"_index":344,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler",{"_index":345,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":128,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":346,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":347,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":350,"title":{},"body":{"dependencies.html":{}}}],["angularcollisiondirective",{"_index":1,"title":{"directives/AngularCollisionDirective.html":{}},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"coverage.html":{},"overview.html":{}}}],["angularcollisiondirective._uid",{"_index":148,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["angularcollisionmodule",{"_index":185,"title":{"modules/AngularCollisionModule.html":{}},"body":{"modules/AngularCollisionModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["angularcollisionmodule.forroot(new",{"_index":372,"title":{},"body":{"index.html":{}}}],["angularcollisionservice",{"_index":211,"title":{"injectables/AngularCollisionService.html":{}},"body":{"injectables/AngularCollisionService.html":{},"coverage.html":{},"index.html":{}}}],["app",{"_index":413,"title":{},"body":{"index.html":{}}}],["app.component.html",{"_index":415,"title":{},"body":{"index.html":{}}}],["app.component.scss",{"_index":417,"title":{},"body":{"index.html":{}}}],["appcomponent",{"_index":370,"title":{},"body":{"index.html":{}}}],["applied",{"_index":390,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":375,"title":{},"body":{"index.html":{}}}],["array",{"_index":421,"title":{},"body":{"index.html":{}}}],["array.isarray(elements",{"_index":276,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["artifacts",{"_index":459,"title":{},"body":{"index.html":{}}}],["async",{"_index":378,"title":{},"body":{"index.html":{}}}],["auto",{"_index":363,"title":{},"body":{"index.html":{}}}],["between",{"_index":230,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["boolean",{"_index":61,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{}}}],["bootstrap",{"_index":190,"title":{},"body":{"modules/AngularCollisionModule.html":{},"index.html":{},"overview.html":{}}}],["border",{"_index":392,"title":{},"body":{"index.html":{}}}],["browse",{"_index":478,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":348,"title":{},"body":{"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":371,"title":{},"body":{"index.html":{}}}],["build",{"_index":457,"title":{},"body":{"index.html":{}}}],["case",{"_index":369,"title":{},"body":{"index.html":{}}}],["change",{"_index":298,"title":{},"body":{"injectables/AngularCollisionService.html":{},"index.html":{}}}],["changed",{"_index":134,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["changes",{"_index":76,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"index.html":{}}}],["changes.disableinterval",{"_index":157,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["changes.disableinterval.currentvalue",{"_index":158,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["changes.intervaltime",{"_index":155,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["changes.intervaltime.currentvalue",{"_index":156,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["check",{"_index":80,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["checkelementscollision",{"_index":218,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["checkelementscollision(first",{"_index":226,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["checking",{"_index":66,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"index.html":{}}}],["checkposition",{"_index":33,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["checks",{"_index":229,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["class",{"_index":143,"title":{"classes/NgcConfig.html":{}},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["class.collision",{"_index":47,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["classes",{"_index":314,"title":{},"body":{"classes/NgcConfig.html":{}}}],["cluster_angularcollisionmodule",{"_index":193,"title":{},"body":{"modules/AngularCollisionModule.html":{},"overview.html":{}}}],["cluster_angularcollisionmodule_declarations",{"_index":195,"title":{},"body":{"modules/AngularCollisionModule.html":{},"overview.html":{}}}],["cluster_angularcollisionmodule_exports",{"_index":194,"title":{},"body":{"modules/AngularCollisionModule.html":{},"overview.html":{}}}],["collidedelements",{"_index":98,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["collidedids",{"_index":164,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["collision",{"_index":27,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"index.html":{}}}],["collision.directive",{"_index":206,"title":{},"body":{"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{}}}],["collision.directive.ts",{"_index":8,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"coverage.html":{}}}],["collision.directive.ts:108",{"_index":87,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:118",{"_index":84,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:124",{"_index":88,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:135",{"_index":99,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:155",{"_index":79,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:165",{"_index":89,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:178",{"_index":92,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:187",{"_index":94,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:43",{"_index":62,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:48",{"_index":71,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:53",{"_index":77,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:60",{"_index":74,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:64",{"_index":78,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:69",{"_index":122,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:74",{"_index":116,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:79",{"_index":120,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:84",{"_index":113,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:89",{"_index":115,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:91",{"_index":107,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:92",{"_index":111,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:93",{"_index":104,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:94",{"_index":109,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:95",{"_index":108,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:96",{"_index":54,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.directive.ts:98",{"_index":119,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["collision.module.ts",{"_index":199,"title":{},"body":{"modules/AngularCollisionModule.html":{}}}],["collision.module.ts:10",{"_index":202,"title":{},"body":{"modules/AngularCollisionModule.html":{}}}],["collision.service.ts",{"_index":213,"title":{},"body":{"injectables/AngularCollisionService.html":{},"coverage.html":{}}}],["collision.service.ts:115",{"_index":228,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["collision.service.ts:131",{"_index":224,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["collision.service.ts:149",{"_index":241,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["collision.service.ts:17",{"_index":244,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["collision.service.ts:22",{"_index":247,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["collision.service.ts:27",{"_index":249,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["collision.service.ts:31",{"_index":222,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["collision.service.ts:63",{"_index":234,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["collision.service.ts:74",{"_index":237,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["collision.service.ts:94",{"_index":239,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["collision/src/lib/angular",{"_index":7,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"coverage.html":{}}}],["collision/src/lib/models/ngc",{"_index":315,"title":{},"body":{"classes/NgcConfig.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{}}}],["collisionactive",{"_index":145,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["collisionactivechange",{"_index":45,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["collisions",{"_index":140,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"index.html":{}}}],["collisions.length",{"_index":273,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["collisions.push(innerelement.element",{"_index":271,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["color",{"_index":393,"title":{},"body":{"index.html":{}}}],["commit",{"_index":452,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":374,"title":{},"body":{"index.html":{}}}],["compodoc",{"_index":456,"title":{},"body":{"index.html":{}}}],["component",{"_index":412,"title":{},"body":{"index.html":{}}}],["config",{"_index":51,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"index.html":{}}}],["config.disableinterval",{"_index":154,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["config.intervaltime",{"_index":152,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["config.model",{"_index":131,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["config.model.ts",{"_index":316,"title":{},"body":{"classes/NgcConfig.html":{},"coverage.html":{}}}],["config.model.ts:13",{"_index":320,"title":{},"body":{"classes/NgcConfig.html":{}}}],["config.model.ts:4",{"_index":318,"title":{},"body":{"classes/NgcConfig.html":{}}}],["config.model.ts:9",{"_index":319,"title":{},"body":{"classes/NgcConfig.html":{}}}],["const",{"_index":171,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["constructor",{"_index":48,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{}}}],["constructor(disableinterval",{"_index":317,"title":{},"body":{"classes/NgcConfig.html":{}}}],["constructor(element",{"_index":49,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["constructor(public",{"_index":146,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"index.html":{}}}],["containing",{"_index":133,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["coverage",{"_index":324,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["declarations",{"_index":189,"title":{},"body":{"modules/AngularCollisionModule.html":{},"index.html":{},"overview.html":{}}}],["default",{"_index":68,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{}}}],["defined",{"_index":53,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{}}}],["demo",{"_index":443,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":187,"title":{"dependencies.html":{}},"body":{"modules/AngularCollisionModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":313,"title":{},"body":{"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["destroy",{"_index":28,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["detection",{"_index":362,"title":{},"body":{"index.html":{}}}],["directive",{"_index":0,"title":{"directives/AngularCollisionDirective.html":{}},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["directiveref.collision",{"_index":377,"title":{},"body":{"index.html":{}}}],["directives",{"_index":2,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["directory",{"_index":462,"title":{},"body":{"index.html":{}}}],["disable",{"_index":63,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"index.html":{}}}],["disableinterval",{"_index":42,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{}}}],["dist",{"_index":461,"title":{},"body":{"index.html":{}}}],["docs",{"_index":451,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":325,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["domrect",{"_index":135,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["drag",{"_index":446,"title":{},"body":{"index.html":{}}}],["drop",{"_index":447,"title":{},"body":{"index.html":{}}}],["dynamic",{"_index":349,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":474,"title":{},"body":{"index.html":{}}}],["el.id",{"_index":291,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["element",{"_index":29,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"index.html":{}}}],["element's",{"_index":75,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["element.domrect",{"_index":269,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["element.element.updatecollisionstate",{"_index":272,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["element.id",{"_index":292,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["element.interface",{"_index":254,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["element.interface.ts",{"_index":321,"title":{},"body":{"interfaces/NgcTrackedElement.html":{},"coverage.html":{}}}],["element.rectanglechange",{"_index":294,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["element.starttracking",{"_index":293,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["element.stoptracking",{"_index":301,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["elementref",{"_index":50,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["elements",{"_index":232,"title":{},"body":{"injectables/AngularCollisionService.html":{},"index.html":{}}}],["elements.foreach((element",{"_index":278,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["elementsmap.foreach",{"_index":265,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["elementsmap.foreach((element",{"_index":264,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["emit",{"_index":81,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["emits",{"_index":117,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["end",{"_index":473,"title":{},"body":{"index.html":{}}}],["eventemitter",{"_index":73,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["example",{"_index":365,"title":{},"body":{"index.html":{}}}],["execute",{"_index":470,"title":{},"body":{"index.html":{}}}],["export",{"_index":137,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"index.html":{}}}],["exportas",{"_index":142,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["exports",{"_index":192,"title":{},"body":{"modules/AngularCollisionModule.html":{},"overview.html":{}}}],["expressionchangedafterithasbeencheckederror",{"_index":166,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["false",{"_index":103,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{}}}],["file",{"_index":5,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{}}}],["finish",{"_index":242,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["first",{"_index":233,"title":{},"body":{"injectables/AngularCollisionService.html":{},"index.html":{}}}],["first.bottom",{"_index":285,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["first.left",{"_index":287,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["first.top",{"_index":283,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["fix",{"_index":165,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["flag",{"_index":465,"title":{},"body":{"index.html":{}}}],["forroot",{"_index":200,"title":{},"body":{"modules/AngularCollisionModule.html":{},"index.html":{}}}],["forroot(config",{"_index":201,"title":{},"body":{"modules/AngularCollisionModule.html":{}}}],["foundelement",{"_index":303,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["foundelement.subscription.closed",{"_index":308,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["foundelement.subscription.unsubscribe",{"_index":309,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["foundelement?.subscription",{"_index":307,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["generate",{"_index":450,"title":{},"body":{"index.html":{}}}],["generated",{"_index":364,"title":{},"body":{"index.html":{}}}],["getting",{"_index":358,"title":{"index.html":{}},"body":{}}],["h",{"_index":387,"title":{},"body":{"index.html":{}}}],["handle",{"_index":435,"title":{},"body":{"index.html":{}}}],["handlecollisionactivechange(change",{"_index":440,"title":{},"body":{"index.html":{}}}],["handlerectchange",{"_index":432,"title":{},"body":{"index.html":{}}}],["height",{"_index":398,"title":{},"body":{"index.html":{}}}],["host",{"_index":391,"title":{},"body":{"index.html":{}}}],["hostbinding",{"_index":127,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["hostbinding('class.collision",{"_index":144,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["hostbindings",{"_index":46,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["id",{"_index":30,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["identifier",{"_index":326,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":9,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"index.html":{}}}],["import",{"_index":125,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["imports",{"_index":367,"title":{},"body":{"index.html":{}}}],["index",{"_index":16,"title":{"index.html":{}},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["info",{"_index":3,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["init",{"_index":225,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["injectable",{"_index":210,"title":{"injectables/AngularCollisionService.html":{}},"body":{"injectables/AngularCollisionService.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":212,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["innerelement",{"_index":266,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["innerelement.domrect",{"_index":270,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["innerid",{"_index":267,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["input",{"_index":126,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["inputs",{"_index":41,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["instance",{"_index":118,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["instanceof",{"_index":277,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["interface",{"_index":138,"title":{"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{}}}],["interfaces",{"_index":312,"title":{},"body":{"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"overview.html":{}}}],["interval",{"_index":64,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"index.html":{}}}],["intervaltime",{"_index":43,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{}}}],["itself",{"_index":136,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["karma",{"_index":472,"title":{},"body":{"index.html":{}}}],["left",{"_index":406,"title":{},"body":{"index.html":{}}}],["legend",{"_index":188,"title":{},"body":{"modules/AngularCollisionModule.html":{},"overview.html":{}}}],["library",{"_index":322,"title":{},"body":{"interfaces/NgcTrackedElement.html":{},"index.html":{}}}],["made",{"_index":448,"title":{},"body":{"index.html":{}}}],["manually",{"_index":453,"title":{},"body":{"index.html":{}}}],["map",{"_index":246,"title":{},"body":{"injectables/AngularCollisionService.html":{},"index.html":{}}}],["matching",{"_index":182,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["metadata",{"_index":13,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["methods",{"_index":32,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{}}}],["models/ngc",{"_index":130,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["module",{"_index":184,"title":{"modules/AngularCollisionModule.html":{}},"body":{"modules/AngularCollisionModule.html":{},"classes/NgcConfig.html":{},"index.html":{},"overview.html":{}}}],["modules",{"_index":186,"title":{"modules.html":{}},"body":{"modules/AngularCollisionModule.html":{},"modules.html":{}}}],["modulewithproviders",{"_index":203,"title":{},"body":{"modules/AngularCollisionModule.html":{}}}],["name",{"_index":57,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{},"index.html":{}}}],["new",{"_index":106,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"coverage.html":{},"index.html":{}}}],["ng",{"_index":444,"title":{},"body":{"index.html":{}}}],["ngaftercontentchecked",{"_index":34,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["ngafterviewinit",{"_index":425,"title":{},"body":{"index.html":{}}}],["ngcangularcollision",{"_index":15,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"index.html":{}}}],["ngccollisionchange",{"_index":141,"title":{"interfaces/NgcCollisionChange.html":{}},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"coverage.html":{},"index.html":{}}}],["ngcconfig",{"_index":52,"title":{"classes/NgcConfig.html":{}},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"coverage.html":{}}}],["ngcconfig(true",{"_index":373,"title":{},"body":{"index.html":{}}}],["ngcelementchange",{"_index":139,"title":{"interfaces/NgcElementChange.html":{}},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"coverage.html":{},"index.html":{}}}],["ngcollision",{"_index":360,"title":{},"body":{"index.html":{}}}],["ngctrackedelement",{"_index":243,"title":{"interfaces/NgcTrackedElement.html":{}},"body":{"injectables/AngularCollisionService.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{}}}],["ngmodule",{"_index":204,"title":{},"body":{"modules/AngularCollisionModule.html":{},"index.html":{}}}],["ngonchanges",{"_index":35,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["ngonchanges(changes",{"_index":85,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["ngondestroy",{"_index":36,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["npm",{"_index":454,"title":{},"body":{"index.html":{}}}],["null",{"_index":423,"title":{},"body":{"index.html":{}}}],["number",{"_index":67,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"index.html":{}}}],["object",{"_index":132,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["observable",{"_index":96,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["onchanges",{"_index":10,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["ondestroy",{"_index":12,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["one",{"_index":422,"title":{},"body":{"index.html":{}}}],["optional",{"_index":59,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"index.html":{}}}],["out",{"_index":198,"title":{},"body":{"modules/AngularCollisionModule.html":{},"overview.html":{}}}],["output",{"_index":124,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["outputs",{"_index":44,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["overview",{"_index":479,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":341,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":163,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["parameters",{"_index":55,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"classes/NgcConfig.html":{}}}],["part",{"_index":449,"title":{},"body":{"index.html":{}}}],["pass",{"_index":368,"title":{},"body":{"index.html":{}}}],["performance",{"_index":263,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["pipe(takeuntil(element.destroy",{"_index":295,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["pipe(throttletime(100",{"_index":259,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["position",{"_index":65,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"index.html":{}}}],["position.domrect",{"_index":439,"title":{},"body":{"index.html":{}}}],["position.height",{"_index":388,"title":{},"body":{"index.html":{}}}],["position.width",{"_index":386,"title":{},"body":{"index.html":{}}}],["position.x",{"_index":380,"title":{},"body":{"index.html":{}}}],["position.y",{"_index":384,"title":{},"body":{"index.html":{}}}],["positions",{"_index":248,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["private",{"_index":18,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["prod",{"_index":464,"title":{},"body":{"index.html":{}}}],["production",{"_index":466,"title":{},"body":{"index.html":{}}}],["project",{"_index":458,"title":{},"body":{"index.html":{}}}],["projects/angular",{"_index":6,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{}}}],["promise.resolve().then",{"_index":167,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["properties",{"_index":17,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["protractor",{"_index":475,"title":{},"body":{"index.html":{}}}],["provide",{"_index":208,"title":{},"body":{"modules/AngularCollisionModule.html":{}}}],["providedin",{"_index":255,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["providers",{"_index":191,"title":{},"body":{"modules/AngularCollisionModule.html":{},"overview.html":{}}}],["public",{"_index":26,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"index.html":{}}}],["px",{"_index":382,"title":{},"body":{"index.html":{}}}],["querylist",{"_index":236,"title":{},"body":{"injectables/AngularCollisionService.html":{},"index.html":{}}}],["rect",{"_index":395,"title":{},"body":{"index.html":{}}}],["rectangle",{"_index":437,"title":{},"body":{"index.html":{}}}],["rectangle.name",{"_index":438,"title":{},"body":{"index.html":{}}}],["rectanglechange",{"_index":31,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["rectanglename",{"_index":433,"title":{},"body":{"index.html":{}}}],["rectangles",{"_index":420,"title":{},"body":{"index.html":{}}}],["rectanglesenum",{"_index":434,"title":{},"body":{"index.html":{}}}],["red",{"_index":394,"title":{},"body":{"index.html":{}}}],["register",{"_index":219,"title":{},"body":{"injectables/AngularCollisionService.html":{},"index.html":{}}}],["register(elements",{"_index":235,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["relative",{"_index":402,"title":{},"body":{"index.html":{}}}],["remove",{"_index":220,"title":{},"body":{"injectables/AngularCollisionService.html":{},"index.html":{}}}],["remove(elements",{"_index":238,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["removetrackedelement",{"_index":221,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["removetrackedelement(element",{"_index":240,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["reset",{"_index":197,"title":{},"body":{"modules/AngularCollisionModule.html":{},"overview.html":{}}}],["result",{"_index":181,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["results",{"_index":183,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["return",{"_index":207,"title":{},"body":{"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{}}}],["returns",{"_index":82,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{}}}],["root",{"_index":256,"title":{},"body":{"injectables/AngularCollisionService.html":{},"index.html":{}}}],["run",{"_index":455,"title":{},"body":{"index.html":{}}}],["running",{"_index":442,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":129,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":253,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["same",{"_index":123,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["scss",{"_index":389,"title":{},"body":{"index.html":{}}}],["second",{"_index":227,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["second.bottom",{"_index":286,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["second.left",{"_index":288,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["second.right",{"_index":289,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["second.top",{"_index":284,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["selector",{"_index":14,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"index.html":{}}}],["serve",{"_index":445,"title":{},"body":{"index.html":{}}}],["service",{"_index":323,"title":{},"body":{"interfaces/NgcTrackedElement.html":{},"index.html":{}}}],["settimeout",{"_index":427,"title":{},"body":{"index.html":{}}}],["simplechanges",{"_index":86,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["solid",{"_index":400,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["start",{"_index":90,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["started",{"_index":359,"title":{"index.html":{}},"body":{}}],["starttracking",{"_index":37,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["statements",{"_index":327,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":24,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["status",{"_index":101,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["stop",{"_index":93,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["stoptracking",{"_index":38,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["stoptrackingfirstelement",{"_index":430,"title":{},"body":{"index.html":{}}}],["stored",{"_index":460,"title":{},"body":{"index.html":{}}}],["styleurls",{"_index":416,"title":{},"body":{"index.html":{}}}],["subject",{"_index":105,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["subscribe((change",{"_index":296,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["subscribe((elementsmap",{"_index":260,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["subscription",{"_index":110,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{}}}],["support",{"_index":476,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":477,"title":{},"body":{"modules.html":{}}}],["table",{"_index":340,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":339,"title":{},"body":{"coverage.html":{}}}],["takeuntil",{"_index":251,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["template",{"_index":376,"title":{},"body":{"index.html":{}}}],["templateurl",{"_index":414,"title":{},"body":{"index.html":{}}}],["test",{"_index":469,"title":{},"body":{"index.html":{}}}],["tests",{"_index":468,"title":{},"body":{"index.html":{}}}],["this._active",{"_index":159,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this._collision$.asobservable",{"_index":150,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this._collision$.next(active",{"_index":169,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this._disableinterval",{"_index":153,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this._intervaltime",{"_index":151,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this._intervaltime).subscribe",{"_index":177,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this._timersubscription",{"_index":175,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this._timersubscription.closed",{"_index":179,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this._timersubscription.unsubscribe",{"_index":180,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.addtrackedelement(element",{"_index":279,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["this.addtrackedelement(elements",{"_index":280,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["this.checkelementscollision",{"_index":268,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["this.checkposition",{"_index":160,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.collision",{"_index":149,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.collisionactive",{"_index":168,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.collisionactivechange.emit",{"_index":170,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.collisions.set(change.id",{"_index":441,"title":{},"body":{"index.html":{}}}],["this.destroy$.next(this.id",{"_index":162,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.element.nativeelement.getboundingclientrect",{"_index":172,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.id",{"_index":147,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.rectanglechange$.next",{"_index":173,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.rectanglechange.emit",{"_index":174,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.rectangles.find",{"_index":436,"title":{},"body":{"index.html":{}}}],["this.removetrackedelement(element",{"_index":281,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["this.removetrackedelement(elements",{"_index":282,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["this.service.register(this.elements",{"_index":426,"title":{},"body":{"index.html":{}}}],["this.service.remove(this.elements.first",{"_index":431,"title":{},"body":{"index.html":{}}}],["this.stoptrackingfirstelement",{"_index":428,"title":{},"body":{"index.html":{}}}],["this.trackedelements",{"_index":310,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["this.trackedelements.filter",{"_index":311,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["this.trackedelements.find",{"_index":304,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["this.trackedelements.push",{"_index":300,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["this.trackedelements.some((el",{"_index":290,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["this.trackedelementspositions",{"_index":258,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["this.trackedelementspositions$.next(this.trackedelementspositions",{"_index":299,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["this.trackedelementspositions.delete(element.id",{"_index":302,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["this.trackedelementspositions.set(change.element.id",{"_index":297,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["this.trackedelementspositionsubscription",{"_index":257,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["this.trackedelementspositionsubscription.closed",{"_index":274,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["this.trackedelementspositionsubscription.unsubscribe",{"_index":275,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["this.unsubscribe",{"_index":161,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["this.updatecollisionstate(false",{"_index":178,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["three",{"_index":424,"title":{},"body":{"index.html":{}}}],["throttletime",{"_index":252,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["time",{"_index":72,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{}}}],["timer",{"_index":95,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["timer(0",{"_index":176,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["todo",{"_index":261,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["top",{"_index":404,"title":{},"body":{"index.html":{}}}],["tracked",{"_index":245,"title":{},"body":{"injectables/AngularCollisionService.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{}}}],["trackedelement",{"_index":305,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["trackedelement.id",{"_index":306,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["trackedelements",{"_index":214,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["trackedelementspositions",{"_index":215,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["trackedelementspositionsubscription",{"_index":216,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["tracking",{"_index":91,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"index.html":{}}}],["transparent",{"_index":401,"title":{},"body":{"index.html":{}}}],["true",{"_index":114,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["tslib",{"_index":354,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":231,"title":{},"body":{"injectables/AngularCollisionService.html":{},"index.html":{}}}],["type",{"_index":58,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"modules/AngularCollisionModule.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{},"interfaces/NgcTrackedElement.html":{},"coverage.html":{}}}],["unique",{"_index":121,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["unit",{"_index":467,"title":{},"body":{"index.html":{}}}],["unsubscribe",{"_index":39,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["update",{"_index":100,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["updatecollisionstate",{"_index":40,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{}}}],["updatecollisionstate(active",{"_index":97,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["use",{"_index":463,"title":{},"body":{"index.html":{}}}],["usevalue",{"_index":209,"title":{},"body":{"modules/AngularCollisionModule.html":{}}}],["value",{"_index":69,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"classes/NgcConfig.html":{},"interfaces/NgcElementChange.html":{}}}],["via",{"_index":471,"title":{},"body":{"index.html":{}}}],["viewchildren(angularcollisiondirective",{"_index":419,"title":{},"body":{"index.html":{}}}],["void",{"_index":83,"title":{},"body":{"directives/AngularCollisionDirective.html":{},"injectables/AngularCollisionService.html":{},"interfaces/NgcCollisionChange.html":{},"interfaces/NgcElementChange.html":{},"index.html":{}}}],["w",{"_index":385,"title":{},"body":{"index.html":{}}}],["width",{"_index":396,"title":{},"body":{"index.html":{}}}],["work",{"_index":262,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["wrapper",{"_index":250,"title":{},"body":{"injectables/AngularCollisionService.html":{}}}],["x",{"_index":379,"title":{},"body":{"index.html":{}}}],["y",{"_index":383,"title":{},"body":{"index.html":{}}}],["yes",{"_index":60,"title":{},"body":{"directives/AngularCollisionDirective.html":{}}}],["zone.js",{"_index":356,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":196,"title":{},"body":{"modules/AngularCollisionModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"directives/AngularCollisionDirective.html":{"url":"directives/AngularCollisionDirective.html","title":"directive - AngularCollisionDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  AngularCollisionDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-collision/src/lib/angular-collision.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            OnChanges\n                            AfterContentChecked\n                            OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [ngcAngularCollision]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _active\n                            \n                            \n                                    Private\n                                _collision$\n                            \n                            \n                                    Private\n                                _disableInterval\n                            \n                            \n                                    Private\n                                _intervalTime\n                            \n                            \n                                    Private\n                                _timerSubscription\n                            \n                            \n                                    Private\n                                    Static\n                                _uid\n                            \n                            \n                                    Public\n                                collision\n                            \n                            \n                                    Public\n                                collision$\n                            \n                            \n                                    Public\n                                destroy$\n                            \n                            \n                                    Public\n                                element\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                rectangleChange$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                checkPosition\n                            \n                            \n                                    Public\n                                ngAfterContentChecked\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                startTracking\n                            \n                            \n                                    Public\n                                stopTracking\n                            \n                            \n                                    Public\n                                unsubscribe\n                            \n                            \n                                    Public\n                                updateCollisionState\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disableInterval\n                            \n                            \n                                intervalTime\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                collisionActiveChange\n                            \n                            \n                                rectangleChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class.collision\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(element: ElementRef, config?: NgcConfig)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:96\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        NgcConfig\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        disableInterval\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:43\n                            \n                        \n                \n                    \n                        Disable interval position checking\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        intervalTime\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 100\n                    \n                \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:48\n                            \n                        \n                \n                    \n                        Interval time for position checking\n\n                    \n                \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        collisionActiveChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:60\n                            \n                        \n                \n                    \n                        Element's collision changes\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        rectangleChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:53\n                            \n                        \n                \n                    \n                        Element's position changes\n\n                    \n                \n            \n        \n\n            \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class.collision\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:64\n                            \n                        \n\n\n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            checkPosition\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkPosition()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:155\n                \n            \n\n\n            \n                \n                    Check and emit element position\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngAfterContentChecked\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterContentChecked()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            startTracking\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    startTracking()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:165\n                \n            \n\n\n            \n                \n                    Start tracking element\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            stopTracking\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    stopTracking()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:178\n                \n            \n\n\n            \n                \n                    Stop tracking element\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            unsubscribe\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    unsubscribe()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:187\n                \n            \n\n\n            \n                \n                    Unsubscribe timer observable\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateCollisionState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateCollisionState(active: boolean, collidedElements: AngularCollisionDirective[])\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:135\n                \n            \n\n\n            \n                \n                    Update collision status\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    active\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    collidedElements\n                                    \n                                            AngularCollisionDirective[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _active\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:93\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _collision$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:91\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _disableInterval\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:95\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _intervalTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:94\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _timerSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:92\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            _uid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:96\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            collision\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:84\n                            \n                        \n\n                \n                    \n                        True if element has any collision\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            collision$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:89\n                            \n                        \n\n                \n                    \n                        Observable of collision value\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            destroy$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:74\n                            \n                        \n\n                \n                    \n                        Observable that emits on instance destroy\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            element\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:98\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:79\n                            \n                        \n\n                \n                    \n                        Unique id for directive instance\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rectangleChange$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.directive.ts:69\n                            \n                        \n\n                \n                    \n                        Element's collision changes as observable, same as output\n\n                    \n                \n\n            \n        \n\n\n\n    \n\n\n    \n        import {\n  Directive,\n  AfterContentChecked,\n  ElementRef,\n  Output,\n  EventEmitter,\n  OnDestroy,\n  Input,\n  HostBinding,\n  Optional,\n  OnChanges,\n  SimpleChanges,\n} from '@angular/core';\nimport { timer, Subscription, Subject, Observable } from 'rxjs';\nimport { NgcConfig } from './models/ngc-config.model';\n\n/**\n * Object containing changed element's domRect and element itself\n */\nexport interface NgcElementChange {\n  domRect: DOMRect;\n  element: AngularCollisionDirective;\n}\n\n/**\n * Object with info about element's collisions\n */\nexport interface NgcCollisionChange {\n  id: number;\n  active: boolean;\n  collidedElements: AngularCollisionDirective[];\n}\n\n@Directive({\n  selector: '[ngcAngularCollision]',\n  exportAs: 'ngcAngularCollision',\n})\nexport class AngularCollisionDirective\n  implements OnChanges, AfterContentChecked, OnDestroy {\n  /**\n   * Disable interval position checking\n   */\n  @Input() public disableInterval: boolean;\n\n  /**\n   * Interval time for position checking\n   */\n  @Input() public intervalTime: number = 100;\n\n  /**\n   * Element's position changes\n   */\n  @Output() public rectangleChange: EventEmitter = new EventEmitter();\n\n  /**\n   * Element's collision changes\n   */\n  @Output() public collisionActiveChange: EventEmitter = new EventEmitter();\n\n  @HostBinding('class.collision') private collisionActive: boolean;\n\n  /**\n   * Element's collision changes as observable, same as output\n   */\n  public rectangleChange$: Subject = new Subject();\n\n  /**\n   * Observable that emits on instance destroy\n   */\n  public destroy$: Subject = new Subject();\n\n  /**\n   * Unique id for directive instance\n   */\n  public id: number;\n\n  /**\n   * True if element has any collision\n   */\n  public collision: boolean;\n\n  /**\n   * Observable of collision value\n   */\n  public collision$: Observable;\n\n  private _collision$: Subject = new Subject();\n  private _timerSubscription: Subscription;\n  private _active: boolean = false;\n  private _intervalTime: number;\n  private _disableInterval: boolean;\n  private static _uid: number = 0;\n\n  constructor(public element: ElementRef, @Optional() config?: NgcConfig) {\n    this.id = AngularCollisionDirective._uid++;\n    this.collision$ = this._collision$.asObservable();\n\n    if (config) {\n      this._intervalTime = config.intervalTime;\n      this._disableInterval = config.disableInterval;\n    }\n  }\n\n  public ngOnChanges(changes: SimpleChanges): void {\n    if (changes.intervalTime) {\n      this._intervalTime = changes.intervalTime.currentValue;\n    }\n\n    if (changes.disableInterval) {\n      this._disableInterval = changes.disableInterval.currentValue;\n    }\n  }\n\n  public ngAfterContentChecked(): void {\n    if (this._active) {\n      this.checkPosition();\n    }\n  }\n\n  public ngOnDestroy(): void {\n    this.unsubscribe();\n    this.destroy$.next(this.id);\n  }\n\n  /**\n   * Update collision status\n   *\n   * @param active\n   * @param collidedIds\n   */\n  public updateCollisionState(\n    active: boolean,\n    collidedElements: AngularCollisionDirective[]\n  ): void {\n    // Fix for ExpressionChangedAfterItHasBeenCheckedError\n    Promise.resolve().then(() => {\n      this.collisionActive = active;\n      this.collision = active;\n      this._collision$.next(active);\n      this.collisionActiveChange.emit({\n        id: this.id,\n        active,\n        collidedElements,\n      });\n    });\n  }\n\n  /**\n   * Check and emit element position\n   */\n  public checkPosition(): void {\n    const domRect: DOMRect = this.element.nativeElement.getBoundingClientRect();\n\n    this.rectangleChange$.next({ domRect, element: this });\n    this.rectangleChange.emit({ domRect, element: this });\n  }\n\n  /**\n   * Start tracking element\n   */\n  public startTracking(): void {\n    this._active = true;\n\n    if (!this._disableInterval) {\n      this._timerSubscription = timer(0, this._intervalTime).subscribe(() => {\n        this.checkPosition();\n      });\n    }\n  }\n\n  /**\n   * Stop tracking element\n   */\n  public stopTracking(): void {\n    this._active = false;\n    this.updateCollisionState(false, []);\n    this.unsubscribe();\n  }\n\n  /**\n   * Unsubscribe timer observable\n   */\n  public unsubscribe(): void {\n    if (this._timerSubscription && !this._timerSubscription.closed) {\n      this._timerSubscription.unsubscribe();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AngularCollisionModule.html":{"url":"modules/AngularCollisionModule.html","title":"module - AngularCollisionModule","body":"\n                   \n\n\n\n\n    Modules\n    AngularCollisionModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AngularCollisionModule\n\n\n\ncluster_AngularCollisionModule_exports\n\n\n\ncluster_AngularCollisionModule_declarations\n\n\n\n\nAngularCollisionDirective\n\nAngularCollisionDirective\n\n\n\nAngularCollisionModule\n\nAngularCollisionModule\n\nAngularCollisionModule -->\n\nAngularCollisionDirective->AngularCollisionModule\n\n\n\n\n\nAngularCollisionDirective \n\nAngularCollisionDirective \n\nAngularCollisionDirective  -->\n\nAngularCollisionModule->AngularCollisionDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/angular-collision/src/lib/angular-collision.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AngularCollisionDirective\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AngularCollisionDirective\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(config: NgcConfig)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.module.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                NgcConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { AngularCollisionDirective } from './angular-collision.directive';\nimport { NgcConfig } from './models/ngc-config.model';\n\n@NgModule({\n  declarations: [AngularCollisionDirective],\n  exports: [AngularCollisionDirective],\n})\nexport class AngularCollisionModule {\n  static forRoot(\n    config: NgcConfig\n  ): ModuleWithProviders {\n    return {\n      ngModule: AngularCollisionModule,\n      providers: [{ provide: NgcConfig, useValue: config }],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AngularCollisionService.html":{"url":"injectables/AngularCollisionService.html","title":"injectable - AngularCollisionService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AngularCollisionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-collision/src/lib/angular-collision.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                trackedElements\n                            \n                            \n                                    Public\n                                trackedElementsPositions\n                            \n                            \n                                    Public\n                                trackedElementsPositions$\n                            \n                            \n                                    Public\n                                trackedElementsPositionSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addTrackedElement\n                            \n                            \n                                    Private\n                                checkElementsCollision\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                register\n                            \n                            \n                                    Public\n                                remove\n                            \n                            \n                                    Private\n                                removeTrackedElement\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/angular-collision/src/lib/angular-collision.service.ts:31\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            addTrackedElement\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addTrackedElement(element: AngularCollisionDirective)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.service.ts:131\n                \n            \n\n\n            \n                \n                    Init tracking of element\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    element\n                                    \n                                            AngularCollisionDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            checkElementsCollision\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkElementsCollision(first: DOMRect, second: DOMRect)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.service.ts:115\n                \n            \n\n\n            \n                \n                    Checks collisions between two elements\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    first\n                                    \n                                            DOMRect\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    second\n                                    \n                                            DOMRect\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            register\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    register(elements: QueryList | AngularCollisionDirective | AngularCollisionDirective[])\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.service.ts:74\n                \n            \n\n\n            \n                \n                    Start tracking element / elements\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    elements\n                                    \n                                            QueryList | AngularCollisionDirective | AngularCollisionDirective[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(elements: QueryList | AngularCollisionDirective | AngularCollisionDirective[])\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.service.ts:94\n                \n            \n\n\n            \n                \n                    Stop tracking element / elements\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    elements\n                                    \n                                            QueryList | AngularCollisionDirective | AngularCollisionDirective[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            removeTrackedElement\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeTrackedElement(element: AngularCollisionDirective)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-collision/src/lib/angular-collision.service.ts:149\n                \n            \n\n\n            \n                \n                    Finish tracking of element\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    element\n                                    \n                                            AngularCollisionDirective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            trackedElements\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgcTrackedElement[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.service.ts:17\n                            \n                        \n\n                \n                    \n                        Tracked elements\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            trackedElementsPositions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Map\n\n                        \n                    \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.service.ts:22\n                            \n                        \n\n                \n                    \n                        Map of tracked elements positions\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            trackedElementsPositions$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Subject>\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.service.ts:27\n                            \n                        \n\n                \n                    \n                        Observable wrapper of tracked elements positions\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            trackedElementsPositionSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/angular-collision.service.ts:31\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, OnDestroy, QueryList } from '@angular/core';\nimport { takeUntil, throttleTime } from 'rxjs/operators';\nimport { Subject, Subscription } from 'rxjs';\nimport {\n  AngularCollisionDirective,\n  NgcElementChange,\n} from './angular-collision.directive';\nimport { NgcTrackedElement } from './models/ngc-tracked-element.interface';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AngularCollisionService implements OnDestroy {\n  /**\n   *  Tracked elements\n   */\n  public trackedElements: NgcTrackedElement[] = [];\n\n  /**\n   *  Map of tracked elements positions\n   */\n  public trackedElementsPositions: Map = new Map();\n\n  /**\n   *  Observable wrapper of tracked elements positions\n   */\n  public trackedElementsPositions$: Subject\n  > = new Subject();\n\n  public trackedElementsPositionSubscription: Subscription;\n\n  constructor() {\n    this.trackedElementsPositionSubscription = this.trackedElementsPositions$\n      .pipe(throttleTime(100))\n      .subscribe((elementsMap: Map) => {\n        // TODO work on performance\n        elementsMap.forEach((element: NgcElementChange, id: number) => {\n          const collisions: AngularCollisionDirective[] = [];\n\n          elementsMap.forEach(\n            (innerElement: NgcElementChange, innerId: number) => {\n              if (\n                id !== innerId &&\n                this.checkElementsCollision(\n                  element.domRect,\n                  innerElement.domRect\n                )\n              ) {\n                collisions.push(innerElement.element);\n              }\n            }\n          );\n\n          element.element.updateCollisionState(\n            collisions.length > 0,\n            collisions\n          );\n        });\n      });\n  }\n\n  public ngOnDestroy(): void {\n    if (!this.trackedElementsPositionSubscription.closed) {\n      this.trackedElementsPositionSubscription.unsubscribe();\n    }\n  }\n\n  /**\n   * Start tracking element / elements\n   *\n   * @param elements\n   */\n  public register(\n    elements:\n      | QueryList\n      | AngularCollisionDirective\n      | AngularCollisionDirective[]\n  ): void {\n    if (Array.isArray(elements) || elements instanceof QueryList) {\n      elements.forEach((element) => {\n        this.addTrackedElement(element);\n      });\n    } else {\n      this.addTrackedElement(elements);\n    }\n  }\n\n  /**\n   * Stop tracking element / elements\n   *\n   * @param elements\n   */\n  public remove(\n    elements:\n      | QueryList\n      | AngularCollisionDirective\n      | AngularCollisionDirective[]\n  ): void {\n    if (Array.isArray(elements) || elements instanceof QueryList) {\n      elements.forEach((element) => {\n        this.removeTrackedElement(element);\n      });\n    } else {\n      this.removeTrackedElement(elements);\n    }\n  }\n\n  /**\n   * Checks collisions between two elements\n   *\n   * @param first\n   * @param second\n   */\n  private checkElementsCollision(first: DOMRect, second: DOMRect): boolean {\n    return (\n      ((first.top = second.top) ||\n        (first.bottom = second.top) ||\n        (first.top = second.bottom)) &&\n      ((first.left >= second.left && first.left = second.left) ||\n        (first.left = second.right))\n    );\n  }\n\n  /**\n   * Init tracking of element\n   *\n   * @param element\n   */\n  private addTrackedElement(element: AngularCollisionDirective): void {\n    if (!this.trackedElements.some((el) => el.id == element.id)) {\n      element.startTracking();\n      const subscription = element.rectangleChange$\n        .pipe(takeUntil(element.destroy$))\n        .subscribe((change: NgcElementChange) => {\n          this.trackedElementsPositions.set(change.element.id, change);\n          this.trackedElementsPositions$.next(this.trackedElementsPositions);\n        });\n      this.trackedElements.push({ id: element.id, subscription });\n    }\n  }\n\n  /**\n   * Finish tracking of element\n   *\n   * @param element\n   */\n  private removeTrackedElement(element: AngularCollisionDirective): void {\n    element.stopTracking();\n\n    this.trackedElementsPositions.delete(element.id);\n    this.trackedElementsPositions$.next(this.trackedElementsPositions);\n\n    const foundElement = this.trackedElements.find(\n      (trackedElement) => trackedElement.id === element.id\n    );\n\n    if (foundElement?.subscription && !foundElement.subscription.closed) {\n      foundElement.subscription.unsubscribe();\n    }\n\n    this.trackedElements = this.trackedElements.filter(\n      (trackedElement) => trackedElement.id !== element.id\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgcCollisionChange.html":{"url":"interfaces/NgcCollisionChange.html","title":"interface - NgcCollisionChange","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgcCollisionChange\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-collision/src/lib/angular-collision.directive.ts\n        \n\n            \n                Description\n            \n            \n                Object with info about element's collisions\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        active\n                                \n                                \n                                        collidedElements\n                                \n                                \n                                        id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        active\n                                    \n                                \n                                \n                                    \n                                        active:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        collidedElements\n                                    \n                                \n                                \n                                    \n                                        collidedElements:     AngularCollisionDirective[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     AngularCollisionDirective[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Directive,\n  AfterContentChecked,\n  ElementRef,\n  Output,\n  EventEmitter,\n  OnDestroy,\n  Input,\n  HostBinding,\n  Optional,\n  OnChanges,\n  SimpleChanges,\n} from '@angular/core';\nimport { timer, Subscription, Subject, Observable } from 'rxjs';\nimport { NgcConfig } from './models/ngc-config.model';\n\n/**\n * Object containing changed element's domRect and element itself\n */\nexport interface NgcElementChange {\n  domRect: DOMRect;\n  element: AngularCollisionDirective;\n}\n\n/**\n * Object with info about element's collisions\n */\nexport interface NgcCollisionChange {\n  id: number;\n  active: boolean;\n  collidedElements: AngularCollisionDirective[];\n}\n\n@Directive({\n  selector: '[ngcAngularCollision]',\n  exportAs: 'ngcAngularCollision',\n})\nexport class AngularCollisionDirective\n  implements OnChanges, AfterContentChecked, OnDestroy {\n  /**\n   * Disable interval position checking\n   */\n  @Input() public disableInterval: boolean;\n\n  /**\n   * Interval time for position checking\n   */\n  @Input() public intervalTime: number = 100;\n\n  /**\n   * Element's position changes\n   */\n  @Output() public rectangleChange: EventEmitter = new EventEmitter();\n\n  /**\n   * Element's collision changes\n   */\n  @Output() public collisionActiveChange: EventEmitter = new EventEmitter();\n\n  @HostBinding('class.collision') private collisionActive: boolean;\n\n  /**\n   * Element's collision changes as observable, same as output\n   */\n  public rectangleChange$: Subject = new Subject();\n\n  /**\n   * Observable that emits on instance destroy\n   */\n  public destroy$: Subject = new Subject();\n\n  /**\n   * Unique id for directive instance\n   */\n  public id: number;\n\n  /**\n   * True if element has any collision\n   */\n  public collision: boolean;\n\n  /**\n   * Observable of collision value\n   */\n  public collision$: Observable;\n\n  private _collision$: Subject = new Subject();\n  private _timerSubscription: Subscription;\n  private _active: boolean = false;\n  private _intervalTime: number;\n  private _disableInterval: boolean;\n  private static _uid: number = 0;\n\n  constructor(public element: ElementRef, @Optional() config?: NgcConfig) {\n    this.id = AngularCollisionDirective._uid++;\n    this.collision$ = this._collision$.asObservable();\n\n    if (config) {\n      this._intervalTime = config.intervalTime;\n      this._disableInterval = config.disableInterval;\n    }\n  }\n\n  public ngOnChanges(changes: SimpleChanges): void {\n    if (changes.intervalTime) {\n      this._intervalTime = changes.intervalTime.currentValue;\n    }\n\n    if (changes.disableInterval) {\n      this._disableInterval = changes.disableInterval.currentValue;\n    }\n  }\n\n  public ngAfterContentChecked(): void {\n    if (this._active) {\n      this.checkPosition();\n    }\n  }\n\n  public ngOnDestroy(): void {\n    this.unsubscribe();\n    this.destroy$.next(this.id);\n  }\n\n  /**\n   * Update collision status\n   *\n   * @param active\n   * @param collidedIds\n   */\n  public updateCollisionState(\n    active: boolean,\n    collidedElements: AngularCollisionDirective[]\n  ): void {\n    // Fix for ExpressionChangedAfterItHasBeenCheckedError\n    Promise.resolve().then(() => {\n      this.collisionActive = active;\n      this.collision = active;\n      this._collision$.next(active);\n      this.collisionActiveChange.emit({\n        id: this.id,\n        active,\n        collidedElements,\n      });\n    });\n  }\n\n  /**\n   * Check and emit element position\n   */\n  public checkPosition(): void {\n    const domRect: DOMRect = this.element.nativeElement.getBoundingClientRect();\n\n    this.rectangleChange$.next({ domRect, element: this });\n    this.rectangleChange.emit({ domRect, element: this });\n  }\n\n  /**\n   * Start tracking element\n   */\n  public startTracking(): void {\n    this._active = true;\n\n    if (!this._disableInterval) {\n      this._timerSubscription = timer(0, this._intervalTime).subscribe(() => {\n        this.checkPosition();\n      });\n    }\n  }\n\n  /**\n   * Stop tracking element\n   */\n  public stopTracking(): void {\n    this._active = false;\n    this.updateCollisionState(false, []);\n    this.unsubscribe();\n  }\n\n  /**\n   * Unsubscribe timer observable\n   */\n  public unsubscribe(): void {\n    if (this._timerSubscription && !this._timerSubscription.closed) {\n      this._timerSubscription.unsubscribe();\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NgcConfig.html":{"url":"classes/NgcConfig.html","title":"class - NgcConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NgcConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-collision/src/lib/models/ngc-config.model.ts\n        \n\n            \n                Description\n            \n            \n                Optional module config\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                disableInterval\n                            \n                            \n                                    Public\n                                intervalTime\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(disableInterval: boolean, intervalTime: number)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-collision/src/lib/models/ngc-config.model.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        disableInterval\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        intervalTime\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            disableInterval\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/models/ngc-config.model.ts:9\n                            \n                        \n\n                \n                    \n                        Disable interval position checking\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            intervalTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 100\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-collision/src/lib/models/ngc-config.model.ts:13\n                            \n                        \n\n                \n                    \n                        Interval time for position checking\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class NgcConfig {\n  constructor(\n    /**\n     * Disable interval position checking\n     */\n    public disableInterval: boolean = false,\n    /**\n     * Interval time for position checking\n     */\n    public intervalTime: number = 100\n  ) {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgcElementChange.html":{"url":"interfaces/NgcElementChange.html","title":"interface - NgcElementChange","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgcElementChange\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-collision/src/lib/angular-collision.directive.ts\n        \n\n            \n                Description\n            \n            \n                Object containing changed element's domRect and element itself\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        domRect\n                                \n                                \n                                        element\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        domRect\n                                    \n                                \n                                \n                                    \n                                        domRect:     DOMRect\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DOMRect\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        element\n                                    \n                                \n                                \n                                    \n                                        element:     AngularCollisionDirective\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     AngularCollisionDirective\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Directive,\n  AfterContentChecked,\n  ElementRef,\n  Output,\n  EventEmitter,\n  OnDestroy,\n  Input,\n  HostBinding,\n  Optional,\n  OnChanges,\n  SimpleChanges,\n} from '@angular/core';\nimport { timer, Subscription, Subject, Observable } from 'rxjs';\nimport { NgcConfig } from './models/ngc-config.model';\n\n/**\n * Object containing changed element's domRect and element itself\n */\nexport interface NgcElementChange {\n  domRect: DOMRect;\n  element: AngularCollisionDirective;\n}\n\n/**\n * Object with info about element's collisions\n */\nexport interface NgcCollisionChange {\n  id: number;\n  active: boolean;\n  collidedElements: AngularCollisionDirective[];\n}\n\n@Directive({\n  selector: '[ngcAngularCollision]',\n  exportAs: 'ngcAngularCollision',\n})\nexport class AngularCollisionDirective\n  implements OnChanges, AfterContentChecked, OnDestroy {\n  /**\n   * Disable interval position checking\n   */\n  @Input() public disableInterval: boolean;\n\n  /**\n   * Interval time for position checking\n   */\n  @Input() public intervalTime: number = 100;\n\n  /**\n   * Element's position changes\n   */\n  @Output() public rectangleChange: EventEmitter = new EventEmitter();\n\n  /**\n   * Element's collision changes\n   */\n  @Output() public collisionActiveChange: EventEmitter = new EventEmitter();\n\n  @HostBinding('class.collision') private collisionActive: boolean;\n\n  /**\n   * Element's collision changes as observable, same as output\n   */\n  public rectangleChange$: Subject = new Subject();\n\n  /**\n   * Observable that emits on instance destroy\n   */\n  public destroy$: Subject = new Subject();\n\n  /**\n   * Unique id for directive instance\n   */\n  public id: number;\n\n  /**\n   * True if element has any collision\n   */\n  public collision: boolean;\n\n  /**\n   * Observable of collision value\n   */\n  public collision$: Observable;\n\n  private _collision$: Subject = new Subject();\n  private _timerSubscription: Subscription;\n  private _active: boolean = false;\n  private _intervalTime: number;\n  private _disableInterval: boolean;\n  private static _uid: number = 0;\n\n  constructor(public element: ElementRef, @Optional() config?: NgcConfig) {\n    this.id = AngularCollisionDirective._uid++;\n    this.collision$ = this._collision$.asObservable();\n\n    if (config) {\n      this._intervalTime = config.intervalTime;\n      this._disableInterval = config.disableInterval;\n    }\n  }\n\n  public ngOnChanges(changes: SimpleChanges): void {\n    if (changes.intervalTime) {\n      this._intervalTime = changes.intervalTime.currentValue;\n    }\n\n    if (changes.disableInterval) {\n      this._disableInterval = changes.disableInterval.currentValue;\n    }\n  }\n\n  public ngAfterContentChecked(): void {\n    if (this._active) {\n      this.checkPosition();\n    }\n  }\n\n  public ngOnDestroy(): void {\n    this.unsubscribe();\n    this.destroy$.next(this.id);\n  }\n\n  /**\n   * Update collision status\n   *\n   * @param active\n   * @param collidedIds\n   */\n  public updateCollisionState(\n    active: boolean,\n    collidedElements: AngularCollisionDirective[]\n  ): void {\n    // Fix for ExpressionChangedAfterItHasBeenCheckedError\n    Promise.resolve().then(() => {\n      this.collisionActive = active;\n      this.collision = active;\n      this._collision$.next(active);\n      this.collisionActiveChange.emit({\n        id: this.id,\n        active,\n        collidedElements,\n      });\n    });\n  }\n\n  /**\n   * Check and emit element position\n   */\n  public checkPosition(): void {\n    const domRect: DOMRect = this.element.nativeElement.getBoundingClientRect();\n\n    this.rectangleChange$.next({ domRect, element: this });\n    this.rectangleChange.emit({ domRect, element: this });\n  }\n\n  /**\n   * Start tracking element\n   */\n  public startTracking(): void {\n    this._active = true;\n\n    if (!this._disableInterval) {\n      this._timerSubscription = timer(0, this._intervalTime).subscribe(() => {\n        this.checkPosition();\n      });\n    }\n  }\n\n  /**\n   * Stop tracking element\n   */\n  public stopTracking(): void {\n    this._active = false;\n    this.updateCollisionState(false, []);\n    this.unsubscribe();\n  }\n\n  /**\n   * Unsubscribe timer observable\n   */\n  public unsubscribe(): void {\n    if (this._timerSubscription && !this._timerSubscription.closed) {\n      this._timerSubscription.unsubscribe();\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgcTrackedElement.html":{"url":"interfaces/NgcTrackedElement.html","title":"interface - NgcTrackedElement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgcTrackedElement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-collision/src/lib/models/ngc-tracked-element.interface.ts\n        \n\n            \n                Description\n            \n            \n                Tracked element in library service\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        subscription\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Element id\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subscription\n                                    \n                                \n                                \n                                    \n                                        subscription:     Subscription\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Subscription\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Element changes observable subscription\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Subscription } from 'rxjs';\n\n/**\n * Tracked element in library service\n */\nexport interface NgcTrackedElement {\n  /**\n   * Element id\n   */\n  id: number;\n\n  /**\n   * Element changes observable subscription\n   */\n  subscription: Subscription;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/angular-collision/src/lib/angular-collision.directive.ts\n            \n            directive\n            AngularCollisionDirective\n            \n                51 %\n                (14/27)\n            \n        \n        \n            \n                \n                projects/angular-collision/src/lib/angular-collision.directive.ts\n            \n            interface\n            NgcCollisionChange\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                projects/angular-collision/src/lib/angular-collision.directive.ts\n            \n            interface\n            NgcElementChange\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                projects/angular-collision/src/lib/angular-collision.service.ts\n            \n            injectable\n            AngularCollisionService\n            \n                66 %\n                (8/12)\n            \n        \n        \n            \n                \n                projects/angular-collision/src/lib/models/ngc-config.model.ts\n            \n            class\n            NgcConfig\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                projects/angular-collision/src/lib/models/ngc-tracked-element.interface.ts\n            \n            interface\n            NgcTrackedElement\n            \n                100 %\n                (3/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~10.1.5\n        \n            @angular/common : ~10.1.5\n        \n            @angular/compiler : ~10.1.5\n        \n            @angular/core : ~10.1.5\n        \n            @angular/forms : ~10.1.5\n        \n            @angular/platform-browser : ~10.1.5\n        \n            @angular/platform-browser-dynamic : ~10.1.5\n        \n            @angular/router : ~10.1.5\n        \n            @angular/cdk : ^10.2.4\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNgCollision\nAngular 10 library for elements collision detection\nAuto-generated documentation\nExample\n\nModule (add AngularCollisionModule to imports, forRoot is optional to pass config - in this case disable interval collision checking)\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    AngularCollisionModule.forRoot(new NgcConfig(true)),\n    CommonModule,\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\nTemplate (add ngcAngularCollision directive to any element)\n\n  \n    Example element ({{ directiveRef.collision$ | async }})\n      \n        X: {{ position.x | number: '1.0-0' }}px\n        Y: {{ position.y | number: '1.0-0' }}px\n        W: {{ position.width | number: '1.0-0' }}px\n        H: {{ position.height | number: '1.0-0' }}px\n      \n  \nSCSS (class collision is applied by directive to host element)\n\n.collision {\n  border-color: red;\n}\n\n.rect {\n  width: 150px;\n  height: 150px;\n  border: 2px solid transparent;\n  position: relative;\n\n\n  &__one {\n    top: 100px;\n    left: 100px;\n  }\n\n  &__two {\n    top: 50px;\n    left: 150px;\n  }\n\n   &__three {\n    top: 250px;\n    left: 300px;\n   }\n}\nComponent (register elements to collision checking with AngularCollisionService)\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements AfterViewInit {\n  @ViewChildren(AngularCollisionDirective) elements: QueryList;\n\n  public collisions: Map = new Map();\n\n  public rectangles: Array = [\n    {\n      name: 'one,\n      position: null,\n    },\n    {\n      name: 'two',\n      position: null,\n    },\n    {\n      name: 'three',\n      position: null,\n    },\n  ];\n\n  constructor(public service: AngularCollisionService) {}\n\n  public ngAfterViewInit(): void {\n    // Register elements for collision detection\n    this.service.register(this.elements);\n\n    setTimeout(() => {\n      this.stopTrackingFirstElement();\n    }, 10000);\n  }\n\n  public stopTrackingFirstElement(): void {\n    // Remove first element from tracking\n    this.service.remove(this.elements.first);\n  }\n\n  public handleRectChange(\n    position: NgcElementChange,\n    rectangleName: RectanglesEnum\n  ): void {\n    // Handle position changes\n    this.rectangles.find(\n      (rectangle) => rectangle.name === rectangleName\n    ).position = position.domRect;\n  }\n\n  public handleCollisionActiveChange(change: NgcCollisionChange): void {\n    // Handle collisions\n    this.collisions.set(change.id, change);\n  }\n}Running demo app\nng serve demo-app\nDrag & drop made with angular/cdk. Not a part of library.\nGenerate docs\nDocumentation is auto-generated every commit.\nYou can also generate docs manually by:\nnpm run compodoc\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AngularCollisionModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AngularCollisionModule\n\n\n\ncluster_AngularCollisionModule_declarations\n\n\n\ncluster_AngularCollisionModule_exports\n\n\n\n\nAngularCollisionDirective\n\nAngularCollisionDirective\n\n\n\nAngularCollisionModule\n\nAngularCollisionModule\n\nAngularCollisionModule -->\n\nAngularCollisionDirective->AngularCollisionModule\n\n\n\n\n\nAngularCollisionDirective \n\nAngularCollisionDirective \n\nAngularCollisionDirective  -->\n\nAngularCollisionModule->AngularCollisionDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
